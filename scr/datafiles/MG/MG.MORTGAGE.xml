<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>MG</product>
<table>MG.MORTGAGE</table>
</header>
<overview>
<ovdesc>

            <p>The MG.MORTGAGE application allows for the input and maintenance of mortgage loan, and personal loan contracts. This application defines the type of loan and therefore the method of repayment, the amount and currency lent, the rate of interest and the duration of the contract.  The periodic repayment amount, the date and frequency of repayments and the receiving account are also defined in this application. </p>
            <p>The main features of the application are summarised below: </p>
            <p>1. Product types and repayment methods. </p>
            <p>    A number of product types, each with its own method of repayment are available. These are: </p>
            <p>    Annuity These contracts repay a fixed amount each period consisting of both principal and interest. The proportion of principal to interest varies over the contract term, but their total is fixed. </p>
            <p>    Linear Contracts on a linear repayment scheme make regular fixed redemptions of principal and variable repayments of interest. This gives a reducing repayment amount each period. </p>
            <p>    Nonredem These loan types do not have any regular repayments of &amp; Saving principal, only interest. The principal is repaid at contract maturity. </p>
            <p>    Nonredem and Saving type contracts may be converted to redemption types if required. </p>
            <p>2. Grouping of associated contracts. </p>
            <p>     It is possible within this application to attach additional contracts to a "master" loan. This may be useful where secondary mortgages or subsidy contracts exist. Such linking provides additional cross validation between the associated contracts and serves as an aid to administration and reporting. </p>
            <p>3. Interest rates. </p>
            <p>    The interest rate on a loan is defined at contract level on this file. Interest rates are fixed but they may be derived from a floating rate key and a spread or margin. Although these interest rates are fixed they may be changed at any time during the life of a contract. Future review dates and frequencies may be recorded and subsequently used to report on contracts with forthcoming reviews. </p>
            <p>4. Contract term and repayment calculation. </p>
            <p>    The term of a loan is recorded on this file as a number of months. If required this term may be extended or shortened during the life of the contract. Repayment amounts are calculated automatically for redemption type loans (annuity and linear) based on the relevant contract parameters. However, the user may determine a different repayment amount if required. The repayment amount will be automatically recalculated if the contract term or interest rate is modified. Any new repayment amounts and their effective dates calculated in this way may be modified by the user to meet particular customer requirements. Similarly new repayment amounts may be entered manually when required. </p>
            <p>    In addition to periodic repayments of principal and interest, further "additional payment elements" may be requested. These can be used for the collection of insurance premiums or payments to an associated endowment scheme. </p>
            <p>5. Repayment collection. </p>
            <p>    Repayments are made automatically during the end of day batch processing. The date and frequency of repayments is defined on this file along with the account to which repayments are to be made. If required the repayment of principal on redemption type contracts may be deferred for a period at the start of the contract. A facility exists for charging a penalty fee on late payments. </p>
            <p>6. Charge processing. </p>
            <p>    Charges may be levied in relation to certain contract events such as initial drawdown of funds or interest rate revisions. The charges may be entered on this file in advance and will be applied on the relevant date.  If an amount is not entered on the charge field but a charge code is, then the amount to be charged will be calculated using the FT.CHARGE.TYPE record.  Charges can be levied in a currency other than the currency of the mortgage contract. </p>
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>JOINT.HOLDER</field>
<desc>
            <p>This field must contain a customer no. being made a joint holder of this contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>If entered this field must contain a valid customer number.</p>
            <p>Optional Field</p>
        </desc>
</t>
<t>
<field>FWD.BWD</field>
<desc>
            <p>This field is to indicate whether the cycling of schedules  need to consider holiday definition or not.</p>
            <p> Values allowed - FWD,BWD,FSM,CAL</p>
            <p>FWD – When the cycled date is a holiday, cycle the schedule dates to the next working date.</p>
            <p>BWD – When the cycled date is a holiday, cycle the schedule dates to the last working date.</p>
            <p>FSM – When the cycled date is a holiday, cycle the schedule dates to the next working date. If the next working date happens to be in the next month, re-track backwards and cycle the schedule date to the last working date in the same month.</p>
            <p>CAL – Do not consider holiday definition. Default value </p>
        </desc>
</t>
<t>
<field>TOTAL.PRINCIPAL</field>
<desc>
            <p>Specifies the total principal amount of this contract and all associated contracts entered in the ASSOC.CONTRACT field. </p>
            <p>This field is only used if a contract has other  contracts associated with it, ie one or more other contract numbers have been entered in the ASSOC CONTRACT field. This field will then contain the total of all principal amounts on the associated contracts, plus the principal on the current contract. </p>
            <p>The amount in this field is similar to that in the PRINCIPAL AMOUNT field, in that it represents the total of the PRINCIPAL AMOUNT fields on the associated contracts. This field does not, therefore, represent the total of the outstanding amounts on all associated contracts. </p>
            <p>This field is filled automatically during validation of the "main" contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 18 numeric characters. This is a NOINPUT field.</p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>TAX.KEY</field>
<desc>
            <p>This field will contain any valid record in the TAX file.This is used to calculate the Tax amounts by picking up the relevant information from the TAX file.</p>
            <p>No accruals are performed for the taxation.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>A Valid record in TAX file.</p>
            <p>Once input and authorised, the value in this field cannot         be changed.</p>
        </desc>
</t>
<t>
<field>INTEREST.SPREAD</field>
<desc>
            <p>Defines the interest spread to be applied to the rate obtained via the interest key entered in the INTEREST.KEY field </p>
            <p>If the interest rate is fixed by the use of an interest key, then it is possible to apply a margin or spread to the rate with this field. </p>
            <p>This field can only be used in conjunction with an interest key and cannot be changed once the contract has been drawn down, ie the contract has become CUR. However, the spread and therefore the interest rate can be changed at any time via the "new interest fields" (NEW.INTEREST.RATE - NEW.INT.EFF.DATE). </p>
            <p>Example 1:            PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000       120,000 FIXED VAR IND   FIXED         VARIABLE  VARIABLE INTEREST RATE   10%           11%       11.25% INTEREST KEY                  1GBP      1GBP INTEREST SPREAD               0.5%      0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. Multi-value field associated with fields UP.TO.PRINCIPAL, FIXED.VAR.IND, INTEREST.RATE and INTEREST.KEY. (optional input)</p>
            <p>Input only allowed if an interest key has been entered in the INTEREST.KEY field.</p>
            <p>Input not allowed once the contract has been authorised with a contract status of CUR.</p>
            <p>The interest rate resulting from the application of the spread to the rate  obtained via the interest key must be positive.</p>
        </desc>
</t>
<t>
<field>MIS.INTEREST.KEY</field>
<desc>
            <p>MIS.INTEREST.KEY </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>CONSOL.KEY</field>
<desc>
            <p>Standard T24 numeric field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>A maximum of 70 characters may be entered.</p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>TERM</field>
<desc>
            <p>TERM</p>
            <p>Defines the life of the contract in months or weeks. It is used in conjunction with the REDEM.START.DATE field to define the final maturity date of the contract. </p>
            <p>This field determines the duration of the contract in months or weeks from the redemption start date which is entered in REDEM.START.DATE. These two fields define the maturity date of the contract and are used during validation to calculate this date which is held in the ORIGINAL.MAT.DATE field. </p>
            <p>The contract term is recorded in this field as a number of months or weeks. However, to simplify input a number of years followed by a "Y" may be entered if the term is a whole number of years. If no input is made a value of 360 (30 years will be defaulted.) </p>
            <p>In addition to calculating the maturity date, the contract term will determine the total number of repayments to be made. This is calculated by dividing the value entered in this field by the repayment frequency entered in field REPAYMENT.DATE. It therefore follows that the term must be exactly divisible by the repayment frequency. In the case of annuity and linear repayment schemes this value will then be used to calculate the periodic repayment amount. If an interest only period is defined subsequent to the redemption start date, then the interest only period will also be treated as a term. In case of Annuity and Linear contracts the repayment amount is initially calculated by taking the original value in the term field. After the interest only period the repayment amount is recalculated on the outstanding principal amount for the balance term.</p>
            <p>The term of the contract can if required be changed at any time till the frequency of the contract is changed, although such a change will require an override. In such an event the maturity date will be recalculated automatically along with the theoretical repayment amount in the case of annuity and linear contracts. After a frequency change, no input would be allowed in this field. Any change to the tenor of the contract after a frequency change would be possible through change in the Original Mat Date field.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 3 numeric characters or 1 - 2 numeric characters and a "Y". (mandatory input) Input must be a positive whole number. Input must be divisible by the repayment frequency. An override will be required if this field is changed after the contract has been authorised. </p>
        </desc>
</t>
<t>
<field>MAX.INT.RATE</field>
<desc>
            <p />
            <p>Maximum interest rate for the contract through its life. The chargeable interest (accrual) will be restricted to the rate input in this field. This rule is applicable for fixed as well as floating rate contracts. For fixed rate contracts the NEW.INT.RATE cannot be for a value higher than the rate in this field. For floating rate contracts the accrual rate will be restricted to the rate input in this field should the current rate for the key and spread in the deal add up to more. </p>
            <p>Example Applicable rate in the MG.RATE.CONTROL </p>
            <p>= 8% Spread in the contract = 2% INITIAL.RATE = 10% MAX.INT.RATE in the contract = 12% If the value in the MG.RATE.CONTROL table moves to 11%, including the spread of 2% the chargeable rate is 13%. However, the interest rate for the contract will be restricted to the MAX.INT.RATE of 12%. Any change in rate effected in the deal using NEW.INT.RATE field will be validated with the value in this field. Error message would be produced if the new interest rate is greater than the value in this field.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>1-10 numeric characters plus a decimal point. Input must be positive value. </p>
            <p />
            <p>Value cannot exceed 100. </p>
            <p />
            <p>MAX.INT.RATE cannot be less than the INTEREST.RATE. If INTEREST.KEY and INTEREST.SPREAD are input, the value in this field cannot be lower than the applicable rate in the MG.RATE.CONTROL table plus spread. </p>
            <p />
            <p>Optional Input. Either MAX.INT.RATE or MIN.INT.RATE alone may be input if so required. No input is permitted if MAX.INT.TOL or MIN.INT.TOL is input </p>
            <p />
            <p>Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
            <p />
        </desc>
</t>
<t>
<field>ADD.USER.REF.1</field>
<desc>
            <p>Free format narrative field for additional information relating to the payment type defined in the ADD.PAY.TYPE field. </p>
            <p>This is a free format field which may be used to record any additional details regarding the additional payment defined in the associated value of the ADD.PAY.TYPE field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 35 alphanumeric characters. Multi-value field associated with field ADD.PAY.TYPE to ADD.USER.REF.1. (optional input - not allowed unless ADD.PAY.TYPE entered.)</p>
            <p>Input not allowed unless a valid payment type has been defined in the associated multi-value of the ADD.PAY.TYPE field.</p>
        </desc>
</t>
<t>
<field>TERM.PRIORITY</field>
<desc>
            <p />
            <p>The field is used to determine if the original maturity date has to be retained while recalculating the redemption amount consequent to any amendments to the contract. If the field has been set to YES, then the original maturity date is retained and the redemption amount is recalculated. The number of terms for recalculation is arrived at by cycling the schedules based on the redemption frequency till the closest date to the original maturity date. The maturity date closest to the original maturity date would then become the new maturity date. </p>
            <p>If the field is set to NO then the amount in the repayment amount field or in the new repayment amount field is retained and the contract schedules are built till the date the balance becomes zero or less than the repayment amount. In effect the maturity date may be extended or shortened depending upon the amount defined.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Input can be YES or NO.</p>
            <p>Default NULL. </p>
            <p>Also refer to helptext for field CONTRACT.TYPE for product switching rules.</p>
        </desc>
</t>
<t>
<field>ADD.PAY.TYPE</field>
<desc>
            <p>Identifies any additional payment types which are to be paid on the loan. </p>
            <p>As well as regular repayments of principal and interest, it is possible to have additional types of scheduled payments linked to a loan. Examples of this might be insurance premiums or contributions to a pension or savings scheme. The additional payment types on a loan are defined in this field. </p>
            <p>The remaining fields of this multi-value set further define and control the processing of each of the additional types. </p>
            <p>The additional payment types available within the system are defined on the MG.PARAMETER table. A maximum of five additional types may be defined. Defaults for some of the other fields in this multi-value set may also be defined on the MG.PARAMETER table. </p>
            <p>Details of individual payments, and totals of all payments made for each additional type, are held on the MG.BALANCES file. The details for each type are stored in the same way as those for interest and principal. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 7 Alphanumeric characters. (optional input) Multi-value field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1</p>
            <p>Input must be a valid additional payment type defined on the MG.PARAMETER table.</p>
            <p>Duplicate types on the same loan are not allowed.</p>
        </desc>
</t>
<t>
<field>CHARGE.CCY</field>
<desc>
            <p>Identifies the currency that charges are to be levied in. This can be different from the mortgage currency. </p>
            <p>Charges can be levied in any currency, and separate charges within the multi-value set can be in different currencies. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>CCY (Currency code) Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. Defaults to the currency of the mortgage.</p>
            <p>Must be a valid currency on the CURRENCY file.</p>
        </desc>
</t>
<t>
<field>USER.DEF.INT</field>
<desc>
            <p>For SAVINGS and NONREDEM contracts, the can mark this field as ?YES? for interest smoothing functionality. If marked "YES" the interest amount in the field REPAYMENT.AMOUNT can be changed to to a specific payment amount.</p>
            <p>Optional field and will only accept YES</p>
            <p>Input allowed only for NONREDEM and SAVINGS contracts</p>
        </desc>
</t>
<t>
<field>REPAYMENT.DATE</field>
<desc>
            <p>Identifies the date and frequency of repayments. </p>
            <p>The date of the next repayment is defined in this field along with the frequency of future repayments. Repayments may be made on any day of the month and at a frequency of weekly, monthly, quarterly, half yearly or yearly. </p>
            <p>The date present in this field applies to repayments of principal (for redemption type contracts), interest and any additional payment elements entered in the additional payment fields. However, contracts with principal redemption may initially repay only interest. In this case the start date for principal redemptions is held in the REDEM.START.DATE field. Once this redemption start date has been reached the repayments of principal continue at the frequency defined in this field. </p>
            <p>The repayment frequency can be changed any time during the life of the contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date/frequency code format. (mandatory input) </p>
            <p>Frequency of repayments must be either weekly, monthly, quarterly, half yearly or yearly. The date of the next repayment must match the day portion of the frequency code unless both dates are month end dates. The date of the first repayment must be greater than the value date of the contract.</p>
            <p>Term change not allowed with repayment date change or repayment frequency change.</p>
            <p>Maturity date can be changed along with repayment date change or repayment frequency change.</p>
            <p>Maturity date change, repayment amount change and repayment frequency change not allowed together.</p>
            <p>Principal increases not allowed along with repayment date change or repayment frequency change.</p>
            <p>RECALC.CURR.AMT cannot be No when repayment date change or repayment frequency change.</p>
        </desc>
</t>
<t>
<field>ADVICE.TYPE</field>
<desc>
            <p>ADVICE.TYPE </p>
        </desc>
</t>
<t>
<field>MAX.REPAY.AMT</field>
<desc>
            <p />
            <p>The maximum repayment amount permissible for the contract. The repayment amount arrived at the time of first input of the contract is stored in INIT.REPAY.AMT. On account of a principal increase or due to any re-scheduling, the new repayment amount cannot exceed the value input in this field and this validation is done through the life of the contract. </p>
            <p>Example </p>
            <p>At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT = 10,000 Input in MAX.REPAY.AMT = 11,000 On account of a principal increase, re-scheduling or rate change through the deal, the NEW.REPAY.AMOUNT is calculated to be 12,000. In such case error will be produced prompting the user to change the maximum repayment amount. However, if the same situation arises out of rate change through MG.RATE.CONTROL, the NEW.REPAY.AMOUNT will be restricted to 11,000 and the term of the contract will be extended suitably. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard T24 amount format 1-14 numeric characters plus a decimal point Value must be greater than zero Optional Input. Either MAX.REPAY.AMT or MIN.REPAY.AMT alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. No input is permitted if MAX.REPAY.TOL or MIN.REPAY.TOL is input Input permissible only for ANNUITY and LINEAR contracts Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>COLLATERAL.CODE.1</field>
<desc>
            <p>Identifies the primary collateral type linked to this contract. </p>
            <p>This field allows a type code to be assigned to the primary collateral associated with this contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 2 numeric characters. (optional input)</p>
        </desc>
</t>
<t>
<field>COLLATERAL.CODE.2</field>
<desc>
            <p>Identifies the secondary collateral type linked to this contract. </p>
            <p>This field allows a type code to be assigned to the secondary collateral associated with this contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 2 numeric characters. (optional input)</p>
        </desc>
</t>
<t>
<field>PORTFOLIO.NUMBER</field>
<desc>
            <p>Identifies the client's portfolio to which this mortgage is to be linked. </p>
            <p>This field is used to link a customer's mortgage to his securities portfolio. The presence of a portfolio number entered in this field will cause the contract to be taken into account when revaluing the portfolio. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 3 numeric characters. (optional input)</p>
            <p>Must be a valid portfolio number for the client on the SEC.ACC.MASTER file.</p>
        </desc>
</t>
<t>
<field>CUSTOMER.NO</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>MARKET.KEY</field>
<desc>
            <p>Help Text for this field is unavailable.  Please refer to the T24 User Guides for further information.</p>
        </desc>
</t>
<t>
<field>MIS.INTEREST.RATE</field>
<desc>
            <p>Identifies the refinancing rate for the contract. This will be used by the MIS (Management Information System) customer profitability analysis. </p>
            <p>The rate entered in this field will be used by the MIS (Management Information System) customer profitability analysis. If this field is left blank then the pool rate will be used in the analysis. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. (optional input)</p>
        </desc>
</t>
<t>
<field>RESIDENCE</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>REPAYMENT.AMOUNT</field>
<desc>
            <p>The use of this field is dependent on the contract type. For annuity contracts it  defines the annuity amount and for linear contracts, the fixed periodic principal repayment amount. This field is not used for non redemption type loans. </p>
            <p>The contents of this field are dependent on the contract type. If the contract is a non redemption type, ie SAVINGS or NONREDEM, then this field is not used and input is not allowed. </p>
            <p>The use of this field also differs between ANNUITY and LINEAR loans. In the case of ANNUITY contracts this field will contain the annuity amount, the fixed periodic total of principal plus interest repayments. For LINEAR contracts this field contains only the fixed periodic principal repayment amount, the interest portion varies each month and can be found in the COMMITTED.INTEREST field. </p>
            <p>In both cases this amount can be either entered manually or defaulted during validation. Irrespective of this a theoretical repayment amount will always be calculated and stored in the THEORETICAL.AMOUNT field. This is done to provide a means of ensuring that the repayment schedule will always repay the loan in full within the contract term. These theoretical amounts are calculated using the following formulae where: </p>
            <p>I = Periodic rate of interest ie if repayments are quarterly RATE/4. n = No of repayments </p>
            <p>i) Annuity contracts: ii) Linear contracts </p>
            <p> n PRINCIPAL x I x (I + 1) PRINCIPAL    -----------------------              ---------            n                               n         (I + 1)   - 1 </p>
            <p>The validation of this field will take into account any future changes in the repayment amount that have been defined in the "new repayment" fields (NEW.REPAY.AMT - NEW.THEORETICAL). If the repayment amount is to be changed then this is recorded in advance in these fields,along with the date on which the new amount becomes effective. The validation process then ensures that the current and any future repayment amounts will be sufficient to repay the loan within the term. This mechanism allows any given repayment amount to be less than its associated theoretical amount at any intermediate stage. However any shortfall arising from this must be made up later in the life of the contract, therefore, the final repayment amount defined must always be at least as large as its associated theoretical amount. </p>
            <p>This mechanism is illustrated in the following examples. </p>
            <p>Examples: </p>
            <p>i) Contract type : LINEAR Principal : 120,000 Term : 60 months (5 years) Repayment date : 31/01/90 M0131 (monthly)            Repayment amount   : 2,000            Theoretical amount : 2,000 </p>
            <p>This represents a simple example where the actual repayment amount is the same as the theoretical. This is acceptable to the system as the loan will be fully repaid within the term. The repayment amount can be increased without giving any validation errors but cannot be reduced. </p>
            <p>ii) Contract type : LINEAR Principal : 120,000 Term : 60 months (5 years) Repayment date : 31/01/90 M0131 (monthly)            Repayment amount   : 2000            Theoretical amount : 1000 </p>
            <p> New repay date : 31/01/9131/01/92 New theoretical : 2250   2500 New repay amt : 1500   2500 </p>
            <p>In this case the repayments for the first two years are reduced. However, the final three years have a higher repayment than in the previous example in order to make up the shortfall from the prior years. These repayment/new repayment amounts will validate successfully as the final repayment amount is equal to the theoretical. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 19 numeric characters (optional input - default from the THEORETICAL.AMOUNT field)</p>
            <p>Input not allowed for SAVING and NONREDEM contract types.</p>
            <p>If there is no new repayment details in the fields NEW.REPAY.AMT - NEW.THEORETICAL then any amount input cannot be less than that in the THEORETICAL.AMOUNT field.</p>
        </desc>
</t>
<t>
<field>MI.FUNDING.DEPT</field>
<desc>
            <p />
            <p />
            <p>This field is used within the Management Information   module to define the Department which funded this Contract.  It is used   in the generation of cost of funds  entries when either the   MIS.INTEREST.KEY or MIS.INTEREST.RATE field is used.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Must be a  key to a valid record on the DEPT.ACCT.OFFICER file.</p>
            <p>Mandatory.</p>
            <p> If not defined, value would be defaulted  from the value of      the field  DEFLT.FUND.DEPT  associated with the appropriate     COMPANY field  in MI.PARAMETER.</p>
        </desc>
</t>
<t>
<field>CUSTOMER</field>
<desc>
            <p>Identifies the customer of the loan. </p>
            <p>This field identifies the customer who holds the mortgage. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 -6 numeric character customer number. or   3 - 10 alphanumeric character customer mnemonic. (mandatory input)</p>
            <p>Must be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.</p>
            <p>This field cannot be changed once the contract is authorised.</p>
        </desc>
</t>
<t>
<field>FIRST.INT.PAY</field>
<desc>
            <p>This is an internally used field updated by the system.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>This is a Noinput Amount field.</p>
        </desc>
</t>
<t>
<field>DRAWDOWN.ACCOUNT</field>
<desc>
            <p>Identifies the account to which the principal amount is to be credited at drawdown. </p>
            <p>The account to which the principal amount is to be credited on the value date of the contract is defined in this field. </p>
            <p>If required this can be an internal account. </p>
            <p>When the contract in question has other associated contracts (see ASSOC.CONTRACT field), then checks are made on the drawdown account of all other contracts in the group. Any differences in the accounts used will be highlighted with an override message. </p>
            <p>Effective G 13 this field will accept an account denominated in a currency other than the contract currency.  </p>
            <p>In case the underlying Contract Customer (eg. Customer.id in MONEYMARKET,Counterparty in FOREX, etc.) has a record in CUSTOMER.SSI application, then the account number in this field gets defaulted as per the definition for that Customer from CUSTOMER.SSI. For more information on the usage of this feature please refer to CUSTOMER.SSI application.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard account number format or   3 - 10 alphanumeric account mnemonic. (mandatory input)</p>
            <p>An override will be required if the customer of the account is not the customer of the loan.</p>
            <p>If the contract is linked to another contract, ie it has a suffix in its key, and the drawdown account differs on the main loan, an override will be required.</p>
            <p>If the contract has associated contracts (see ASSOC.CONTRACT field), then an override will be required for each associated loan with a different drawdown account to that entered here.</p>
        </desc>
</t>
<t>
<field>ADD.REFERENCE</field>
<desc>
            <p>This field may be used to define any user or third party reference associated with the additional payment element entered in the ADD.PAY.TYPE field. </p>
            <p>This field may be used to record any reference relating to the additional payment defined in the associated value of the ADD.PAY.TYPE field. Examples of this may be insurance or savings schemes policy numbers that are linked to a mortgage. </p>
            <p>This reference will appear on the customer's statement against any entries posted relating to the additional payment. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 35 alphanumeric characters. Multi-value field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1 (optional input - not allowed unless ADD.PAY.TYPE entered.)</p>
            <p>Input not allowed unless a valid payment type has been entered in the associated value of the ADD.PAY.TYPE field.</p>
        </desc>
</t>
<t>
<field>TOTAL.CHARGE</field>
<desc>
            <p>Identifies the total amount of charges applied on the contract.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>System generated, No input field.</p>
            <p />
        </desc>
</t>
<t>
<field>CHARGE.TAX.LCY</field>
<desc>
            <p>This field identifies the local currency equivalent of the Tax on Charge if any.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>This is a Noinput field.</p>
            <p>Multivalued field associated with the fields CHARGE.DATE to CHARGE.TAX.CODE</p>
        </desc>
</t>
<t>
<field>ADD.THIRD.PARTY</field>
<desc>
            <p>Identifies any third party related to the associated additional payment defined in the ADD.PAY.TYPE field. </p>
            <p>If the additional payment type defined in the associated value of the ADD.PAY.TYPE field is linked to a third party, then this may be recorded in this field. Examples of this may be insurance or investment companies where an insurance policy or savings scheme is attached to a mortgage. </p>
            <p>If particular third parties are always associated with a given payment type then this relationship may be defined on the MG.PARAMETER table. This will then be used as a default for this field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. Multi-value field associated with field ADD.PAY.TYPE to ADD.USER.REF.1 (optional input if ADD.PAY.TYPE entered - default from MG.PARAMETER table)</p>
            <p>Input not allowed unless a valid payment type has been defined in the associated multi-value of the ADD.PAY.TYPE field.</p>
            <p>Input must be a valid customer on the CUSTOMER file.</p>
        </desc>
</t>
<t>
<field>MIS.ACCT.OFFICER</field>
<desc>
            <p>Identifies the profit centre to which the contract belongs.  This will be used in the MIS (Management Information System) customer profitability analysis. </p>
            <p>This fields identifies the profit centre under which this contract is to be reported. This will be used in the customer profitability analysis of the MIS (Management Information System). </p>
            <p>This field will default to the account officer stored on the CUSTOMER file for the contract customer. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 4 numeric characters. (optional input - default to account officer of contract customer)</p>
            <p>Must be a valid account officer on the DEPT.ACCT.OFFICER table.</p>
        </desc>
</t>
<t>
<field>MIN.INT.TOL</field>
<desc>
            <p />
            <p>The minimum tolerance on the INITIAL.RATE. The percentage input in this field will be reduced from the INITIAL.RATE to validate the minimum rate that is to be charged for the contract. If the bank agrees with its customer that the agreement rate will not drop by more than a specific percentage, then this field is used. </p>
            <p>Example INTEREST.KEY = 1 (which is 8%) INTEREST.SPREAD = 2% MIN.INT.TOL = 25% In this case the rate at the time of input (10%) is written to INITIAL.RATE. If the floating rate drops to 5%, the chargeable rate is 5+2 = 7%. However, the contract will be charged a rate of 7.5% (INITIAL.RATE of 10% less MIN.INT.TOL 0.25 = 7.5%) In the above example if the floating rate drops to 6%, the chargeable rate is 6+2 = 8%. Since this is within the permitted tolerance, the deal will be charged 8%. Any change in the interest rate through the deal using NEW.INT.RATE will be validated with the initial rate and interest tolerance. Error message will be produced if the new interest rate is less than the initial rate less minimum tolerance. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard T24 percentage format. Negative values not allowed. Value input cannot exceed 100.  Optional Input. Either MAX.INT.TOL or MIN.INT.TOL alone can be defined if so required.  No input permitted if either MAX.INT.RATE or MIN.INT.RATE is input. Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>MAX.REPAY.TOL</field>
<desc>
            <p />
            <p>Maximum tolerance on the repayment amount. The percentage input in this field is added to the INIT.REPAY.AMT to validate the NEW.REPAY.AMOUNT. If the bank agrees with its customer that the repayment amount will be restricted to certain percentages on the initial repayment amount, this field is used. If such movement is to be restricted to an absolute value MAX.REPAY.AMT may be input. On the contrary, if such restriction is defined as a percentage on the INIT.REPAY.AMT, this field is used. </p>
            <p>Example At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT = 10,000 Input in MAX.REPAY.TOL = 25% On account of a principal increase, re-scheduling or rate change through the deal, the NEW.REPAY.AMOUNT is calculated to be 13,000. In such case error message will be produced to change the tolerance. However for rate changes through MG.RATE.CONTROL, the NEW.REPAY.AMOUNT will be restricted to 10,000 plus 25% = 12,500 and the term of the contract will be extended suitably. However, if the re-scheduling results in a NEW.REPAY.AMT of 12,000, this will be maintained as it is within the tolerance percentage of 25%</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard T24 percentage format.</p>
            <p />
            <p>Value must be greater than zero. Maximum allowed value is 100 Optional Input. Either MAX.REPAY.TOL or MIN.REPAY.TOL alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. Not available for input if MAX.REPAY.AMT or MIN.REPAY.AMT is input Input permissible only for ANNUITY and LINEAR contracts.</p>
            <p>Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>PROVISION.AMOUNT</field>
<desc>
            <p>Indicates the total amount provisioned for this contract.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>No-Input field   </p>
            <p>Standard Amount field.</p>
        </desc>
</t>
<t>
<field>ADD.NEW.AMOUNT</field>
<desc>
            <p>Contains the new additional payment amount which is to become effective on the date in the associated value of the ADD.NEW.DATE field. </p>
            <p>Future changes in the payment amount for each of the additional payment types entered in the ADD.PAY.TYPE field, may input in this field. The date on which the new amount becomes effective is held in the associated multi-value of the ADD.NEW.DATE field. </p>
            <p>The amount entered in this field will be transferred to the ADD.AMOUNT field when the next contract repayment date is equal to the effective date held in the ADD.NEW.DATE field for this amount. This transfer is performed during the end of day batch process. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. Multi-valued field associated with the fields ADD.PAY.TYPE to ADD.USER.REF.1 (optional input - not allowed unless ADD.PAY.TYPE entered.)</p>
            <p>Input only allowed if an additional payment type is defined in the ADD.PAY.TYPE field.</p>
        </desc>
</t>
<t>
<field>DEPOSIT.ACCOUNT</field>
<desc>
            <p>Specifies the account where any associated deposit is maintained. </p>
            <p>In some cases a customer may request a loan but does not require all of the funds immediately. An example of this might be a loan for the purpose of building a house, where payment to the builder will be made in stages as the work is completed. In such a case the customer will not wish to pay interest on the funds he does not yet require, but, the bank will want to record the maximum value of the loan against the clients credit limit. </p>
            <p>This can be achieved by drawing down the full amount of the loan to a deposit account. The client can then withdraw the funds from this account as they are required. Interest will be earned on the deposit at a similar rate to that of the loan and will be posted automatically to the contract repayment account specified in the MORTGAGE.ACCOUNT field. In this way the interest earned by the client on the unused portion of the loan is offset against that to be paid on the full amount borrowed. However, the full amount of the loan is recorded against the client's credit limit as soon as it is draw. </p>
            <p>Any such account must be set up so that it has an ACCOUNT.CLASS of MGDEPOSIT (see the helptext for the ACCOUNT.CLASS and ACCOUNT applications for further information). </p>
            <p>This field is used to record the account number of any deposit that is linked to this loan for such a purpose. It is stored for information and reporting purposes only and does not affect any processing within this module. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard account number format or   3 -10 alphanumeric account mnemonic. (optional input)</p>
            <p>Must be a valid account of the same currency as the contract.</p>
            <p>The account entered must have an ACCOUNT.CLASS of MGDEPOSIT.</p>
            <p>Input not allowed for associated contracts (those with a suffix on their ID).</p>
            <p>An override will be required if the account input does not belong to the contract customer.</p>
        </desc>
</t>
<t>
<field>LIMIT.REF</field>
<desc>
            <p>Identifies the LIMIT REFERENCE number to be checked when verifying a credit limit for the loan. </p>
            <p>Whenever a loan is entered into the system, a check is made for the availability of a suitable credit limit against which to draw the loan. This field defines at which level and against which limit product this check is performed. </p>
            <p>If this field is left blank the limit reference will be defaulted from the LIMIT.PARAMETER file, according to the default sequence defined on that file for the mortgage application. </p>
            <p>For a more detailed explanation of limit processing refer to the helptext guides for the LIMIT, LIMIT.REFERENCE and LIMIT.PARAMETER applications. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>3 - 7 numeric characters (optional input)</p>
            <p>Input must be a valid LIMIT.REFERENCE number.</p>
            <p>If no limit record exists for the client then a default limit will be created which will require a user override.</p>
            <p>If the client's limit is insufficient to cover the outstanding principal of the loan an override will be required.</p>
            <p>An override will also be required if the expiry date of the LIMIT record is prior to the maturity date of the contract.</p>
        </desc>
</t>
<t>
<field>REDEM.START.DATE</field>
<desc>
            <p>For redemption type contracts this field contains the repayment date on which principal redemptions commence. For all contract types this field is used along with the contract term to calculate the maturity date. </p>
            <p>For contracts with principal redemptions this field defines the date on which principal repayments will commence. Similarly repayments of additional payment elements will start on this date irrespective of contract type. </p>
            <p>For all contract types this date is used to determine the final maturity of the contract. This is because the term of the contract applies from this date and not the value date or first repayment date of the contract. This feature makes it possible to set up a loan where, for an initial period, repayments are restricted to interest only. </p>
            <p>If left blank this field will be defaulted at validation and will set the first repayment to interest only, ie the redemption start date is after the first repayment date. </p>
            <p>If the date in this field has not yet been reached this field may be changed. Whenever this is done the maturity date will be recalculated. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. (optional input - default to the second repayment date)</p>
            <p>Must be a valid repayment date.</p>
            <p>Must be at least one full repayment period after the contract value date.</p>
            <p>Input cannot be prior to the next repayment date.</p>
            <p>Input not allowed once the redemption start date has passed.</p>
        </desc>
</t>
<t>
<field>NEW.INT.EFF.DATE</field>
<desc>
            <p>Identifies the date on which the new interest rate in the NEW.INTEREST.RATE field becomes effective. </p>
            <p>Whenever the interest rate on a contract is changed an effective date for that change must be defined in this field. The interest rate can be changed at any time during the life of a contract and therefore the date entered here can be either a prior date, the current date or, a future date. </p>
            <p>If this date is backdated then at authorization the new rate fields (NEW.INTEREST.RATE - NEW.INT.SPREAD) will be transferred to the current rate fields (INTEREST.RATE - INTEREST SPREAD) and the new fields cleared. Similarly the MG.BALANCES file will be updated with the new rate and the date from which it is effective. If interest has already been accrued beyond this effective date then it will be adjusted. Similarly, any payments received after this date will be reprocessed to reflect any changes in the interest due. </p>
            <p>If the effective date is in the future then a rate change schedule will be created. This will be processed during the end of day batch processing on the effective date itself. In the meantime the new interest details may be amended or deleted. </p>
            <p>In the case of annuity contracts, a change in the interest rate will have an effect on the theoretical annuity amount. Depending on the effective date of the rate change this may effect the next repayment or future repayments. If it affects a future repayment, the date on which this new amount is required is automatically inserted into the NEW.REPAY.DATE field on input of the rate change date. In both cases the new theoretical annuity amount is calculated automatically during </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. (optional input) NEW.THEORETICAL field dependent on the date of the rate change. If a rate change is backdated, but, is dated after the next scheduled revision date then the review date defined in the INT.REVIEW.FREQ field will be cycled forward when the change is authorised.</p>
            <p>Input only allowed if the contract is authorised with a contract status of CUR.</p>
            <p>Input is not allowed unless new rate details have been entered in the fields NEW.INTEREST.RATE - NEW.INT.SPREAD.</p>
            <p>Input is mandatory if any new rate details have been entered in the fields NEW.INTEREST.RATE - NEW.INT.SPREAD</p>
            <p>The date input cannot be prior to the value date of the contract.</p>
            <p>An override is required if the effective date is a non working day.</p>
            <p>If the effective date is prior to a previous repayment date, thereby causing that repayment to be adjusted, an override will be required.</p>
        </desc>
</t>
<t>
<field>LINK.REFERENCE</field>
<desc>
            <p>LINK.REFERENCE </p>
        </desc>
</t>
<t>
<field>RECALC.CURR.AMT</field>
<desc>
            <p>This field is to determine if any recalculations in the repayment amount should be effected from the current instalment or the next instalment.</p>
            <p>If set to YES, then the recalculated amount is from the current period onwards. The amount recalculated is populated  in the repayment amount field.  </p>
            <p>If set to NO, then the repayment amount is recalculated from the next period onwards and recalculated amount would be populated into the new repayment set of fields.</p>
            <p>This recalculations could be due to any reason, for e.g., rate change, term increase/decrease, principal increase, change in maturity date etc.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>Cannot be NO for frequency change.</p>
            <p>Cannot be NO for first period.</p>
        </desc>
</t>
<t>
<field>REPAY.METHOD</field>
<desc>
            <p>This field determines whether the Mortgage repayment of Interest/Principal/Charges are to be collected through Direct Debit process.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Input allowed only when Direct Debit module is installed for the       company.</p>
            <p>Valid value "DD" to indicate Direct Debit or Null.</p>
            <p>If this field is entered as "DD" then next field-DD.MANDATE.REF       is mandatory.</p>
        </desc>
</t>
<t>
<field>NEW.THEORETICAL</field>
<desc>
            <p>Defines the minimum repayment amount required at each new repayment date to ensure that the loan is fully repaid within the contract term. This field is used by ANNUITY and LINEAR type contracts only. </p>
            <p>This field is only used for ANNUITY and LINEAR contracts when a future change in the repayment amount is required. These future changes in the repayment amount are entered in this multi-valued set of fields. </p>
            <p>The date on which each new repayment amount becomes effective is held in the NEW.REPAY.DATE field. On each of these dates a new repayment amount is calculated by the system during validation and inserted in this field. This amount represents the minimum repayment amount required to repay the loan within the term and is based on the contract parameters on the effective date. </p>
            <p>Further details of how these amounts are calculated can be found in the Helptext for the REPAYMENT.AMOUNT field. </p>
            <p>If the contract type is ANNUITY, there may be cases where it is not possible to recalculate the repayment amount. These arise when there is a change in the principal balance or interest rate of the contract in the middle of a repayment period, and a new date and repayment amount has been requested for that period. In this case the theoretical amount will be left blank but an override message will be displayed to inform the user of the problem. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL. This is a NOINPUT field.</p>
            <p>This is a NO INPUT field.</p>
            <p>An override will be required for ANNUITY contracts in cases where it is not possible to calculate an annuity amount.</p>
        </desc>
</t>
<t>
<field>FIRST.PAY.IN.ADV</field>
<desc>
            <p>Indicates whether the first repayment is to be taken in advance at the time of contract drawdown. </p>
            <p>This field enables the first repayment on a loan to be taken at drawdown. The repayment amount will be debited to the drawdown account, effectively reducing the amount of the loan. However, separate accounting entries will be posted for the full amount of the drawdown and the first repayment amounts. The credit side of the transaction will be posted to the repayment account defined in the MORTGAGE.ACCOUNT field. This will give a credit balance on that account which will subsequently be reversed when the actual date of the first repayment is reached. </p>
            <p>A default for this field for each contract type available can be set up on the MG.PARAMETER table. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 alpha character, either "Y" (yes) or "N" (no). (mandatory input - default from MG.PARAMETER table)</p>
            <p>An override will be required if the input to this field is different to the default on the MG.PARAMETER table.</p>
        </desc>
</t>
<t>
<field>OUR.REMARKS</field>
<desc>
            <p>Free format narrative field for additional user information. </p>
            <p>This is a free format field which may be used for any notes or other information relating to the contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 35 alphanumeric characters. Multi-value field (optional input)</p>
        </desc>
</t>
<t>
<field>IAS.SUBTYPE</field>
<desc>
            <p>Help Text for this field is unavailable.  Please refer to the T24 User Guides for further information.</p>
        </desc>
</t>
<t>
<field>DELIVERY.REF</field>
<desc>
            <p>Identifies the ID of the consolidation record on the CONSOLIDATE.ASST.LIAB file into which this contract is to be consolidated for financial reporting. </p>
            <p>Financial balance details, outstanding balance and outstanding accrued interest, of each contract are recorded on the CONSOLIDATE.ASST.LIAB file so that they can be included in the financial reports produced via the REPORTING module. This field identifies the CONSOLIDATE.ASST.LIAB record into which the balance for the contract are consolidated. </p>
            <p>The criteria for the consolidation of mortgage contracts is defined on the CONSOLIDATE.COND table. </p>
            <p>This field is maintained by the system during the end of day batch processing. Whenever this field is updated by the system a history record will be written to maintain a full audit trail. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Alphanumeric as specified on the CONSOLIDATE.CONDS file.</p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>PRINCIPAL.AMOUNT</field>
<desc>
            <p>Specifies the principal amount of the contract. This is the amount of the loan given and does not indicate the outstanding balance. </p>
            <p>This field contains the principal amount of the contract. This is the amount agreed at the inception of the contract and does not indicate the outstanding amount during the life of the contract. This outstanding balance will be displayed as an enrichment for this field and is recorded on the MG.BALANCES file. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 18 numeric characters. (mandatory input)</p>
            <p>Must be greater than zero.</p>
            <p>Once authorised this field cannot be changed.</p>
        </desc>
</t>
<t>
<field>MARKET.MARGIN</field>
<desc>
            <p>Help Text for this field is unavailable.  Please refer to the T24 User Guides for further information.</p>
        </desc>
</t>
<t>
<field>JOINT.NOTES</field>
<desc>
            <p>This field can contain any documentary information pertaining to the JOINT.HOLDER </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This field cannot be entered if the JOINT.HOLDER field has not been entered.</p>
            <p>If the JOINT.HOLDER field has been populated this field is optional.</p>
        </desc>
</t>
<t>
<field>REDEMPTION.DATE</field>
<desc>
            <p>Identifies the date and frequency of redemptions. </p>
            <p>The date of the next redemption is defined in this field along with the frequency of future redemptions. Redemptions may be made on any day of the month and at the repayment frequency in case of annuity contracts. </p>
            <p>The date present in this field applies to repayments of principal only, and cannot be input for non redeemable contracts. </p>
            <p>Contracts with principal redemptions may initially repay only interest. in this case the start date for principal redemptions is held in the REDEM.START.DATE field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date/frequency code format (can be defaulted from REPAYMENT.DATE). </p>
            <p>Frequency of redemptions must be for a number of weeks or months.</p>
            <p>The date of the next redemption must match the day portion of the frequency code unless both dates are month end dates. </p>
            <p>This is a 'no input' field if the contract is non- redeemable, otherwise it is mandatory, but can be defaulted from the previous field. </p>
            <p>The frequency in this field cannot be less than the frequency of the previous field. </p>
            <p>Redeemable contracts that are annuities must coincide on frequency and dates for interest and principal, but the first redemption can be after the first repayment. </p>
        </desc>
</t>
<t>
<field>PENALTY.RATE</field>
<desc>
            <p>Defines the rate of penalty interest. </p>
            <p>Penalty interest on overdue amounts is charged on a flat fee basis. After each repayment the client is given a "grace period" in which to settle any debit balance on his mortgage account. At the end of this time a penalty will be charged based on any debit balance on the mortgage account and the percentage rate held in this field. It is recommended that penalty processing is only used on loans where an account is set up specifically for repaying the loan and is not used for any other purpose. </p>
            <p>The penalty rate may be either input manually in this field or defaulted from the MG.PARAMETER record where a default penalty rate is defined. The MG.PARAMETER record also defines the grace period during which the client must settle repayments. </p>
            <p>Penalty interest is charged on a monthly basis irrespective of the frequency of repayments. Therefore, a loan with quarterly repayments will have three penalties on each of the intervening months. </p>
            <p>Example: </p>
            <p>A client has a mortgage on which he is to repay 1000 on the first day of each month at three monthly intervals, ie. quarterly. The grace period allowed is 10 days and the penalty rate is 1%. The following situation arises:                                              Mortgage Date      Event                               account </p>
            <p>01/03/90  System makes automatic repayment of 1000 to mortgage account. - 1000.00 </p>
            <p> Client does not settle his repayment. - 1000.00 </p>
            <p>11/03/90  Grace period has expired penalty applied: 1000 x 0.01 = 10 - 1010.00 </p>
            <p>11/04/90  Second penalty date, penalty applied: 1010 x 0.01 = 10.1 - 1020.10 </p>
            <p>25/04/90  Client settles repayment and outstanding penalty 1020.10 0.00 </p>
            <p>11/05/90  Third penalty date. Zero balance, therefore no penalty. 0.00 </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters (optional input)</p>
            <p>Input must be positive</p>
            <p>Input not allowed if the repayment account defined in the MORTGAGE.ACCOUNT field is a current account.</p>
        </desc>
</t>
<t>
<field>CONV.APPLICATION</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>INTEREST.RATE</field>
<desc>
            <p>Specifies the annual rate at which interest is to be accrued on the outstanding balance of the contract. </p>
            <p>This field contains the current annual rate of interest to be used when accruing interest on the outstanding balance of the contract. This information may be entered manually or defaulted via an interest key and spread entered in the fields INTEREST.KEY and INTEREST.SPREAD. It is mandatory to enter either a rate or an interest key and spread. </p>
            <p>Once the contract has been drawn down, ie the contract status has become CUR, this field cannot be changed. However, the interest rate can be changed at any time via the "new interest rate" fields (NEW.INTEREST.RATE - NEW.INT.EFF.DATE). </p>
            <p>Example 1:            PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000       120,000 FIXED VAR IND   FIXED         VARIABLE  VARIABLE INTEREST RATE   10%           11%       11.25% INTEREST KEY                  1GBP      1GBP INTEREST SPREAD               0.5%      0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters Multi-value field associated with fields UP.TO.PRINCIPAL, FIXED.VAR.IND, INTEREST.KEY and INTEREST.SPREAD. (optional input)</p>
            <p>Input must be a positive, zero is allowed.</p>
            <p>Input prohibited if data is present in the fields INTEREST.KEY or INTEREST.SPREAD.</p>
            <p>A rate must be present in this field if the INTEREST.KEY and INTEREST.SPREAD fields are blank.</p>
            <p>Input not allowed once the contract has been authorised with a status of CUR.</p>
        </desc>
</t>
<t>
<field>PRODCAT</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>MORTGAGE.ACCOUNT</field>
<desc>
            <p />
            <p>Specifies account to which the periodic repayments are to be made is defined by this field.</p>
            <p />
            <p>All periodic repayments made on the loan will be debited to the account contained in this field. Separate accounting entries will be posted for principal, interest and any additional payment elements defined in the field ADD.PAY.TYPE. </p>
            <p>It is possible to specify a different liquidation account for interest alone in INT.LIQ.ACCOUNT, in which case MORTGAGE.ACCOUNT will be used for principal liquidation only</p>
            <p>Any penalties for overdue repayments will also be debited to this account. </p>
            <p>If the contract has other associated contracts (see ASSOC.CONTRACT field) then checks are made on the mortgage account of all other contracts in the group. Any differences in the mortgage accounts used will be highlighted with an override message. </p>
            <p>If the customer of the contract is changed through input in the field NEW.CUSTOMER, the user will have to manually input the mortgage account of the new customer, if desired. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard account number format. or   3 - 10 alphanumeric account mnemonic. (Mandatory input)</p>
            <p>Input must be a valid account of the same currency as the loan.</p>
            <p>The account entered must be  either a current account or have an account class of MORTGAGE.</p>
            <p>An override will be required if the customer of the account is not the customer of the loan.</p>
            <p>An override will be required if the account input is a SAVINGS account.</p>
            <p>If the contract is linked to another contract, ie it has a suffix in its key, and the mortgage account differs on the main deal, an override is required.</p>
            <p>If the contract has associated deals (see ASSOC.CONTRACT field), an override will be required for each associated deal with a different mortgage account to that entered here.</p>
        </desc>
</t>
<t>
<field>PROVISION.METHOD</field>
<desc>
            <p>Indicates whether asset classification should be computed Automatically or maintained manually.</p>
            <p>When this field is populated with NULL (for new contracts) or AUTO, system computes the asset classification during the next Provision review Frequency( defined in ASSET.CLASS.PARAMETER) and updates the ASSET.CLASS, PROVISION and PROVISION.AMOUNT with the new details.</p>
            <p>When this field is populated as MANUAL, it is assumed that the user Manages the asset classification manually and the contract would be skipped for any computation of provision until the field is switched back to AUTO.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Accepts either MANUAL or AUTO</p>
        </desc>
</t>
<t>
<field>ORIGINAL.MAT.DATE</field>
<desc>
            <p>This field contains the theoretical maturity date of the contract based on the TERM and the REDEM.START.DATE. </p>
            <p>This field contains the date on which the contract will be fully repaid, based on the contract term and the redemption start date. For example: </p>
            <p>Term : 300 months (25 years) Value date : 15th March 1990 Redem start date : 1st May 1990 </p>
            <p>Original mat date : 1st April 2015 </p>
            <p>This field is updated whenever the contract term, frequency of payment or redemption start date are amended. It is also updated when the term priority flag is set to "NO" accompanied by any or all of the events such as change in interest rate, change in repayment amount &amp; principal increases.</p>
            <p>This date therefore represents the latest possible date on which the contract must be fully repaid in order that the terms and conditions of the contract are satisfied. In practice, the date of complete repayment may be earlier than this but should never be later. </p>
            <p>Once the repayment frequency of the contract undergoes change, any further amendements to the tenor of the contract would be possible through input of the new maturity date in this field.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>In case of redeemable contracts input to this field is allowed only after the frequency of the contract undergoes a change.</p>
            <p>Otherwise input to this field is allowed only in case of non-redeemable contracts.</p>
        </desc>
</t>
<t>
<field>PRODCCY</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>IAS.CLASSIFICATION</field>
<desc>
            <p>Help Text for this field is unavailable.  Please refer to the T24 User Guides for further information.</p>
        </desc>
</t>
<t>
<field>TAX.ON</field>
<desc>
            <p>Determines the component on which the Tax is applied.</p>
            <p>Allowed Inputs:</p>
            <p>I - Tax is applied on Interest ( Default Value)</p>
            <p>P- Tax is applied on Principal</p>
            <p>PI - Tax is applied on Principal + Interest</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>On Savings and Non-redeemable type of contracts, Only Option 'I' is allowed.i.e Tax can be applied only on         Interest.</p>
            <p />
            <p>On an Inclusive type of annuity contract, only option 'I' is allowed.</p>
        </desc>
</t>
<t>
<field>POSITION.TYPE</field>
<desc>
            <p>Identifies the position type applicable to this contract.  This facility is not used at present and this field will be defaulted to (TR)ading. </p>
            <p>This field is currently not used by the system as the only available position type at present is (TR)ading which is the default value for this field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>2 alpha characters. This is a NOINPUT field - default value TR.</p>
        </desc>
</t>
<t>
<field>PROVISION</field>
<desc>
            <p>Indicates the Provision percentage that has been applied for this contract.</p>
            <p>If the contract is eligible for Provisioning, system updates this field during COB according to the rules defined in ASSET.CLASS.PARAMETER.</p>
            <p>Allows Manual input as well (by changing PROVISION.METHOD field to MANUAL) to override the System classification. Accounting entries would be raised online in accordance with the new Provision percentage..</p>
            <p>When PD exists for the contract, this field should match the Provision percentage in the corresponding PD contract.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Input allowed only when PROVISION.METHOD is MANUAL.   </p>
            <p>Holds Null when there is no asset classification.   </p>
            <p>Maximum of 3 Numeric characters.   </p>
            <p>Allows '0'(Zero) value.</p>
        </desc>
</t>
<t>
<field>TARGET</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>SOURCE.ID</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>BROKER.CODE</field>
<desc>
            <p />
            <p>BROKER.CODE</p>
            <p>This field contains the code of the broker, if any, for this deal.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Should be a valid entry in the BROKER application</p>
        </desc>
</t>
<t>
<field>LIQUIDATION.MODE</field>
<desc>
            <p>This field identifies the manner in which overdue payments are handled. The default for all contracts is AUTOMATIC. </p>
            <p>Three options are currently available: AUTOMATIC, SEMI-AUTOMATIC, and MANUAL</p>
            <p>AUTOMATIC indicates that payments will be settled irrespective of whether funds are available in the draw down account.</p>
            <p>SEMI-AUTOMATIC indicates that a payment will be made only if funds are available, and that a PD end of day process will regularly attempt to make payment by checking whether funds have become available.</p>
            <p>MANUAL indicates that the contract will only settle if funds are available and that any future settlement of outstanding payments must be made manually via the PD module.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>If the PD product is not defined for the current company then the only allowed setting is AUTOMATIC. </p>
        </desc>
</t>
<t>
<field>CHARGE.AMT.LCY</field>
<desc>
            <p>Identifies the amount(local equivalent) to be charged defined in the charge code entered in the associated value of the CHARGE.CODE field.This amount will be defaulted, dependent on the charge code entered, from the FT.CHARGE.TYPE file.Shows the flat amount of charges to be debited from the customer on the charge date specified in the CHARGE.DATE field.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Multi-value field associated with the fields from CHARGE.DATE to CHARGE.TAX.CODE</p>
            <p>Defaulted from FT.CHARGE.TYPE file.</p>
        </desc>
</t>
<t>
<field>BROKER.CCY</field>
<desc>
            <p>The currency in which the broker is to be paid. This may be different from the deal currency. If the brokerage currency is not input by the user, the system will default the currency from the CCY.FOR.PAYMENT field in the BROKER table. This will be the deal currency if it is defined in CCY.FOR.PAYMENT field, otherwise it will default the first currency from the CCY.FOR.PAYMENT multivalue. For further details, please consult the help text for the BROKER table.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Should be a valid entry in the CURRENCY table</p>
            <p>The currency should be an allowed currency entered in the CCY.FOR.PAYMENT field in the BROKER table</p>
            <p />
            <p />
            <p />
        </desc>
</t>
<t>
<field>RATE.FIX.FQY</field>
<desc>
            <p>This field allows MG module to modify the rates to be fixed at contract level, and for each contract fixing date to be set. </p>
            <p>On the next scheduled date for this contract to be automatically updated, the new interest will be calculated taking into account the interest rates stored in MG.RATE.CONTROL or MG.RATE.CONTROL.HIST and the spread stored on the contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date/frequency code format (Optional input)</p>
            <p>The date of the first rate fix should not be prior to today or the contract value date and should not be after the contract maturity date.</p>
        </desc>
</t>
<t>
<field>LOCAL.REF</field>
<desc>
            <p>A number generated automatically by the system which identifies either a statement entry or a category entry in respect of a contract. </p>
            <p>Whenever an amendment to, or input of, a contract requires an accounting entry to be raised, this field will record the IDs of the entries generated. The IDs to accounting entries, both STMT.ENTRYs and CATEG.ENTRYs, consist of a date-time stamp and a sequence number. All entries raised by a particular input/transaction will have the same date-time stamp but different sequence numbers. </p>
            <p>This field has three multi-values, the first contains the base date-time stamp which is common to all entries. The second contains the sequence numbers of the STMT.ENTRYs raised and the third the sequence numbers of any CATEG.ENTRYs. </p>
            <p>Whenever a contract is viewed using the (S)ee function this field will show the entry IDs that were raised by that version of the contract only. If the amendment made on a particular version did not raise any entries, then the field will be blank. Any end of day processing which raises accounting entries will also update this field and write a history record.  The following examples illustrate the use of this field more clearly: </p>
            <p>Example 1 : </p>
            <p>On the contract value date a debit entry will be posted to the drawdown account of the loan for the principal amount. The system will generate a statement entry and record the ID of this entry in this field as follows: </p>
            <p>           86.1  STMT.NO ............ 673732684.48            86.2  STMT.NO ............ 1 </p>
            <p>The number automatically generated in Field 86.1 is unique to the contract in question and is built in the following way: </p>
            <p>1.        The first four digits '6737' indicate the number of days            since the 1st of January 1968.  In our example, it            corresponds to the 11th of  June 1986. </p>
            <p>2.        The next five digits '32684' indicate the number of            seconds since midnight.  In our example, it corresponds            to an entry generated on line at 09:04:44 AM. </p>
            <p>3.        The last two digits '48' indicate the number of hundreds            of seconds. </p>
            <p>The value assigned (again automatically) to Field 86.2 identifies the number in 86.1 as a statement entry number. This entry can be seen via the STMT.ENTRY Application using the ID: </p>
            <p>           673732684.480001 </p>
            <p>where the suffix '0001' identifies it as the first statement entry (there may be more than one as the next example will illustrate). </p>
            <p>Example 2 : </p>
            <p>A second example outlined here is for a repayment of principal and interest. In this case two entries are posted to the contract repayment account in the MORTGAGE.ACCOUNT field. Both are statement entries, the first is for the principal repayment and the second for the interest. Although separate entries, both are generated by the same transaction. The IDs of the entries generated are recorded as follows:- </p>
            <p>           86.1  STMT.NO ............ 673732684.48            86.2  STMT.NO ............ 1-2 </p>
            <p>Once again Field 86.1 contains the date-time stamp automatically generated by the system while Field 86.2 now contains two separate numbers signifying that there are in fact two separate statement entries. These entries may be viewed via the  STMT.ENTRY application using the following IDs: </p>
            <p>           673732684.480001            673732684.480002 </p>
            <p>Example 3 : </p>
            <p>A third example might be that of a category entry generated by the application of a charge when the interest rate on a contract is changed. This will generate a statement entry debiting the charge account for the amount of the charge and a category entry crediting the relevant P&amp;L category code. The IDs of the entries generated will be recorded as follows: </p>
            <p>           86.1  STMT.NO ............ 673732684.48            86.2  STMT.NO ............ 1            86.3  STMT.NO ............ 1 </p>
            <p>Once again the standard date-time stamp is generated and inserted in Field 86.1 </p>
            <p>Now, however, both fields 86.2 and 86.3 contain a value. As before the value in field 86.2 indicates that a statement entry has been raised. The value in field 86.3 now indicates that a category entry has also been raised. To view these entries the STMT.ENTRY and now the CATEG.ENTRY application should be used. In this case the ID required for each application is the same as follows: </p>
            <p>           673732684.480001 </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Internal multi-value field.</p>
        </desc>
</t>
<t>
<field>CURRENCY</field>
<desc>
            <p>Contains either the S.W.I.F.T or numeric currency code that denotes the currency of the mortgage. </p>
            <p>The mortgage system can handle both local and foreign currency mortgages loans.  This field is used to specify in which currency the funds are to be given and repaid.  All variable interest rates will be linked to a basic rate defined for this currency. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>CCY (Currency code) (Mandatory Input), Defaults to local currency.</p>
            <p>Must exist on the CURRENCY file.</p>
            <p>Once the deal has been authorised, this field cannot be changed.</p>
        </desc>
</t>
<t>
<field>TOTAL.CHG.TAX</field>
<desc>
            <p>Identifies the total amount of tax on charges applied on the contract.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>System generated, No input field.</p>
            <p />
        </desc>
</t>
<t>
<field>MATURITY.DATE</field>
<desc>
            <p>This field is reserved for future use. </p>
            <p>This field is reserved for future expansion. Currently it contains the same value as the prior field ORIGINAL MAT DATE. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. This is a NOINPUT field.</p>
            <p>Input to this field not allowed.</p>
        </desc>
</t>
<t>
<field>THEORETICAL.AMOUNT</field>
<desc>
            <p>Defines the minimum repayment amount required to fully repay the loan within the term based on the current contract parameters.  This field is only used by the ANNUITY and LINEAR contracts </p>
            <p>This field is maintained by the system and is only used for redemption type contracts, ie LINEAR and ANNUITY. It contains the minimum periodic repayment amount required to repay the loan at the end of the contract term. This amount is calculated at validation and is based on the present contract details, it does not take into account any future changes in interest rates or actual repayment amounts. Details on how this amount is calculated can be found in the Helptext for the REPAYMENT.AMOUNT field. </p>
            <p>If an early redemption is made on a LINEAR contract via the MG.PAYMENT routine then this amount will be automatically recalculated. Similarly, if an interest rate change or, an early redemption, is made on an ANNUITY contract, backdated into a prior repayment period then this amount will again be automatically recalculated. However, if such a change is made on an annuity contract in the current repayment period then the annuity cannot be recalculated due to the differing principal amounts and rates for that period. In this case a new theoretical amount is calculated for the following period and inserted in the "new repay fields" along with the date on which it becomes effective. </p>
            <p>Any interest rate changes on ANNUITY contracts with an effective date in a future repayment period will also result in the calculation of a new theoretical amount. This will be recorded in the "new repay fields" along with an effective date for the new amount. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 19 numeric characters. This is a NOINPUT field.</p>
            <p>This is a NOINPUT field.</p>
            <p>An override will be required if this amount is recalculated automatically due to changes in other contract parameters.</p>
            <p>If any contract parameters are changed in the current repayment period on an annuity contract and the repayment amount cannot be calculated then an override message will be given.</p>
        </desc>
</t>
<t>
<field>MIS.COF.DEPT</field>
<desc>
            <p />
            <p>This field is used within the Management Information   module to define the Department which funded the Type of Additional Cost of   Funds for the Contract.. </p>
            <p />
            <p>This is a multivalue field associated with MIS.COF.TYPE.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Must be a  key to a valid record on the DEPT.ACCT.OFFICER file.</p>
            <p>Mandatory  if MIS.COF.TYPE and MIS.COF.RATE are specified.</p>
        </desc>
</t>
<t>
<field>BROKER.AMOUNT</field>
<desc>
            <p />
            <p>Contains the amount of brokerage to be credited to the brokers account in the currency specified in the BROKER.CCY. This amount can be manually input by the user. If not input, the system will default a value, depending on the following rules :</p>
            <p />
            <p />
            <p>(i)</p>
            <p>If the BROKER.CCY happens to be the same as the deal currency, the amount in BROKERAGE field is defaulted (ii) If the BROKER.CCY is different from the deal currency, the amount in the BROKERAGE field is done at the mid rate between the deal currency and BROKER.CCY. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard amount format for currency. (Optional Input. Default calculated from the brokerage at mid market rates.) Input is not allowed in this field when the broker code has not been entered in BROKER.CODE Input not allowed in this field if no BROKERAGE, or BROKERAGE.CCY has been specified. The amount must be in a valid format for the brokerage currency.  </p>
        </desc>
</t>
<t>
<field>CHARGE.DATE</field>
<desc>
            <p>Contains the value date of the charge defined in the associated fields CHARGE.CODE to CHARGE.ACCOUNT. </p>
            <p>Charges may be applied on a contract in conjunction with certain contract events. These are: contract drawdown, interest rate changes and contract repayments. Charges may also be applied whenever an early redemption is made, however, this is done via the MG.PAYMENT routine. </p>
            <p>All details relating to the charge, the charge type, the currency, the amount and the payment account are specified in this multi-valued set of fields (CHARGE.DATE to CHARGE.ACCOUNT). </p>
            <p>Charge details may be entered in advance of the charge date or with a date equal to the current bank date. Future dated charges will create charge schedules which will be processed during the end of day batch run on the charge date itself.  In the case of a backdated contract input, or a backdated rate change, the charge date may be backdated. In this case the charges will be processed on-line at contract authorization. </p>
            <p>If a charge code has been entered without an associated charge date, then at validation the system will attempt to default a date. This is done by trying to relate the charge to a future event. If the contract has not yet been drawn down then the value date will default. However, once the contract status has reached CUR then the system will try to default firstly from the NEW.INT.EFF.DATE field and then the NEW.REPAY.DATE field. </p>
            <p>Once a charge has been processed it is automatically removed from the contract at the time of the next amendment or input. Previous charges can always be viewed vis the (S)ee function. </p>
            <p>If a contract is reversed using the (R)eversal function then only the charges present on the most recent version of the contract will be reversed. Charges levied on previous versions will not be reversed. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (mandatory input if CHARGE.CODE entered - default dependent on future contract events)</p>
            <p>Input must be a valid future contract event : either contract drawdown, interest rate change or a repayment date.</p>
        </desc>
</t>
<t>
<field>CONTRACT.STATUS</field>
<desc>
            <p>This is a system maintained field which indicates the processing status of the contract. </p>
            <p>During its life cycle within the system a contract will be in one of three states. These are: </p>
            <p>1. FWD - forward </p>
            <p>The contract is forward dated and has not yet reached its value date. At this stage no funds have been drawn down and no processing will be performed until the value date is reached. The contract appears as a contingent entry in the general ledger. </p>
            <p>2. CUR - current (live) </p>
            <p>The contract has now become "current" or "live". The value date has been passed and the principal drawn down. Interest is being accrued on the outstanding principal and repayments are in progress. The contract now represents a live credit balance in the general ledger. </p>
            <p>3. LIQ - liquidated (matured). </p>
            <p>The outstanding principal and interest have been fully repaid and no further processing or amendments are possible. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>3 alpha characters either FWD, CUR or LIQ. This is a NOINPUT field.</p>
            <p>Input to this field is not allowed.</p>
        </desc>
</t>
<t>
<field>MAX.INT.TOL</field>
<desc>
            <p />
            <p>The maximum tolerance on the INITIAL.RATE. The percentage input in this field will be added to the INITIAL.RATE to validate the maximum rate that is to be charged for the contract. If the bank agrees with its customer that the agreement rate will not be increased by more than a specific percentage, then this field is used. </p>
            <p>Example INTEREST.KEY </p>
            <p> = 1 (which is 8%) INTEREST.SPREAD = 2% MAX.INT.TOL = 25% In this case the rate at the time of input (10%) is written to INITIAL.RATE. If the floating rate moves to 11%, the chargeable rate is 11+2 = 13%. However, the contract will be charged a rate of 12.5% only (INITIAL.RATE of 10% plus MAX.INT.TOL 0.25 = 12.5%) In the above example if the floating rate moves to 10%, the chargeable rate is 10+2 = 12%. Since this is within the permitted tolerance, the deal will be charged 12%. Any change in the interest rate through the deal using NEW.INT.RATE will be validated with the initial rate and interest tolerance. Error message will be produced if the new interest rate is greater than the initial rate plus maximum tolerance. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard T24 percentage format. Negative values not allowed. Value input cannot exceed 100. Optional Input. Either MAX.INT.TOL or MIN.INT.TOL alone can be defined if so required. No input permitted if either MAX.INT.RATE or MIN.INT.RATE is input.  Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>INTEREST.KEY</field>
<desc>
            <p>This field is used to obtain an annual rate of interest via the MG.RATE.CONTROL table. </p>
            <p>There are two alternative methods of fixing an interest rate on a mortgage during contract input. The first is via a direct input of the desired rate to the INTEREST.RATE field. This method is useful in an environment where rates vary  between individual contracts. </p>
            <p>The second method makes use of the MG.RATE.CONTROL table. By entering an interest key the current rate for that key will be defaulted into the INTEREST.RATE field during validation. This method is advantageous when the rate of interest is similar between groups of contracts. </p>
            <p>Once the contract has been drawn down, ie the contract status is CUR, then this field and therefore the INTEREST.RATE field cannot be updated. However, the rate on a contract may be changed at any time via the "new interest rate" fields (NEW.INTEREST.RATE - NEW.INT.EFF.DATE). At this time a further advantage of the use of interest keys becomes apparent. When a review takes place a new rate along with the date on which it becomes effective must be entered via the new interest rate fields. If the rate was originally entered by the use of an interest key, then the new rate may also be defaulted using the same key but without the need to re-enter it. In such a case the rate for that key on the effective date entered will be determined and defaulted as the new interest rate. </p>
            <p>Also when changes are made to the interest key via the MG.RATE.CONTROL file, all mortgages linked to the key will be automatically updated with the new rate. </p>
            <p>These two methods of fixing the interest rate are mutually exclusive. An interest key cannot be input if a rate has been entered, and vice versa. However, the use of one method to fix the original rate does not exclude the other when entering new rates. </p>
            <p>Example 1:            PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000       120,000 FIXED VAR IND   FIXED         VARIABLE  VARIABLE INTEREST RATE   10%           11%       11.25% INTEREST KEY                  1GBP      1GBP INTEREST SPREAD               0.5%      0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 4 numeric characters. Multi-value field associated with fields UP.TO.PRINCIPAL, FIXED.VAR.IND, INTEREST.RATE and INTEREST.SPREAD. (optional input)</p>
            <p>Input not allowed if an interest rate has been input.</p>
            <p>Must be a valid interest key on the BASIC.RATE.TEXT table.</p>
            <p>A valid rate must be defined on the MG.RATE.CONTROL table for the interest key, contract currency and effective date entered/defaulted.</p>
            <p>Input not allowed once the contract has been authorised with a contract status of CUR.</p>
        </desc>
</t>
<t>
<field>TAX.RATE</field>
<desc>
            <p>This field holds the annual rate with which Tax is calculated in the contract.This rate is applied on either the Interest, Principal or both depending upon the field TAX.ON.</p>
            <p>The rate is picked up from the TAX record which is determined by the TAX.TYPE.KEY, TAX.KEY and APPLIED.TAX.KEY fields in the contract.Currently, only Flat rates of Tax are applicable in mortgages.</p>
            <p>This field is a NOINPUT field and is updated by the system during the validation of the transaction.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>A Noinput field.</p>
        </desc>
</t>
<t>
<field>TAX.E.I</field>
<desc>
            <p>Defines if any Tax is applied on the contract.</p>
            <p>Allowed Inputs are :</p>
            <p>'N' - No Tax ( Default Value) </p>
            <p>'E' - Annuity amount excludes Tax component</p>
            <p>'I' - Annuity amount includes Tax component</p>
            <p>If Null or 'N' is input in this field, then the other tax related fields are made no input.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Option 'I' is allowed only for Annuity type of contracts.</p>
            <p>Once input and authorised, this field cannot be changed.</p>
            <p>In the unauthorised stage, if the value in this field is         changed from 'I' to 'E' or 'E' or 'I', then an override         will be generated explaining the same.</p>
            <p>Also refer to help text for field CONTRACT.TYPE, for product switch       processing rules.</p>
            <p />
        </desc>
</t>
<t>
<field>CATEGORY</field>
<desc>
            <p>Defines the product category to which the contract will be accounted. </p>
            <p>This field defines the exact product type to which the contract belongs. A range of category codes are reserved for use within the mortgage module (25000 - 25499). Within this range further sub ranges for each of the allowable mortgage products are defined on the MG.PARAMETER table. The exact product category of each individual contract is defined in this field and must be within the allocated range for the contract type of the loan. </p>
            <p>The category code of loan may be changed throughout its life, providing that it remains within the range defined on the parameter record for the contract type. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>5 numeric characters. (mandatory input)</p>
            <p>Must be a valid category on the CATEGORY table.</p>
            <p>Must be within the range defined on the MG.PARAMETER record for the contract type of the loan.</p>
            <p>For rules for product switching refer to help text for field CONTRACT.TYPE.</p>
        </desc>
</t>
<t>
<field>INITIAL.RATE</field>
<desc>
            <p />
            <p>The applicable interest rate at the time of first input of the contract. For fixed rate contracts, the INTEREST.RATE and for floating types, the rate for the INTEREST.KEY plus INTEREST.SPREAD is stored in this field. This rate is stored in order to validate the future changes to the interest rate. If the user desires to control the movements in interest rate to a pre-defined range of values (minimum and maximum chargeable interest) it is necessary to store the rate at the time of first input. </p>
            <p />
            <p />
            <p />
            <p />
            <p>If MAX.INT.TOL &amp; MIN.INT.TOL are input, the respective percentages are adjusted to the INITIAL.RATE to decide the chargeable rate on the contract. </p>
            <p />
            <p />
            <p />
            <p>SYSTEM updated field. No input is permitted.</p>
            <p />
        </desc>
</t>
<t>
<field>OVERRIDE</field>
<desc>
            <p>Contains all the Override messages which the user agreed to during Input. </p>
            <p>During the validation of a contract, the system may provide the user with a series of screen override messages to indicate an anomaly, for instance, the repayment amount entered differs from that calculated by the system. </p>
            <p>In the event that the user confirms the Override, the full text of the actual Override Message will be stored, for reference purposes only, in this multi-value field. </p>
            <p>In the example given above when the deal is validated a warning bell will sound and a message will appear, at the foot of the screen, which reads: </p>
            <p>     'REPAYMENT AMOUNT DIFFERS FROM THEORETICAL' </p>
            <p>This will draw the user's attention to the amount entered, which may be a mistake and can then be corrected, alternatively the input may be correct in which case the user must confirm the input. </p>
            <p>A second example might be in respect of a contract with a client who has a credit line established with the bank, but where the maturity date of the contract goes beyond the credit line expiry date. In this case when the deal is validated a warning bell will sound and a message will appear, at the foot of the screen, which reads: </p>
            <p>           'LIMIT EXPIRES BEFORE TXN MATURITY' </p>
            <p>Once again the user's attention is drawn to the situation which can then be either corrected, or, confirmed via a positive response to the Override Message. </p>
            <p>If, subsequently, the contract record is either fully displayed or printed, then all override messages raised during the input of that version of the contract will be displayed. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Internal field. Multi-value field.</p>
        </desc>
</t>
<t>
<field>NEW.INT.SPREAD</field>
<desc>
            <p>Identifies an interest spread that will be used with the interest key entered in the NEW.INTEREST.KEY field to determine a new interest rate. </p>
            <p>Once a contract has been authorised with a contract status of CUR it is no longer possible to amend the INTEREST.RATE field. However, the interest rate may be changed by the use of an interest key entered in the NEW.INTEREST.RATE field and a spread entered here. The date on which that rate becomes effective is defined in the NEW.INT.EFF.DATE field. </p>
            <p>If the original rate was fixed using an interest key and spread, then the same key and spread may be used to determine the new rate. This is achieved by simply entering an effective date in the NEW.INT.EFF.DATE field. At validation the appropriate rate for the original key on the new effective date will be determined. </p>
            <p>The resultant rate will be defaulted into the NEW.INTEREST.RATE field during validation. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL.. (optional input)</p>
            <p>Input only allowed if the contract status is CUR.</p>
            <p>Input not allowed if a value is present in the NEW.INTEREST.RATE field.</p>
            <p>Input only allowed with an interest key in the NEW.INTEREST.KEY field.</p>
            <p>The interest rate resulting from the combination of the rate from the interest key in the NEW.INTEREST.KEY field and this field must be positive.</p>
        </desc>
</t>
<t>
<field>REPAY.REVIEW.FREQ</field>
<desc>
            <p>When a change is required in the repayment amount, the date of the change will be taken from next date calculated from the frequency entered in this field. </p>
            <p>This field allows a date and frequency in which the repayment amount may be changed. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date/frequency format.</p>
            <p>Input only allowed for redemption type contracts (ANNUITY, LINEAR).</p>
        </desc>
</t>
<t>
<field>TAX.TYPE.KEY</field>
<desc>
            <p>This field is used to determine the Tax code to be applied on the contract depending on the TAX.TYPE.CONDITION and the CUSTOMER.CHARGE files.This field contains a valid record in TAX.TYPE.CONDITION.The system then reads the CUSTOMER.CHARGE table and picks up the relevant tax record.When both the Tax Type Key and Tax key are given, the tax key determined through the Tax Type key is used for the calculation of Tax on the contract and it is updated into a field called APPLIED.TAX.KEY.The value entered in the TAX.KEY field is not overwritten by this value.</p>
            <p>Validation Rule</p>
            <p />
            <p>A Valid TAX.TYPE.CONDITION record.</p>
        </desc>
</t>
<t>
<field>ASSOC.CONTRACT</field>
<desc>
            <p>Identifies any other contracts that are specifically associated with, or linked to, the current contract. </p>
            <p>Within this module it is possible to link a number of contracts together for administrative purposes. This may be useful as a way of providing a cross reference for contracts that relate to the same customer or collateral. An example of this would be a second mortgage taken out on the same property to finance additional building work, or a subsidy contract provided by the local government. </p>
            <p>Contracts are linked by giving them the same ID with the addition of an alpha character suffix. Within this structure there is always one contract that represents the master or main contract to which all the associated contracts are linked. The ID of this main contract does not have a suffix. This "master" ID is then used for all associated contracts with the addition of a valid suffix. </p>
            <p>This field is used on the master contract to record all those contracts that are associated with it. Input is not be allowed to this field on any of the associated contracts, ie any contract with a suffix in its ID. The link from each associated contract to the master contract is implicit because of the presence of a suffix in the ID. </p>
            <p>Only contracts with the same root ID (first twelve characters) may be associated with another contract. Because of this it is only necessary to enter the associated contract suffix in this field, as the rest of the ID will be defaulted. </p>
            <p>All associated contracts must be input and authorised before they can be linked via this field </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 alpha character or 10 numeric characters prefixed by MG with a suffix of 1 alpha character. (optional input)</p>
            <p>Contract numbers input in this field must relate to contracts that have already been authorised.</p>
            <p>The root (first 12 characters) of any ID entered must be the same as the ID of the current contract.</p>
            <p>Input not allowed on contracts with a suffix in their ID.</p>
        </desc>
</t>
<t>
<field>INIT.REPAY.AMT</field>
<desc>
            <p />
            <p>The repayment amount arrived at the time of first input of the deal is written to this field for validating future movements to the NEW.REPAY.AMOUNT. If the user desires to control the movements in repayment amounts to a pre-defined range of values (minimum and maximum) it is necessary to store the amount at the time of first input. </p>
            <p />
            <p />
            <p>If MAX.REPAY.TOL &amp; MIN.REPAY.TOL are input, the respective percentages are adjusted to the INIT.REPAY.AMT to validate NEW.REPAY.AMOUNT on the contract. </p>
            <p />
            <p />
            <p>SYSTEM updated field. No input is permitted.</p>
            <p />
        </desc>
</t>
<t>
<field>FIXED.VAR.IND</field>
<desc>
            <p>Defines whether the interest key specified below is to be fixed at the contract input stage, or whether the contract should be linked to the interest key changes. </p>
            <p>This field determines whether the mortgage is to be tied to a variable or fixed interest rate.  If 'VARIABLE' is specified then a interest key must be specified.  All changes to the interest key will reflect in the mortgage contract by being automatically updated whenever a change to the MG.RATE.CONTROL record is made. </p>
            <p>Example 1:            PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000       120,000 FIXED VAR IND   FIXED         VARIABLE  VARIABLE INTEREST RATE   10%           11%       11.25% INTEREST KEY                  1GBP      1GBP INTEREST SPREAD               0.5%      0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Can be either 'FIXED' or 'VARIABLE' or abbreviations thereof. Multi-value field associated with fields UP.TO.PRINCIPAL, INTEREST.RATE, INTEREST.KEY and INTEREST.SPREAD.</p>
            <p>If entered, a INTEREST.KEY must also be entered below.</p>
        </desc>
</t>
<t>
<field>CHARGE.ACCOUNT</field>
<desc>
            <p>Identifies the account to which the charge amount entered in the associated CHARGE.AMOUNT field is to be debited. </p>
            <p>For each charge code entered, an account to which the charge amount is to be debited must also be entered. This can be done manually or defaulted by the system. </p>
            <p>The account defaulted is dependent on the contract status. If the contract has passed drawdown, ie. the last authorised version has a contract status of CUR, then the loan repayment account defined in the MORTGAGE.ACCOUNT field will be defaulted. Contracts which have not yet drawn down will default the account from the DRAWDOWN.ACCOUNT field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard account number format. or   3 - 10 alphanumeric account mnemonic. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (mandatory input if CHARGE.CODE entered - default dependent on contract status)</p>
            <p>Must be a valid account on the ACCOUNT file.</p>
            <p>An override will be required if the customer of the account entered is not that of the contract.</p>
            <p>The account currency must be the same as the charge currency (CHARGE.CCY).</p>
        </desc>
</t>
<t>
<field>CLOSURE.DATE</field>
<desc>
            <p>Identifies the forward value date for closure of an annuity mortgage. </p>
            <p>For Annuity type mortgages it is possible to enter a forward valued closure via the MG.PAYMENT module. </p>
            <p>When this is the case, this field will be automatically updated from MG.PAYMENT with the closure date.  PAYMENT.REFERENCE will also be updated with the id of the MG.PAYMENT record. </p>
            <p>When these fields are present, no subsequent changes to the Mortgage contract will be allowed. </p>
            <p>If changes are required, then the forward valued MG.PAYMENT must be reversed first. </p>
            <p>Identifies any additional element which has been defined locally to meet a particular requirement. </p>
            <p>As in other T24 applications, up to 999 Local Elements may be defined in addition to the standard fields previously specified for this application.  These local elements should be defined by the User where deemed necessary according to local practice. </p>
            <p>The name(s) of the new element(s), as well as the Format and <p>Validation Rules:</p>, must be defined in the Local Tables prior to the creation of any Mortgage contracts. </p>
            <p>For more information regarding the use of Local reference fields refer to the LOCAL.TABLE Helptext. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. Up to 35 characters as defined in the local table definition for this local reference field. (Optional or Mandatory input according to definition in LOCAL.TABLE (Ref: Utilities) for this Local Reference element.)</p>
            <p>This is a NO INPUT field. 71.1   LOCAL REF As defined by the User within the individual Local Tables.</p>
        </desc>
</t>
<t>
<field>COMMITTED.INTEREST</field>
<desc>
            <p>Specifies the amount of interest due at the next repayment date. </p>
            <p>The amount of interest to be paid by the customer at the next interest repayment date is held in this field. This is maintained by the system and is calculated at validation. This amount will be recalculated whenever a change in the interest rate for the current period is entered or the principal is changed via the MG.PAYMENT routine. Similarly, the processing of scheduled repayments via the end of day batch routines will update this field. </p>
            <p>This field is maintained for information purposes only and does not effect the interest accrual and repayment processing. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 19 numeric characters. This is a NOINPUT field.</p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>CONTRACT.DATE</field>
<desc>
            <p>Specifies the date of agreement of the contract. </p>
            <p>This field is used to record the date on which the terms of the contract were agreed by the parties concerned. This date does not effect the processing of the contract and is held for information purposes only </p>
            <p>If a null value is entered in this field the date of input of the contract will be defaulted. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. (mandatory input - default the current date)</p>
            <p>Must be a working day.</p>
        </desc>
</t>
<t>
<field>STMT.NO</field>
<desc>
            <p>STMT.NO </p>
        </desc>
</t>
<t>
<field>PAYMENT.REFERENCE</field>
<desc>
            <p>Identifies the MG.PAYMENT reference for a forward annuity closure. </p>
            <p>For Annuity type mortgages a forward value payment, either full or partial, can be entered via the MG.PAYMENT module. </p>
            <p>When this is the case, this field will automatically be updated from MG.PAYMENT with the id of the MG.PAYMENT record. </p>
            <p>When this field is present no subsequent changes to the Mortgage contract are allowed. </p>
            <p>If changes are required, then the forward valued MG.PAYMENT must be reversed first. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This field has three components as follows: a)   A valid contract ID, 10 numeric characters       prefixed by 'MG' with an optional 1 alpha prefix. b)   "," c)   1 - 3 alpha character payment number, MGYYDDDNNNNNA.NN</p>
            <p>This is a NO INPUT field.</p>
            <p>Must be a valid id on the MG.PAYMENT file.</p>
        </desc>
</t>
<t>
<field>PAYMENT.TYPE</field>
<desc>
            <p>After the first redemption,  interest only periods can be defined. This field will be used to determine if the repayment is interest-only or annuity. The field can hold either I or A. If set to I, then the system will treat the period from the new.redeem.date in the same set till the new.redeem.date in the following A set as interest only period.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>The last set can only be A type.</p>
        </desc>
</t>
<t>
<field>CURRENCY.MARKET</field>
<desc>
            <p>Identifies the currency market applicable to the contract. Currently only market 1 may be used. This field identifies the currency market which is applicable to the contract. This is currently a NOINPUT field which default to market 1. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 numeric character. This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>MIN.REPAY.AMT</field>
<desc>
            <p />
            <p>The minimum repayment amount permissible for the contract. The repayment amount arrived at the time of first input of the contract is stored in INIT.REPAY.AMT. On account of a MG.PAYMENT or due to any re-scheduling, the new repayment amount cannot be lower than the value input in this field and this validation is done through the life of the contract. </p>
            <p>Example </p>
            <p>At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT = 10,000 Input in MIN.REPAY.AMT = 9,000 On account of re-scheduling or rate change through the deal, NEW.REPAY.AMOUNT is calculated to be 8,000. In such case error will be produced prompting the user to change the minimum repayment amount. However, if the same situation arises out of rate change through MG.RATE.CONTROL or payments made through MG.PAYMENT, the NEW.REPAY.AMOUNT will be restricted to 9,000 and the term of the contract will be shortened suitably. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard T24 amount format 1 -14 numeric characters plus a decimal point Value must be greater than zero Optional      Input. Either MAX.REPAY.AMT or MIN.REPAY.AMT alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. No input is permitted if MAX.REPAY.TOL or MIN.REPAY.TOL is input Input permissible only for ANNUITY and LINEAR contracts Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>INT.LIQ.ACCOUNT</field>
<desc>
            <p>In certain cases, the principal may be required to be liquidated from one account and interest from another account (possibly from another customer). In such a scenario, this field can be used to specify a liquidation account for interest alone (including interest tax, if any), and principal liquidation account can be input in MORTGAGE.ACCOUNT.</p>
            <p>If left blank, this field will default the account specified in MORTGAGE.ACCOUNT, and both principal and interest will be liquidated from the same account.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard account number format. or 3 - 10 alphanumeric account mnemonic. (Mandatory input) Input must be a valid account of the same currency as the loan. The account entered must be either a current account or have an account class of MORTGAGE. An override will be required if the customer of the account is not the customer of the loan. An override will be required if the account input is a SAVINGS account. If the contract is linked to another contract, ie it has a suffix in its key, and the mortgage account differs on the main deal, an override is required. If the contract has associated deals (see ASSOC.CONTRACT field), an override will be required for each associated deal with a different mortgage account to that entered here. </p>
        </desc>
</t>
<t>
<field>MG.PAYMENT.IDS</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>UP.TO.PRINCIPAL</field>
<desc>
            <p>Allows banded interest rates to be applied on the principal amount of the loan.  This field is used to specify the bands applicable. </p>
            <p>This field together with the interest rate fields below allow for banded interest rates to be specified for the contract. Different interest rates can be applied to portions of the principal amount lent.  The amount specified here will define a band up to which interest rates specified below will be applied. </p>
            <p>Example 1:            PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000       120,000 FIXED VAR IND   FIXED         VARIABLE  VARIABLE INTEREST RATE   10%           11%       11.25% INTEREST KEY                  1GBP      1GBP INTEREST SPREAD               0.5%      0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>1 - 18 numeric characters. Multi-value field associated with fields FIXED.VAR.IND, INTEREST.RATE, INTEREST.KEY and INTEREST.SPREAD.</p>
            <p>The amount entered cannot exceed the principal amount lent on the mortgage.</p>
            <p>Each multi-value amount must be in ascending sequence.</p>
            <p>Can only be applied on LINEAR and NON-REDEMPTION type mortgages.</p>
            <p>The last multi-value in the set must be blank.</p>
        </desc>
</t>
<t>
<field>CONTRACT.TYPE</field>
<desc>
            <p>Defines the product type of the contract. This product type determines the way in which the loan is to be repaid. </p>
            <p>This field identifies the product type of the contract and therefore determines the method of repayment. There are four product types available. These are: </p>
            <p>1. ANNUITY </p>
            <p>This type of loan has a fixed periodic repayment amount (the "annuity") consisting of two variable components of principal and interest. The repayment amount is calculated at the start of the contract so that the principal will be fully repaid after the required number of repayments. Initially, repayments consist mostly of interest. However, as the contract progresses, the size of the principal component increases as the accrued interest reduces. </p>
            <p>2. LINEAR </p>
            <p>Linear loans also have an interest and a principal component to their periodic repayments. In this case, however, the principal repayment amount remains fixed over the lifetime of the contract. The interest element reduces as the accrued interest on the reducing balance decreases. This leads to a repayment scheme whereby the total periodic repayment reduces over the lifetime of the contract. </p>
            <p>3. SAVING </p>
            <p>With this type of loan there are no periodic repayments of principal, only interest. As the principal balance remains the same throughout the life of the contract, so the accrued interest, and therefore the periodic interest repayments, remain fixed. The principal amount is repaid in full with a single payment on the contract maturity date. </p>
            <p>This type of contract may have a savings scheme or insurance policy associated with it that will be used to repay the loan at maturity. If required, the payments to these policies may be made automatically via the "additional payment" fields on the contract. Although the processing of these additional payments may be performed by the this module, the maintenance of the associated savings scheme or insurance policy is not. </p>
            <p>4. NONREDEM </p>
            <p>NONREDEM loans are similar to SAVING loans in that there is no regular repayment of principal only interest. In practice, however, they differ by not having any savings scheme or insurance policy associated with them. The way in which SAVING and NONREDEM contracts are processed is exactly the same and the two types exist only for classification purposes. </p>
            <p />
            <p>Effective T24 release G 14.0; it is possible to switch from any one product to another, any time during the contract life cycle provided there are no past dues for the contract. While changing the product, the category for the product also needs to be changed so that it conforms to the category range defined in MG.PARAMETER for the new product. Once the product is changed, subsequent processing of the contract would be handled as per the extant logic (as applicable for the new product).</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>1 - 10 Alpha characters. Must be either ANNUITY, LINEAR, SAVING or LINEAR. (mandatory input)</p>
            <p>Input must be either "ANNUITY", "LINEAR", "SAVING" or "NONREDEM"</p>
            <p>Following rules shall apply for product switching:</p>
            <p>a)</p>
            <p>ANNUITY to LINEAR System would recalculate the repayment amount based on the existing data. The recalculation would be done on the outstanding principal. If tax were calculated on the annuity contract (on inclusive basis), system would change the calculation of tax on exclusive basis. Value in field REPAYMENT.AMOUNT whether user defined or system defaulted would be cleared by the system. The repayment amount would be recalculated by the system based on the outstanding balance.</p>
            <p>b)</p>
            <p> LINEAR to ANNUITY System would recalculate the repayment amount based on the existing data. The recalculation would be done on the outstanding principal. Tax calculation would continue on the same basis as defined for original product. Value in field REPAYMENT.AMOUNT whether user defined or system defaulted would be cleared by the system. The repayment amount would be recalculated by the system based on the outstanding balance. If banded interest rate structure were defined for LINEAR product, new interest rate will have to be input in field 29 (NEW.INT.EFF.DATE) to 34.1 (NEW.INT.SPREAD). The new interest rate cannot be banded can be effective the process date (TODAY) only.</p>
            <p>c)</p>
            <p>ANNUITY/LINEAR to SAVING/NON-REDEMPTION  Value in REPAYMENT.AMOUNT field would be cleared by the system.  Value in field REDEMPTION.DATE would be cleared by the system. Value in field TERM would be cleared by the system if the change were to NON-REDEMPTION. If an ANNUITY/LINEAR contract were switched to SAVING type after one repayment or redemption, system would recalculate the balance term till the maturity date. The term calculated by the system would be stored in NEW.TERM field.</p>
            <p>d)</p>
            <p>SAVING to ANNUITY/LINEAR If redemption date were not input, value in field REPAYMENT.DATE would be defaulted as REDEMPTION.DATE by the system. Repayment amount would then be calculated based on the outstanding balance. Maturity date would be recalculated by the system based on the value in fields TERM and REDEMPTION.DATE. If a SAVING type contract were changed to ANNUITY or LINEAR type after one repayment, system would populate the balance term in field NEW.TERM. Maturity date would be recalculated based on the value in fields NEW.TERM and REDEMPTION.DATE.</p>
            <p>e)</p>
            <p>SAVING to NON-REDEMPTION Value in field TERM would be cleared by the system. Value in field REDEMPTION.DATE would be cleared by the system.</p>
            <p>f)</p>
            <p>NON-REDEMPTION to ANNUITY/LINEAR  Input in field TERM would be mandatory. Maturity date would be recalculated by the system based on the value TERM field. If redemption date were not input, value in field REPAYMENT.DATE would be defaulted as REDEMPTION.DATE by the system. Repayment amount would then be calculated based on the outstanding balance. Redemption date would be inputtable if there is no value in REDEM.ST.DATE field. If a NON-REDEMPTION contract were changed to either ANNUITY or LINEAR after one repayment, input in NEW.TERM field (indicating balance term) is mandatory. Based on the value in TERM/NEW.TERM field and REDEMPTION.DATE field, system would recalculate the maturity date.</p>
            <p>g)</p>
            <p>NON-REDEMPTION to SAVING Input in field TERM would be mandatory. Maturity date would be recalculated by the system based on the value TERM field.</p>
            <p>h)</p>
            <p>Rules for Any Product Switch Value, if any, in field TERM.PRIORITY would be set to NULL. All forward dated rate changes defined would be cleared. Existing values in PAYMENT.TYPE, NEW.REPAY.AMT and NEW.REDEM.DATE fields would be cleared by the system. Values in fields MAX.REPAY.AMT, MIN.REPAY.AMT, MAX.REPAY.TOL and MIN.REPAY.TOL would be cleared. Values in fields MAX.INT.RATE, MIN.INT.RATE, MAX.INT.TOL and MIN.INT.TOL would be cleared.</p>
        </desc>
</t>
<t>
<field>CHARGE.TAX.AMT</field>
<desc>
            <p>Identifies the amount to be taxed against the Charge amount.This amount is defaulted at the time of validation of the contract. Tax is applied on the same currency as the Charge currency.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>This is a noinput field.</p>
            <p>This is a multivalue field associated with the fields from CHARGE.DATE to CHARGE.TAX.CODE</p>
        </desc>
</t>
<t>
<field>INDUSTRY</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>CHARGE.TAX.CODE</field>
<desc>
            <p>Specifies the TAX.CODE applicable on the charges on the contract. The Tax codes defined on this field will be defaulted by the system depending on the charge codes entered on the contract.The Tax codes are held on the FT.CHARGE.TYPE or the FT.COMMISSION.TYPE file.for the charge code applicable.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>System Generated, No Input field.</p>
            <p />
        </desc>
</t>
<t>
<field>MIS.COF.TYPE</field>
<desc>
            <p />
            <p>Specifies the type of  Additional Cost of Funds    that needs  to be calculated,  in addition to the refinancing amount    using  MIS.INTEREST.KEY/RATE.</p>
            <p />
            <p>For example Liquidity cost  might be calculated in   addition to the refinancing amount. </p>
            <p />
            <p>This field is a multivalue field associated with   MIS.COF.RATE, MIS.COF.DEPT .</p>
            <p />
            <p>If  both   refinancing rates   (MIS.INTEREST.KEY/RATE) and type of  Additional cost of funds   (MIS.COF.TYPE) are not specified in the contract, then the Pool rates if    specified for the Contract Group in MI.PARAMETER would be used for calculating   both refinancing amount  and additonal Cost of Funds. </p>
            <p />
            <p>If  only   refinancing rates (MIS.INTEREST.KEY/RATE) are specified in the Contract and type of  Additional cost of funds (MIS.COF.TYPE) are not specified in the contract, then the additonal Cost of Funds would not be calculated.. </p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>Must be the ID of  a valid record on the     MI.COF.TYPE file.</p>
            <p />
            <p>Optional.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>ADD.RESERVED</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field. Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1.</p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>CHARGE.CODE</field>
<desc>
            <p>Identifies the type of charge(s) to be levied as defined on the FT.CHARGE.TYPE table. </p>
            <p>This field identifies the type of charge that is to be levied on the date held in the associated value of the CHARGE.DATE field. </p>
            <p>This code identifies a charge type defined on the FT.CHARGE.TYPE table. This table contains a record for each charge type available. Each record contains a description, a default charge amount and the P&amp;L category which is to be credited whenever the charge is levied. </p>
            <p>The description from the FT.CHARGE.TYPE will be displayed as an enrichment to this field. </p>
            <p>Whenever a charge is processed the account entered in the associated CHARGE.ACCOUNT field will be debited. The P&amp;L category defined on the FT.CHARGE.TYPE record for the charge code will be credited. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 2 alphanumeric characters. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (optional input)</p>
            <p>Must be a valid charge code on the FT.CHARGE.TYPE table.</p>
            <p>The same combination of charge code and charge date cannot be duplicated in this set of fields.</p>
        </desc>
</t>
<t>
<field>CONTRACT.NO</field>
<desc>
            <p>Uniquely identifies each contract on the mortgage main file. </p>
            <p>Each contract on the main file has a unique contract number that is used throughout the system to identify the contract. This number is assigned when the contract is first entered into the system. This can be done either manually or automatically by use of the F3 key, providing that auto IDs have been specified on the company record for the mortgage module. </p>
            <p>The format of the key is as follows: </p>
            <p>           MG YYDDD NNNNN A </p>
            <p>where:     MG       -         Mortgage module identifier.            YYDDD    -         Year and date of input in julian date                        format.            NNNNN    -         Sequence number which is unique for the date                               of input.            A        -         Suffix which must be defined on the                      MG.PARAMETER table. </p>
            <p>It is not necessary to enter the full contract number when accessing an existing contract or inputting a new one. If the contract has been input the same day, or is a new contract, then only the sequence number portion need be entered. In all cases it is not necessary to type any leading zeroes in the sequence number. </p>
            <p>Example : </p>
            <p>To enter a new contract on 1st Jan 1990 with a sequence number of 99 the only input required is "99". This will generate a contract no of "MG9002300099". </p>
            <p>To access this contract later in the same day the only input required is still "99". </p>
            <p>To access the contract the following day both the date and sequence number (without leading zeroes) should be entered, ie "90002399". </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>10 numeric characters prefixed by MG with an optional suffix of 1 alpha character. MGYYDDDNNNNNA (see details) (mandatory input)</p>
        </desc>
</t>
<t>
<field>OLD.CUSTOMER</field>
<desc>
            <p />
            <p>When the customer on a contract is changed through field NEW.CUSTOMER, the id of the previous customer is maintained by the system in this field. This field is non-inputtable.</p>
            <p />
        </desc>
</t>
<t>
<field>PRIN.EFF.DATE</field>
<desc>
            <p> The effective date of the principal increase. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>Standard date format. (Optional input.)</p>
            <p>Cannot be less than process date.  </p>
            <p>Mandatory input if a value in PRIN.INCREASE.    </p>
            <p>Should be in the current period</p>
            <p>The multivalue sets should be in the ascending order of the effective date</p>
        </desc>
</t>
<t>
<field>ADD.NEW.DATE</field>
<desc>
            <p>Defines the date on which the new additional repayment amount entered in the ADD.NEW.AMOUNT field becomes effective. </p>
            <p>The repayment amount for any of the additional types entered on the contract may be changed at any time. The new amount is entered in the ADD.NEW.AMOUNT field and this field contains the date on which that amount becomes effective. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1 (optional input - not allowed unless ADD.PAY.TYPE entered.)</p>
            <p>Input not allowed if an additional payment type is not defined in the associated multi-value of the ADD.PAY.TYPE field.</p>
            <p>Input not allowed unless a new repayment amount has been defined in the associated value of the ADD.NEW.AMOUNT field.</p>
            <p>Input cannot be a date prior to the next repayment date defined in the REPAYMENT.DATE field.</p>
            <p>Input must be a valid repayment date defined by the REPAYMENT.DATE field.</p>
        </desc>
</t>
<t>
<field>COMM.TAX</field>
<desc>
            <p>This field specifies the amount of tax due at the next repayment or redemption date.This is a system maintained field without any user input.This amount is calculated with the Tax rate field by applying the rate on interest or principal or Both depending on TAX.ON field in the contract.This amount gets recalculated if there is a change in the tax rate or on the repayment schedule dates.Thus the tax amount for the next period or till the next repayment date is updated into this field.This field does not affect any of the Interest accruals or other processing.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>This is a NOINPUT field.</p>
            <p>This is an amount field.</p>
            <p />
        </desc>
</t>
<t>
<field>ADD.PAY.DATE</field>
<desc>
            <p> The field holds the payment date and frequency for additional payment types. The payment date and the frequency can be different from that of repayment date and frequency. Frequency can be weekly or monthly.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>Standard T24 frequency field.</p>
        </desc>
</t>
<t>
<field>ASSET.CLASS</field>
<desc>
            <p>Indicates the asset classification for the contract.</p>
            <p>If the contract is eligible for Provisioning, system updates this field during COB according to the rules stated in ASSET.CLASS.PARAMETER.</p>
            <p>Allows Manual input as well (by changing PROVISION.METHOD field to MANUAL) to override the System classification. Accounting entries would be raised online in accordance with the new asset class.</p>
            <p>When PD exists for the contract, asset classification should match the Classification in the corresponding PD contract.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Input allowed only when PROVISION.METHOD is MANUAL   </p>
            <p>Should be a valid key to LN.ASSET.CLASS table.   </p>
            <p>Holds Null when there is no asset classification.   </p>
            <p>Maximum of 3 Numeric characters.</p>
        </desc>
</t>
<t>
<field>VALUE.DATE</field>
<desc>
            <p>Specifies the value date of the contract. </p>
            <p>The date held in this field represents the date on which the principal amount of the contract is transferred to the customer. It is also the date on which interest accruals commence on the outstanding balance of the contract. </p>
            <p>This date may be entered as either a future date, the current date or a date in the past. If forward dated then the contract status will be FWD until the value date is reached, at which time, the principal amount will be drawn down and the contract status changed to CUR. An input of a null value will result in the current date being defaulted. The value date may be changed at any time whilst the contract status is FWD. </p>
            <p>If backdated or 'today' dated then the contract will be drawn down, on-line, at authorization and the contract status set to CUR. Also, if backdated into a prior month, interest will be accrued on-line up to the end of the previous month. </p>
            <p>Input of a non working day will require an override. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. (mandatory input)</p>
            <p>Must be after the date input to the CONTRACT.DATE field.</p>
            <p>Input not allowed once the contract status has become CUR.</p>
            <p>An override will be required if this date is backdated.</p>
            <p>An override will be required if this date is a non working day.</p>
        </desc>
</t>
<t>
<field>MIN.REPAY.TOL</field>
<desc>
            <p />
            <p>Minimum tolerance on the repayment amount. The percentage input in this field is reduced to the INIT.REPAY.AMT to validate the NEW.REPAY.AMOUNT. If the bank agrees with its customer that the repayment amount will be restricted to certain percentages on the initial repayment amount, this field is used. If such movement is to be restricted to an absolute value MIN.REPAY.AMT may be input. On the contrary, if such restriction is defined as a percentage on the INIT.REPAY.AMT, this field is used. </p>
            <p>Example At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT </p>
            <p>= 10,000 Input in MIN.REPAY.TOL = 25% On account of rescheduling or rate change through the deal the NEW.REPAY.AMOUNT is calculated to be 7,000. In such case error message would be produced for change of the tolerance level. However for payments made through MG.PAYMENT and rate changes through MG.RATE.CONTROL, the NEW.REPAY.AMOUNT will be restricted to 10,000 less 25% = 7,500 and the term of the contract will be shortened suitably. However, if the re-scheduling results in a NEW.REPAY.AMT of 8,000, this will be maintained as it is within the tolerance percentage of 25% </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Standard T24 percentage format Value must be greater than zero. Maximum allowed value is 100 Optional Input. Either MAX.REPAY.TOL or MIN.REPAY.TOL alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. Not available for input if MAX.REPAY.AMT or MIN.REPAY.AMT is input Input permissible only for ANNUITY and LINEAR contracts Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>NEW.INT.RATE</field>
<desc>
            <p>This field allows the interest rate to be changed during the life of the contract. The new rate may be entered in this field or calculated via an interest key and spread. </p>
            <p>Once a contract has been authorised with a contract status of CUR it is no longer possible to amend the INTEREST.RATE field. However, the interest rate on a "Live" contract may be changed via this field. The date on which this new rate becomes effective is defined in the NEW.INT.EFF.DATE field. </p>
            <p>The new rate may be either entered manually in this field, or, calculated by entering an interest key and spread in the NEW.INTEREST.KEY and NEW.INT.SPREAD fields. If the original rate was fixed using an interest key and spread then the same key and spread may be used to determine the new rate. This is achieved by simply entering an effective date in the NEW.INT.EFF.DATE field. At </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. Multi-value field associated with fields NEW.UP.TO.PRIN  to NEW.THEORETICAL.. (optional input) date will be determined.</p>
            <p>Input only allowed when the contract status is CUR.</p>
            <p>Input must be positive, zero is allowed.</p>
            <p>Input is not allowed if data is present in either of the fields NEW.INTEREST.KEY or NEW.INT.SPREAD.</p>
        </desc>
</t>
<t>
<field>DD.EXCG.RATE</field>
<desc>
            <p>If the Drawdown account is denominated in a currency different to the contract currency, the exchange rate to be applied for conversion of the deal amount may be input in this field. If no input is made the system would default the appropriate sell rate from the CURRENCY TABLE. </p>
            <p>This field is inputtable even when a principal increase is drawndown in a currency different to the contract currency.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Input allowed only if Drawdown Account currency is different from       contract currency.</p>
        </desc>
</t>
<t>
<field>NEW.TERM</field>
<desc>
            <p>Holds the actual No of repayment periods between repayment date and the maturity of the contract</p>
        </desc>
</t>
<t>
<field>NEW.REPAY.AMT</field>
<desc>
            <p>Specifies any new repayment amounts which are required to become effective at a future date. This field is only used for ANNUITY and LINEAR type contracts. </p>
            <p>For redemption type contracts (ANNUITY and LINEAR) it is possible to change the repayment amount a number of times throughout the life of the contract. This can be done in one of two ways, either the new amounts are entered in the REPAYMENT.AMOUNT field immediately prior to them becoming effective,or if known,they can be loaded in advance. This is done via this multi-valued set of "new repayment" fields. In this way any number of future changes may be entered at the same time. </p>
            <p>As well as requesting a change in the repayment amount, a situation may occur whereby the system forces a new repayment amount to be implemented at a future date. This can happen when a future interest rate change is loaded on an annuity contract or an early partial redemption is made via the MG.PAYMENT file.  These new repayment amounts are validated in such a way as to ensure that the contract will always be repaid by the end of the contract term. This is done by calculating a new theoretical repayment amount for each date on which a change in the repayment is requested. This is then compared to the actual repayment amount entered. In all cases the final repayment amount must be at least equal to the final theoretical amount. However, intermediate repayments may be for less than their associated theoretical amount. </p>
            <p>The details from the "new repayment" fields are transferred to the "current fields" when the next repayment date on the contract becomes equal to the new repay date. This transfer is performed as a part of the end of day batch process. </p>
            <p>The way in which these fields can be used is illustrated in the following examples: </p>
            <p>Examples: </p>
            <p>           (i)  Temporary change in repayment amount                 requested.            Contract type      : LINEAR            Principal          : 120,000            Term               : 60 months (5 years)            Repayment date     : 31/01/90 M0131 (monthly)            Repayment amount   : 2000            Theoretical amount : 2000 </p>
            <p>           New repay date     : 31/01/9131/01/92            New theoretical    : 2000   2250            New repay amt      : 1000   2250 </p>
            <p>           In this case the repayment amount has been lowered for            a year to a level below the theoretical amount. The            following year it is increased again to a level allowing he            shortfall from the previous year to be made up over the            remaining life of the contract. An override will be            required for the new repay of 1000 as this is less than            the theoretical. </p>
            <p>           The new repayment details, effective on 31/01/91, will be            transferred to the current repayment fields after the            repayment of 31/12/90 when the repayment date is cycled            forward and becomes equal to the new repay date. </p>
            <p>           (ii) Recalculation of annuity required due to a future                 interest rate change </p>
            <p>           Contract type      : ANNUITY            Principal          : 120,000            Term               : 60 Months (5 years)            Interest rate      : 10%            Repayment date     : 31/01/90 M0131 (monthly)            Repayment amount   : 2549.65            Theoretical amount : 2549.65            New interest rate  : 11%            New int eff date   : 20/01/91 </p>
            <p>           New repay date     : 31/03/91            New theoretical    : 2598.93            New repay amt      : 2598.93 </p>
            <p>           In this example a new repayment date and theoretical            amount have been created by the system as a result of the            rate change on 21/01/91. The new amount will not become            effective until 31/03/91.            This is due to the fact that the rate change falls in the            middle of the repayment period ending 31/1/91 and            therefore two interest rates apply in this period. Because            of this it is not possible to calculate a new annuity for            that period. The new annuity is calculated for the first            full repayment period during which a single rate applies            for the whole of that period. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 19 numeric characters Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL.. (optional input)</p>
            <p>Input not allowed for SAVING and NONREDEM contract types.</p>
            <p>Input must be positive.</p>
            <p>Input not allowed without an associated date in the NEW.REPAY.DATE field.</p>
            <p>Each repayment amount must be sufficient to repay the accrued interest for the repayment period(s) to which it applies.</p>
            <p>The last multi-value must be at least equal to the last multi-value of the associated NEW.THEORETICAL field.</p>
            <p>An override will be required for any new repayment amount that differs from the associated theoretical amount.</p>
        </desc>
</t>
<t>
<field>RELATION.CODE</field>
<desc>
            <p>This field signifies a relationship that the JOINT.HOLDER field has with the contract in view. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>If entered the field must contain a valid relation code established on the RELATION file.</p>
            <p>This field cannot be entered if the JOINT.HOLDER field has not been entered.</p>
            <p>This field must be entered if the JOINT.HOLDER field has been entered.</p>
        </desc>
</t>
<t>
<field>OVERDUE.STATUS</field>
<desc>
            <p>If the contract is overdue, then this field identifies the status of the underlying PAYMENT.DUE contract. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>No input allowed.</p>
        </desc>
</t>
<t>
<field>CHARGE.AMOUNT</field>
<desc>
            <p>Identifies the amount to be charged against the charge code entered in the associated value of the CHARGE.CODE field. </p>
            <p>The amount entered in this field represents the charge amount to be levied for the associated charge code. </p>
            <p>This amount may be defaulted, dependent on the charge code entered, from the FT.CHARGE.TYPE table. In this case the amount defined in the FLAT.AMOUNT field for the currency of the loan will be taken as the default. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (mandatory input if CHARGE.CODE entered - default from FT.CHARGE.TYPE table)</p>
            <p>Input mandatory if no default available from the FT.CHARGE.TYPE table.</p>
            <p>Amount must be positive.</p>
        </desc>
</t>
<t>
<field>SECTOR</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>ADD.END.DATE</field>
<desc>
            <p>Identifies the date of the last payment of the additional payment element defined in the associated value of the ADD.PAY.TYPE field. </p>
            <p>For each additional payment type entered, a final repayment date is required. This can either be entered by the user or defaulted by the system. </p>
            <p>The way in which this date defaults is dependent on the definition of the relevant additional payment type on the MG.PARAMETER table. If this type is defined as paying in advance then the end date will default to the penultimate repayment date. Otherwise, this date will default to the contract maturity date from the ORIGINAL.MAT.DATE field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format Multi-value field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1. (mandatory input if ADD.PAY.TYPE entered, otherwise not allowed - default value dependent on the definition of the additional type on the MG.PARAMETER table.)</p>
            <p>Input not allowed unless a valid payment type has been defined in the associated multi-value of the ADD.PAY.TYPE field.</p>
            <p>Input cannot be prior to the next repayment date defined in the REPAYMENT.DATE field.</p>
        </desc>
</t>
<t>
<field>PRIN.INCREASE</field>
<desc>
            <p> This is a multivalue field. It is used to determine the amount to be increased to the principal amount of the contract. This will accept only positive values.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>Principal increase cannot be backdated.</p>
            <p>Principal increase can be defined for the current period only.</p>
        </desc>
</t>
<t>
<field>DD.MANDATE.REF</field>
<desc>
            <p>Give the Mandate reference to which the underlying Mortgage is linked. On linking the mandate reference here, for every forward STMT.ENTRY raised from MORTGAGE application for the MORTGAGE.ACCOUNT, system will create automatically DD.ITEM record with the details from STMT.ENTRY.</p>
            <p>The MORTGAGE.ACCOUNT given in the MG can be used to debit the amount for the repayment of Principal / Interest / Charges. Hence for each forward entry created the MORTGAGE.ACCOUNT for the repayment of above, DD.ITEM is created with the respective amount.</p>
            <p>The claim value date depends on the repayment date &amp; frequency as entered in this MG contract. Hence the repayment date &amp; frequency has to be given based on the claim value period as given in DD.PARAMETER.</p>
            <p>For example DD claim process takes  3 calendar days &amp; the System date is 01st Jan- in such case the MG repayment can be set to start from 04th Jan. In such case the claim file is generated on 1st Jan End of day process and on 4th Jan (MG Repayment date) Claim accounting is raised so that the funds are received on the repayment date of the MG. </p>
            <p>In case the MG is given with a repayment date as 03rd Jan, then on the 3rd Jan MG will be debiting the Mortgage account but only on 4th claim accounting process will give the credit to the Mortgage account. In such case on the repayment day (ie 03rd Jan) entries are raised as per the MG's LIQUATION.MODE.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Input allowed only when previous field REPAY.METHOD is set to "DD"</p>
            <p>Mandate given here should be a valid record as defined in "DD.DDI" with status as "AVAILABLE.DDI" or "ACTIVE.DDI"</p>
            <p>Mandate reference account &amp; Mortgage account as given in the MG should be same-otherwise error raised</p>
            <p />
        </desc>
</t>
<t>
<field>DEF.INT.CAP</field>
<desc>
            <p />
            <p>This field is used to indicate if the interest and tax are to be capitalised while deferring the repayment and/or redemption date of a MG contract. Based on the flag set in this field the capitalization can be on Simple or Compound basis. The following examples illustrates the functionality in greater detail:</p>
            <p />
            <p>MG Annuity Contract</p>
            <table>
                <tr>
                    <td>
                        <p>Contract Input Stage</p>
                    </td>
                    <td />
                </tr>
                <tr>
                    <td>
                        <p>Principal Amount</p>
                    </td>
                    <td>
                        <p>USD 100,000</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Value Date</p>
                    </td>
                    <td>
                        <p>January 01,2001</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Term</p>
                    </td>
                    <td>
                        <p>12 months</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Original Mat date</p>
                    </td>
                    <td>
                        <p>January 01,2002</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Repayment Date</p>
                    </td>
                    <td>
                        <p>February 01 M0101</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Redemption Date</p>
                    </td>
                    <td>
                        <p>February 01 M0101</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Interest Basis</p>
                    </td>
                    <td>
                        <p>A (360/360)</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Interest Rate</p>
                    </td>
                    <td>
                        <p>10%</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Repayment Amount</p>
                    </td>
                    <td>
                        <p>8791.59</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Committed Interest</p>
                    </td>
                    <td>
                        <p>833.33</p>
                    </td>
                </tr>
            </table>
            <p />
            <p>Assume that in the above contract the repayment and redemption dates are being deferred. The user in such situations will have the option to flag the Def In Tax Cap field to Simple or Compound. The calculations for each of the situation would be as under:</p>
            <p>Simple Capitalisation</p>
            <p />
            <table>
                <tr>
                    <td>
                        <p>Change Date</p>
                    </td>
                    <td>
                        <p>February 15,01</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Amount Outstanding</p>
                    </td>
                    <td>
                        <p>USD 92041.74</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Repayment Date</p>
                    </td>
                    <td>
                        <p>June 01 M0101</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Redemption Date</p>
                    </td>
                    <td>
                        <p>June 01 M0101</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Repayment Amount</p>
                    </td>
                    <td>
                        <p>12236.90</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Committed Interest</p>
                    </td>
                    <td>
                        <p>3068.05</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Term Priority</p>
                    </td>
                    <td>
                        <p>Yes</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Def In Tax Cap</p>
                    </td>
                    <td>
                        <p>Simple</p>
                    </td>
                </tr>
            </table>
            <p />
            <p>In case of</p>
            <p>Simple Capitalisation there would be one capitalization at the end of deferred period. The end date of the deferred period is the next repayment start date. In the above example the end period is June 01, 2001 and the simple interest (3068.05) for the period February 01, 2001 to May 31, 2001 would be capitalised on June 01, 2001. This would increase the Principal amount from USD 92041.74 to 95109.79. Since the redemption date is also June 01, 2001, the annuity would be calculated as "BEGIN TYPE" and the amount of USD 12236.90 on June 01, 2001 would be appropriated towards Principal only.</p>
            <p />
            <p>The net effect of capitalization on June 01, 2001 would be as follows;</p>
            <table>
                <tr>
                    <td>
                        <p>Principal Amount Outstanding before Capitalisation</p>
                    </td>
                    <td>
                        <p>92041.74</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Add Simple Interest Capitalised</p>
                    </td>
                    <td>
                        <p>3068.05</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Less Principal Repaid (Begin Type)</p>
                    </td>
                    <td>
                        <p>12236.90</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Outstanding</p>
                    </td>
                    <td>
                        <p>82872.89</p>
                    </td>
                </tr>
            </table>
            <p />
            <p>From the next period onwards annuity amount would be appropriated towards Interest and Principal.</p>
            <p />
            <p>Compound Capitalisation</p>
            <p />
            <p />
            <table>
                <tr>
                    <td>
                        <p>Change Date</p>
                    </td>
                    <td>
                        <p>February 15,01</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Amount Outstanding</p>
                    </td>
                    <td>
                        <p>USD 92041.74</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Repayment Date</p>
                    </td>
                    <td>
                        <p>March 01, 2001</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Redemption Date</p>
                    </td>
                    <td>
                        <p>June 01 M0101</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Repayment Amount</p>
                    </td>
                    <td>
                        <p>12241.86</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Committed Interest</p>
                    </td>
                    <td>
                        <p>767.02</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Term Priority</p>
                    </td>
                    <td>
                        <p>Yes</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Def In Tax Cap</p>
                    </td>
                    <td>
                        <p>Compound</p>
                    </td>
                </tr>
            </table>
            <p />
            <p />
            <p>In case of Compound Capitalisation the interest amount during the deferred period would be capitalised during the Repayment dates at the frequency defined in the Repayment Date field. The end date for the interest capitalization would be the Redemption date. In the above example interest would be capitalised from March 01, 2001 till June 01, 2001 at monthly frequency. The annuity calculated would be "BEGIN TYPE" and the payment on June 01, 2001 would be appropriated towards Principal only.</p>
            <p>The effect of capitalization would be as follows:</p>
            <p />
            <table>
                <tr>
                    <td>
                        <p>Principal Amount Outstanding before Capitalisation</p>
                    </td>
                    <td>
                        <p>92041.74</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Add Interest Capitalised (March 01, 2001)</p>
                    </td>
                    <td>
                        <p>767.02</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Outstanding</p>
                    </td>
                    <td>
                        <p>92808.76</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Add Interest Capitalised (April 01, 2001)</p>
                    </td>
                    <td>
                        <p>773.41</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Outstanding</p>
                    </td>
                    <td>
                        <p>93582.17</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Add Interest Capitalised (May 01, 2001)</p>
                    </td>
                    <td>
                        <p>779.85</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Outstanding</p>
                    </td>
                    <td>
                        <p>94362.02</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Add Interest Capitalised (June 01, 2001)</p>
                    </td>
                    <td>
                        <p>786.35</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Outstanding</p>
                    </td>
                    <td>
                        <p>95148.37</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Less Principal Repayment on June 01, 2001</p>
                    </td>
                    <td>
                        <p>12241.86</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Principal Outstanding</p>
                    </td>
                    <td>
                        <p>82906.51</p>
                    </td>
                </tr>
            </table>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>The field can be flagged to Simple or Compound.</p>
            <p />
            <p>Default is Null</p>
            <p />
        </desc>
</t>
<t>
<field>NEW.INT.KEY</field>
<desc>
            <p>Specifies the interest key to be used when fixing a new interest rate on a "Live" contract. </p>
            <p>Once a contract has been authorised with a contract status of CUR it is no longer possible to amend the INTEREST.RATE field. However, the interest rate may be changed by the use of an interest key entered in this field. The date used to obtain the rate from the MG.RATE.CONTROL table and on which that rate becomes effective is defined in the NEW.INT.EFF.DATE field. </p>
            <p>If the original rate was fixed using an interest key and spread then the same key and spread may be used to determine the new rate. This is achieved by simply entering an effective date in the NEW.INT.EFF.DATE field. At validation the appropriate rate for the original key on the new effective date will be determined. The rate obtained from the MG.RATE.CONTROL table will then be combined with any spread in the NEW.INT.SPREAD field and defaulted into the NEW.INTEREST.RATE field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 3 numeric characters. Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL.. (optional input)</p>
            <p>Input only allowed if the contract status is CUR.</p>
            <p>Input not allowed if a value is present in the NEW.INTEREST.RATE field.</p>
            <p>Must be a valid interest key on the MG.RATE.CONTROL  table.</p>
            <p>A valid rate must be defined on the MG.RATE.CONTROL table for the interest key, contract currency and the effective date of the change.</p>
        </desc>
</t>
<t>
<field>CONVERTED.DATE</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>INT.REVIEW.FREQ</field>
<desc>
            <p>Maintains an interest review date and frequency for reporting purposes only. </p>
            <p>This field is used to record the next date on which a contract is to undergo an interest rate review and the frequency of subsequent reviews. This is used for information and reporting purposes only. </p>
            <p>This field can be entered manually or defaulted by the system. A default review frequency is held on the MG.PARAMETER table in the DEFAULT.INT.REVIEW field. This will be used in conjunction with the repayment date field to default the review date and frequency. </p>
            <p>The date in this field will be cycled automatically by the system whenever a rate change schedule is processed by the end of day batch routine. This date may also be cycled automatically on-line if a rate change is entered back dated and the review date has already been reached. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date/frequency format. (optional input)</p>
            <p>Input cannot be prior to value date.</p>
        </desc>
</t>
<t>
<field>FIRST.DAY.ACCRUAL</field>
<desc>
            <p>FIRST.DAY.ACCRUAL </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Input must be Yes or No.</p>
        </desc>
</t>
<t>
<field>NEW.UP.TO.PRIN</field>
<desc>
            <p>Allows for changing or entering new banded rates for the mortgage. </p>
            <p>This field together with the interest rate fields below allow for banded interest rates to be specified for the contract. Different interest rates can be applied to portions of the principal amount lent. The amount specified here will define a band up to which interest rates specified below will be applied. </p>
            <p>Example 1: PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE  VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-19 Numeric characters. Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL.</p>
            <p>Input only allowed when the contract status is CUR.</p>
        </desc>
</t>
<t>
<field>MIN.INT.RATE</field>
<desc>
            <p />
            <p />
            <p>Minimum interest rate for the contract through its life. This rule is applicable for fixed as well as floating rate contracts. For fixed rate contracts the NEW.INT.RATE cannot be for a value lower than the rate in this field. For floating rate contracts the accrual will be done at the current rate for the key and spread or the rate in this field, whichever is higher. </p>
            <p>Example Applicable rate in the MG.RATE.CONTROL = 8% Spread in the contract = 2% INITIAL.RATE = 10% MIN.INT.RATE in the contract = 9% If the value in the MG.RATE.CONTROL table drops to 6%, including the spread of 2% the chargeable rate is 8%. However, interest for the contract will be charged at the MIN.INT.RATE of 9%. Any change in rate effected in the deal using NEW.INT.RATE field will be validated with the value in this field. Error message would be produced if the new interest rate is less than the value in this field.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>1-10 numeric characters plus a decimal point. </p>
            <p />
            <p />
            <p>Input must be positive value. Value cannot exceed 100. MIN.INT.RATE cannot be more than the INTEREST.RATE. If INTEREST.KEY and INTEREST.SPREAD are input, the value in this field cannot be higher than the applicable rate in the MG.RATE.CONTROL table plus spread. Optional Input. Either MAX.INT.RATE or MIN.INT.RATE alone may be input if so required. No input is permitted if MAX.INT.TOL or MIN.INT.TOL is input Also refer to helptext for field CONTRACT.TYPE for product switch rules.</p>
        </desc>
</t>
<t>
<field>RESIDUAL.PRINCIPAL</field>
<desc>
            <p>Defines the remaining amount at the maturity date on an annuity or linear mortgage. </p>
            <p>This field is used for banks which enter into mortgage contracts with their clients whereby the annuity payment is not sufficient to repay the full amount of the loan by the specified maturity. In these cases a residual principal amount is agreed with the customer. This residual principal must then be paid by the client on the maturity date of the contract. </p>
            <p>The residual principal amount is agreed prior to the loan being granted and cannot be modified or altered during the life of the contract. Similarly a residual amount cannot be added to an existing loan. It is not possible to extend the loan beyond the maturity date in order to allow the client to repay the residual amount over  a period of time. Any such arrangement will be considered as a second loan contract. </p>
            <p>On the maturity date of the loan the residual amount will be debited to the loan repayment account. This is raised as a separate entry to the normal repayment on that date. </p>
            <p>A residual principal amount is only allowed for ANNUITY or LINEAR mortgages. </p>
            <p>The calculation of the repayment amount has to be modified to take into account the residual principal amount. The formulae used in the calculation are : </p>
            <p>(i) Annuity contracts                                n              (P - R) * I * (1 + I) ANNUITY =   ------------------------    +  (R * I)                         n                   (1 + I) - 1 </p>
            <p>      where P  =Principal Amount i.e full amount of loan            R  = Residual Principal Amount            I  = Periodic Interest Rate i.e annual rate/no. of                 repayments in year.            n  = Total number of repayments. </p>
            <p>(ii) Linear contracts :            P - R LINEAR =   -----              n </p>
            <p>      where P, R and n are as above </p>
            <p>The normal calculations used when a residual principal amount is not present may be found in the details for REPAYMENT.AMOUNT. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 18 type AMT (standard amount format) characters plus a decimal point. (Optional input)</p>
            <p>Input only allowed for ANNUITY and LINEAR contract types</p>
            <p>Input only allowed prior to the contract value date, i.e the date in the VALUE.DATE. In other words input is only allowed fro 'FWD' status contracts.</p>
            <p>Input must be less than the total principal amount i.e the amount in the PRINCIPAL.AMOUNT.</p>
        </desc>
</t>
<t>
<field>NEW.CUSTOMER</field>
<desc>
            <p />
            <p>In certain cases, the customer of a MG contract may be required to be changed during the tenure of the contract. When the id of the new customer is input in this field and the contract authorized, the new customer will now be populated in the CUSTOMER field and the NEW.CUSTOMER field will be open to input again. The id of the previous customer will be populated in the FORMER.CUST field. When a change of customer is effected, it would be treated as a contract maturity for the old customer and affect his limit accordingly. The limit of the new customer would now be hit.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p />
            <p />
            <p>Input should be a valid ID in the CUSTOMER table</p>
            <p />
            <p />
            <p />
            <p />
            <p>If the MG contract has a PD, change in customer will not be allowed unless the status of the PD is CUR.</p>
            <p />
            <p />
            <p />
            <p />
            <p>Change in customer would not be allowed where there is a portfolio of the old customer mentioned in the field PORTFOLIO.NUMBER</p>
            <p />
        </desc>
</t>
<t>
<field>MIS.COF.RATE</field>
<desc>
            <p />
            <p>Represents the financing rate for the Type of Additional   Cost of Funds. </p>
            <p />
            <p>This is a multivalue field associated with MIS.COF.TYPE.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>1-10 Numeric characters plus a decimal point.</p>
            <p>Mandatory  if MIS.COF.TYPE is specified.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>NEW.FIX.VAR.IND</field>
<desc>
            <p>Defines whether the interest key specified below is to be fixed at the contract input stage, or whether the contract should be linked to the interest key changes. </p>
            <p>This field determines whether the mortgage is to be tied to a variable or fixed interest rate.  If 'VARIABLE' is specified then a interest key must be specified.  All changes to the interest key will reflect in the mortgage contract by being automatically updated whenever a change to the MG.RATE.CONTROL record is made. </p>
            <p>Example 1:            PRINCIPAL AMOUNT : 140,000 GBP </p>
            <p>UP TO PRINCIPAL 100,000       120,000 FIXED VAR IND   FIXED         VARIABLE  VARIABLE INTEREST RATE   10%           11%       11.25% INTEREST KEY                  1GBP      1GBP INTEREST SPREAD               0.5%      0.75% </p>
            <p>In this example the amount borrowed is 140,000 GBP.  Different interest rates apply to different portions of this amount.  The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. </p>
            <p>The lowest band is on a fixed rate basis, the remaining two bands being variable.  Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%.  A different spread is applied to the two variable bands which accounts for the difference in the applied rate. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Can be either 'FIXED' or 'VARIABLE' or abbreviations thereof. Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL.</p>
            <p>Input only allowed if NEW.INT.EFF.DATE entered above.</p>
        </desc>
</t>
<t>
<field>NEW.REDEM.DATE</field>
<desc>
            <p>Defines the dates on which any new repayment amounts become effective. This field is only used by ANNUITY and LINEAR type contracts. </p>
            <p>For redemption type contracts (ANNUITY and LINEAR) it is possible to change the repayment amount a number of times throughout the life of the contract. If these changes are known in advance they can be entered in the multi-valued "new repayment" fields. The NEW.REPAY.DATE field defines the date on which these new repayment amounts become effective. </p>
            <p>This field may be updated manually by the user or automatically defaulted by the system. Defaulting occurs when a future interest rate change is loaded on an ANNUITY contract, or an early partial redemption is made via the MG.PAYMENT file. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard date format. Multi-value field associated with fields  NEW.UP.TO.PRIN  to NEW.THEORETICAL. (mandatory input if NEW.REPAY.AMOUNT entered)</p>
            <p>Input not allowed for SAVING and NONREDEM type contracts.</p>
            <p>Dates input must be valid future repayment dates.</p>
            <p>Dates must be input in ascending order and cannot be duplicated.</p>
        </desc>
</t>
<t>
<field>INTEREST.BASIS</field>
<desc>
            <p>Mortgages can accept the following types:</p>
            <p />
            <table>
                <tr>
                    <td>
                        <p>Key</p>
                    </td>
                    <td>
                        <p>Days/Denominator</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>A</p>
                    </td>
                    <td>
                        <p>360/360</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>A1</p>
                    </td>
                    <td>
                        <p>360/360*</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>A2</p>
                    </td>
                    <td>
                        <p>360/360*</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>B</p>
                    </td>
                    <td>
                        <p>366/360</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>C</p>
                    </td>
                    <td>
                        <p>366/366</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>D</p>
                    </td>
                    <td>
                        <p>360/366</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>E</p>
                    </td>
                    <td>
                        <p>366/365</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>F</p>
                    </td>
                    <td>
                        <p>360/365</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>F1</p>
                    </td>
                    <td>
                        <p>360/365*</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>F2</p>
                    </td>
                    <td>
                        <p>360/365*</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>G</p>
                    </td>
                    <td>
                        <p>366/364</p>
                    </td>
                </tr>
            </table>
            <p />
            <p>For illustrations of all supported </p>
            <p>INTEREST.BASIS types and for types marked * see: INTEREST.BASIS</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>1 to 2 type A (alphanumeric) character. </p>
            <p>Valid input is A, A1, A2, B, C, D, E, F, F1, F2, G or blank. </p>
            <p>Default Value = Interest Day Basis as specified on the Currency table for the currency of the contract. </p>
        </desc>
</t>
<t>
<field>BROKERAGE</field>
<desc>
            <p />
            <p>Contains the amount of brokerage to be paid to the broker in terms of the deal currency. </p>
            <p />
            <p />
            <p>If no value is entered here but a broker code is defined above, then the system will attempt to calculate a default brokerage amount based on the conditions set up on the BROKER file. If an amount is calculated successfully then it will be defaulted in this field, and will be expressed in the deal currency. </p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p />
            <p>1-19 numeric characters. (Optional Input, Default calculated using the BROKER file.)</p>
            <p />
            <p>Input only allowed when BROKER CODE field is entered.</p>
            <p />
        </desc>
</t>
<t>
<field>EFFECTIVE.INT</field>
<desc>
            <p>This field may be used to record an effective or APR interest rate. </p>
            <p>If it is necessary to record an effective or APR interest rate then it can be entered in this field. This data is for information purposes only and is not used or calculated by the system. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 11 numeric characters. (optional input)</p>
            <p>Must be a positive rate.</p>
        </desc>
</t>
<t>
<field>APPLIED.TAX.KEY</field>
<desc>
            <p>This is a system maintained field.This field indicates the actual TAX.KEY which has been used for Taxation on the contract.The one given in the TAX.KEY is user inputtable field. In cases where both TAX.TYPE.KEY and TAX.KEY are input, the tax key determined using TAX.TYPE.KEY is updated into this field and used for calculation.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>No input field.</p>
        </desc>
</t>
<t>
<field></field>
<desc>
        <p>Contains the periodic payment amount for the additional payment type defined in field ADD.PAY.TYPE. 				If an additional payment type has been defined in ADD.PAY.TYPE field then this field contains the periodic payment amount for that type. 				If an additional type has been defined, then a value must be input in this field. However, in some cases this amount may be defaulted. This depends on the definition of the associated additional type on the MG.PARAMETER table. It is possible to define an additional type with automatic calculation of the payment amount. In this case the amount is calculated on a savings scheme basis. The resultant amount, if paid for the life of the contract, at the same frequency as the repayment of principal, and invested at the same rate of interest as the loan, will result in a fund sufficient to repay the loan at maturity. 				It should be noted that for those types defined for automatic calculation this field will be recalculated each time the contract is amended prior to contract draw. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 19 numeric characters Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1 (mandatory input if ADD.PAY.TYPE entered, otherwise not allowed - default value may be defined on the MG.PARAMETER table.)				Input mandatory if an additional payment type has been entered in the associated value of field ADD.PAY.TYPE, and the type is not defined for auto calculation on the MG.PARAMETER table.		.</p>
        <p>ADD.CR.ACCOUNT</p>
        <p>Identifies the account which is to be credited with the additional payment amount entered in the associated value of ADD.PAY.AMOUNT field. 				Whenever a repayment of an additional payment type is made, two accounting entries will be raised. The first is debited to the contract repayment account defined in the MORTGAGE.ACCOUNT field. The second, a credit entry, will be debited to the account entered in this field. 				A default value for this field may be defined on the MG.PARAMETER table for each additional payment type available. 				</p>
        <p>Validation Rules</p>
        <p>				Standard account number format or 3 - 10 alphanumeric account mnemonic. Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1. (Input mandatory if ADD.PAY.TYPE entered, otherwise not allowed - default value on MG.PARAMETER table)				Input mandatory if a value has been entered in the associated value of the ADD.PAY.TYPE field, and no default value has been defined on the MG.PARAMETER table.				An override will be required if the customer of the account entered is not the third party entered in the associated value of the ADD.THIRD.PARTY field, or the customer of the loan.		.</p>
        <p>ADD.END.DATE</p>
        <p>Identifies the date of the last payment of the additional payment element defined in the associated value of the ADD.PAY.TYPE field. 				For each additional payment type entered, a final repayment date is required. This can either be entered by the user or defaulted by the system. 				The way in which this date defaults is dependent on the definition of the relevant additional payment type on the MG.PARAMETER table. If this type is defined as paying in advance then the end date will default to the penultimate repayment date. Otherwise, this date will default to the contract maturity date from the ORIGINAL.MAT.DATE field. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format Multi-value field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1. (mandatory input if ADD.PAY.TYPE entered, otherwise not allowed - default value dependent on the definition of the additional type on the MG.PARAMETER table.)				Input not allowed unless a valid payment type has been defined in the associated multi-value of the ADD.PAY.TYPE field.				Input cannot be prior to the next repayment date defined in the REPAYMENT.DATE field.		.</p>
        <p>ADD.NEW.AMOUNT</p>
        <p>Contains the new additional payment amount which is to become effective on the date in the associated value of the ADD.NEW.DATE field. 				Future changes in the payment amount for each of the additional payment types entered in the ADD.PAY.TYPE field, may input in this field. The date on which the new amount becomes effective is held in the associated multi-value of the ADD.NEW.DATE field. 				The amount entered in this field will be transferred to the ADD.AMOUNT field when the next contract repayment date is equal to the effective date held in the ADD.NEW.DATE field for this amount. This transfer is performed during the end of day batch process. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. Multi-valued field associated with the fields ADD.PAY.TYPE to ADD.USER.REF.1 (optional input - not allowed unless ADD.PAY.TYPE entered.)				Input only allowed if an additional payment type is defined in the ADD.PAY.TYPE field.		.</p>
        <p>ADD.NEW.DATE</p>
        <p>Defines the date on which the new additional repayment amount entered in the ADD.NEW.AMOUNT field becomes effective. 				The repayment amount for any of the additional types entered on the contract may be changed at any time. The new amount is entered in the ADD.NEW.AMOUNT field and this field contains the date on which that amount becomes effective. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1 (optional input - not allowed unless ADD.PAY.TYPE entered.)				Input not allowed if an additional payment type is not defined in the associated multi-value of the ADD.PAY.TYPE field.				Input not allowed unless a new repayment amount has been defined in the associated value of the ADD.NEW.AMOUNT field.				Input cannot be a date prior to the next repayment date defined in the REPAYMENT.DATE field.				Input must be a valid repayment date defined by the REPAYMENT.DATE field.		.</p>
        <p>ADD.PAY.DATE</p>
        <p>The field holds the payment date and frequency for additional payment types. The payment date and the frequency can be different from that of repayment date and frequency. Frequency can be weekly or monthly.				</p>
        <p>Validation Rules</p>
        <p>												Standard T24 frequency field.		.</p>
        <p>ADD.PAY.TYPE</p>
        <p>Identifies any additional payment types which are to be paid on the loan. 				As well as regular repayments of principal and interest, it is possible to have additional types of scheduled payments linked to a loan. Examples of this might be insurance premiums or contributions to a pension or savings scheme. The additional payment types on a loan are defined in this field. 				The remaining fields of this multi-value set further define and control the processing of each of the additional types. 				The additional payment types available within the system are defined on the MG.PARAMETER table. A maximum of five additional types may be defined. Defaults for some of the other fields in this multi-value set may also be defined on the MG.PARAMETER table. 				Details of individual payments, and totals of all payments made for each additional type, are held on the MG.BALANCES file. The details for each type are stored in the same way as those for interest and principal. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 7 Alphanumeric characters. (optional input) Multi-value field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1				Input must be a valid additional payment type defined on the MG.PARAMETER table.				Duplicate types on the same loan are not allowed.		.</p>
        <p>ADD.REFERENCE</p>
        <p>This field may be used to define any user or third party reference associated with the additional payment element entered in the ADD.PAY.TYPE field. 				This field may be used to record any reference relating to the additional payment defined in the associated value of the ADD.PAY.TYPE field. Examples of this may be insurance or savings schemes policy numbers that are linked to a mortgage. 				This reference will appear on the customer's statement against any entries posted relating to the additional payment. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 35 alphanumeric characters. Multi-value field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1 (optional input - not allowed unless ADD.PAY.TYPE entered.)				Input not allowed unless a valid payment type has been entered in the associated value of the ADD.PAY.TYPE field.		.</p>
        <p>ADD.RESERVED</p>
        <p>This field is reserved for future expansion. 				</p>
        <p>Validation Rules</p>
        <p>				This is a NOINPUT field. Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1.				This is a NOINPUT field.		.</p>
        <p>ADD.THIRD.PARTY</p>
        <p>Identifies any third party related to the associated additional payment defined in the ADD.PAY.TYPE field. 				If the additional payment type defined in the associated value of the ADD.PAY.TYPE field is linked to a third party, then this may be recorded in this field. Examples of this may be insurance or investment companies where an insurance policy or savings scheme is attached to a mortgage. 				If particular third parties are always associated with a given payment type then this relationship may be defined on the MG.PARAMETER table. This will then be used as a default for this field. 				</p>
        <p>Validation Rules</p>
        <p>				1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. Multi-value field associated with field ADD.PAY.TYPE to ADD.USER.REF.1 (optional input if ADD.PAY.TYPE entered - default from MG.PARAMETER table)				Input not allowed unless a valid payment type has been defined in the associated multi-value of the ADD.PAY.TYPE field.				Input must be a valid customer on the CUSTOMER file.		.</p>
        <p>ADD.USER.REF.1</p>
        <p>Free format narrative field for additional information relating to the payment type defined in the ADD.PAY.TYPE field. 				This is a free format field which may be used to record any additional details regarding the additional payment defined in the associated value of the ADD.PAY.TYPE field. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 35 alphanumeric characters. Multi-value field associated with field ADD.PAY.TYPE to ADD.USER.REF.1. (optional input - not allowed unless ADD.PAY.TYPE entered.)				Input not allowed unless a valid payment type has been defined in the associated multi-value of the ADD.PAY.TYPE field.		.</p>
        <p>ADVICE.TYPE</p>
        <p>ADVICE.TYPE 		.</p>
        <p>APPLIED.TAX.KEY</p>
        <p>This is a system maintained field.This field indicates the actual TAX.KEY which has been used for Taxation on the contract.The one given in the TAX.KEY is user inputtable field. In cases where both TAX.TYPE.KEY and TAX.KEY are input, the tax key determined using TAX.TYPE.KEY is updated into this field and used for calculation.				</p>
        <p>Validation Rules</p>
        <p>								No input field.		.</p>
        <p>ASSET.CLASS</p>
        <p>Indicates the asset classification for the contract.				If the contract is eligible for Provisioning, system updates this field during COB according to the rules stated in ASSET.CLASS.PARAMETER.				Allows Manual input as well (by changing PROVISION.METHOD field to MANUAL) to override the System classification. Accounting entries would be raised online in accordance with the new asset class.				When PD exists for the contract, asset classification should match the Classification in the corresponding PD contract.				</p>
        <p>Validation Rules</p>
        <p>								Input allowed only when PROVISION.METHOD is MANUAL 				Should be a valid key to LN.ASSET.CLASS table. 				Holds Null when there is no asset classification. 				Maximum of 3 Numeric characters.		.</p>
        <p>ASSOC.CONTRACT</p>
        <p>Identifies any other contracts that are specifically associated with, or linked to, the current contract. 				Within this module it is possible to link a number of contracts together for administrative purposes. This may be useful as a way of providing a cross reference for contracts that relate to the same customer or collateral. An example of this would be a second mortgage taken out on the same property to finance additional building work, or a subsidy contract provided by the local government. 				Contracts are linked by giving them the same ID with the addition of an alpha character suffix. Within this structure there is always one contract that represents the master or main contract to which all the associated contracts are linked. The ID of this main contract does not have a suffix. This "master" ID is then used for all associated contracts with the addition of a valid suffix. 				This field is used on the master contract to record all those contracts that are associated with it. Input is not be allowed to this field on any of the associated contracts, ie any contract with a suffix in its ID. The link from each associated contract to the master contract is implicit because of the presence of a suffix in the ID. 				Only contracts with the same root ID (first twelve characters) may be associated with another contract. Because of this it is only necessary to enter the associated contract suffix in this field, as the rest of the ID will be defaulted. 				All associated contracts must be input and authorised before they can be linked via this field 				</p>
        <p>Validation Rules</p>
        <p>				1 alpha character or 10 numeric characters prefixed by MG with a suffix of 1 alpha character. (optional input)				Contract numbers input in this field must relate to contracts that have already been authorised.				The root (first 12 characters) of any ID entered must be the same as the ID of the current contract.				Input not allowed on contracts with a suffix in their ID.		.</p>
        <p>BROKER.AMOUNT</p>
        <p>Contains the amount of brokerage to be credited to the brokers account in the currency specified in the BROKER.CCY. This amount can be manually input by the user. If not input, the system will default a value, depending on the following rules :												(i)				If the BROKER.CCY happens to be the same as the deal currency, the amount in BROKERAGE field is defaulted (ii) If the BROKER.CCY is different from the deal currency, the amount in the BROKERAGE field is done at the mid rate between the deal currency and BROKER.CCY. 				</p>
        <p>Validation Rules</p>
        <p>				Standard amount format for currency. (Optional Input. Default calculated from the brokerage at mid market rates.) Input is not allowed in this field when the broker code has not been entered in BROKER.CODE Input not allowed in this field if no BROKERAGE, or BROKERAGE.CCY has been specified. The amount must be in a valid format for the brokerage currency. 		.</p>
        <p>BROKER.CCY</p>
        <p>The currency in which the broker is to be paid. This may be different from the deal currency. If the brokerage currency is not input by the user, the system will default the currency from the CCY.FOR.PAYMENT field in the BROKER table. This will be the deal currency if it is defined in CCY.FOR.PAYMENT field, otherwise it will default the first currency from the CCY.FOR.PAYMENT multivalue. For further details, please consult the help text for the BROKER table.				 </p>
        <p>Validation Rules</p>
        <p>								Should be a valid entry in the CURRENCY table				The currency should be an allowed currency entered in the CCY.FOR.PAYMENT field in the BROKER table														.</p>
        <p>BROKER.CODE</p>
        <p>BROKER.CODE				This field contains the code of the broker, if any, for this deal.				 </p>
        <p>Validation Rules</p>
        <p>								Should be a valid entry in the BROKER application		.</p>
        <p>BROKERAGE</p>
        <p>Contains the amount of brokerage to be paid to the broker in terms of the deal currency. 												If no value is entered here but a broker code is defined above, then the system will attempt to calculate a default brokerage amount based on the conditions set up on the BROKER file. If an amount is calculated successfully then it will be defaulted in this field, and will be expressed in the deal currency. 												</p>
        <p>Validation Rules</p>
        <p>																1-19 numeric characters. (Optional Input, Default calculated using the BROKER file.)								Input only allowed when BROKER CODE field is entered.						.</p>
        <p>CATEGORY</p>
        <p>Defines the product category to which the contract will be accounted. 				This field defines the exact product type to which the contract belongs. A range of category codes are reserved for use within the mortgage module (25000 - 25499). Within this range further sub ranges for each of the allowable mortgage products are defined on the MG.PARAMETER table. The exact product category of each individual contract is defined in this field and must be within the allocated range for the contract type of the loan. 				The category code of loan may be changed throughout its life, providing that it remains within the range defined on the parameter record for the contract type. 				</p>
        <p>Validation Rules</p>
        <p>								5 numeric characters. (mandatory input)				Must be a valid category on the CATEGORY table.				Must be within the range defined on the MG.PARAMETER record for the contract type of the loan.				For rules for product switching refer to help text for field CONTRACT.TYPE.		.</p>
        <p>CHARGE.ACCOUNT</p>
        <p>Identifies the account to which the charge amount entered in the associated CHARGE.AMOUNT field is to be debited. 				For each charge code entered, an account to which the charge amount is to be debited must also be entered. This can be done manually or defaulted by the system. 				The account defaulted is dependent on the contract status. If the contract has passed drawdown, ie. the last authorised version has a contract status of CUR, then the loan repayment account defined in the MORTGAGE.ACCOUNT field will be defaulted. Contracts which have not yet drawn down will default the account from the DRAWDOWN.ACCOUNT field. 				</p>
        <p>Validation Rules</p>
        <p>				Standard account number format. or 3 - 10 alphanumeric account mnemonic. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (mandatory input if CHARGE.CODE entered - default dependent on contract status)				Must be a valid account on the ACCOUNT file.				An override will be required if the customer of the account entered is not that of the contract.				The account currency must be the same as the charge currency (CHARGE.CCY).		.</p>
        <p>CHARGE.AMOUNT</p>
        <p>Identifies the amount to be charged against the charge code entered in the associated value of the CHARGE.CODE field. 				The amount entered in this field represents the charge amount to be levied for the associated charge code. 				This amount may be defaulted, dependent on the charge code entered, from the FT.CHARGE.TYPE table. In this case the amount defined in the FLAT.AMOUNT field for the currency of the loan will be taken as the default. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (mandatory input if CHARGE.CODE entered - default from FT.CHARGE.TYPE table)				Input mandatory if no default available from the FT.CHARGE.TYPE table.				Amount must be positive.		.</p>
        <p>CHARGE.AMT.LCY</p>
        <p>Identifies the amount(local equivalent) to be charged defined in the charge code entered in the associated value of the CHARGE.CODE field.This amount will be defaulted, dependent on the charge code entered, from the FT.CHARGE.TYPE file.Shows the flat amount of charges to be debited from the customer on the charge date specified in the CHARGE.DATE field.				</p>
        <p>Validation Rules</p>
        <p>								Multi-value field associated with the fields from CHARGE.DATE to CHARGE.TAX.CODE				Defaulted from FT.CHARGE.TYPE file.		.</p>
        <p>CHARGE.CCY</p>
        <p>Identifies the currency that charges are to be levied in. This can be different from the mortgage currency. 				Charges can be levied in any currency, and separate charges within the multi-value set can be in different currencies. 				</p>
        <p>Validation Rules</p>
        <p>				CCY (Currency code) Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. Defaults to the currency of the mortgage.				Must be a valid currency on the CURRENCY file.		.</p>
        <p>CHARGE.CODE</p>
        <p>Identifies the type of charge(s) to be levied as defined on the FT.CHARGE.TYPE table. 				This field identifies the type of charge that is to be levied on the date held in the associated value of the CHARGE.DATE field. 				This code identifies a charge type defined on the FT.CHARGE.TYPE table. This table contains a record for each charge type available. Each record contains a description, a default charge amount and the P&amp;L category which is to be credited whenever the charge is levied. 				The description from the FT.CHARGE.TYPE will be displayed as an enrichment to this field. 				Whenever a charge is processed the account entered in the associated CHARGE.ACCOUNT field will be debited. The P&amp;L category defined on the FT.CHARGE.TYPE record for the charge code will be credited. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 2 alphanumeric characters. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (optional input)				Must be a valid charge code on the FT.CHARGE.TYPE table.				The same combination of charge code and charge date cannot be duplicated in this set of fields.		.</p>
        <p>CHARGE.DATE</p>
        <p>Contains the value date of the charge defined in the associated fields CHARGE.CODE to CHARGE.ACCOUNT. 				Charges may be applied on a contract in conjunction with certain contract events. These are: contract drawdown, interest rate changes and contract repayments. Charges may also be applied whenever an early redemption is made, however, this is done via the MG.PAYMENT routine. 				All details relating to the charge, the charge type, the currency, the amount and the payment account are specified in this multi-valued set of fields (CHARGE.DATE to CHARGE.ACCOUNT). 				Charge details may be entered in advance of the charge date or with a date equal to the current bank date. Future dated charges will create charge schedules which will be processed during the end of day batch run on the charge date itself. In the case of a backdated contract input, or a backdated rate change, the charge date may be backdated. In this case the charges will be processed on-line at contract authorization. 				If a charge code has been entered without an associated charge date, then at validation the system will attempt to default a date. This is done by trying to relate the charge to a future event. If the contract has not yet been drawn down then the value date will default. However, once the contract status has reached CUR then the system will try to default firstly from the NEW.INT.EFF.DATE field and then the NEW.REPAY.DATE field. 				Once a charge has been processed it is automatically removed from the contract at the time of the next amendment or input. Previous charges can always be viewed vis the (S)ee function. 				If a contract is reversed using the (R)eversal function then only the charges present on the most recent version of the contract will be reversed. Charges levied on previous versions will not be reversed. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. Multi-value field associated with fields CHARGE.DATE to CHARGE.ACCOUNT. (mandatory input if CHARGE.CODE entered - default dependent on future contract events)				Input must be a valid future contract event : either contract drawdown, interest rate change or a repayment date.		.</p>
        <p>CHARGE.TAX.AMT</p>
        <p>Identifies the amount to be taxed against the Charge amount.This amount is defaulted at the time of validation of the contract. Tax is applied on the same currency as the Charge currency.				</p>
        <p>Validation Rules</p>
        <p>								This is a noinput field.				This is a multivalue field associated with the fields from CHARGE.DATE to CHARGE.TAX.CODE		.</p>
        <p>CHARGE.TAX.CODE</p>
        <p>Specifies the TAX.CODE applicable on the charges on the contract. The Tax codes defined on this field will be defaulted by the system depending on the charge codes entered on the contract.The Tax codes are held on the FT.CHARGE.TYPE or the FT.COMMISSION.TYPE file.for the charge code applicable.				</p>
        <p>Validation Rules</p>
        <p>								System Generated, No Input field.						.</p>
        <p>TAX.ON</p>
        <p>Determines the component on which the Tax is applied.				Allowed Inputs:				I - Tax is applied on Interest ( Default Value)				P- Tax is applied on Principal				PI - Tax is applied on Principal + Interest				</p>
        <p>Validation Rules</p>
        <p>								On Savings and Non-redeemable type of contracts, Only Option 'I' is allowed.i.e Tax can be applied only on Interest.								On an Inclusive type of annuity contract, only option 'I' is allowed.		.</p>
        <p>CHARGE.TAX.LCY</p>
        <p>This field identifies the local currency equivalent of the Tax on Charge if any.				</p>
        <p>Validation Rules</p>
        <p>								This is a Noinput field.				Multivalued field associated with the fields CHARGE.DATE to CHARGE.TAX.CODE		.</p>
        <p>CLOSURE.DATE</p>
        <p>Identifies the forward value date for closure of an annuity mortgage. 				For Annuity type mortgages it is possible to enter a forward valued closure via the MG.PAYMENT module. 				When this is the case, this field will be automatically updated from MG.PAYMENT with the closure date. PAYMENT.REFERENCE will also be updated with the id of the MG.PAYMENT record. 				When these fields are present, no subsequent changes to the Mortgage contract will be allowed. 				If changes are required, then the forward valued MG.PAYMENT must be reversed first. 				Identifies any additional element which has been defined locally to meet a particular requirement. 				As in other T24 applications, up to 999 Local Elements may be defined in addition to the standard fields previously specified for this application. These local elements should be defined by the User where deemed necessary according to local practice. 				The name(s) of the new element(s), as well as the Format and </p>
        <p>Validation Rules</p>
        <p>, must be defined in the Local Tables prior to the creation of any Mortgage contracts. 				For more information regarding the use of Local reference fields refer to the LOCAL.TABLE Helptext. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. Up to 35 characters as defined in the local table definition for this local reference field. (Optional or Mandatory input according to definition in LOCAL.TABLE (Ref: Utilities) for this Local Reference element.)				This is a NO INPUT field. 71.1 LOCAL REF As defined by the User within the individual Local Tables.		.</p>
        <p>COLLATERAL.CODE.1</p>
        <p>Identifies the primary collateral type linked to this contract. 				This field allows a type code to be assigned to the primary collateral associated with this contract. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 2 numeric characters. (optional input)		.</p>
        <p>COLLATERAL.CODE.2</p>
        <p>Identifies the secondary collateral type linked to this contract. 				This field allows a type code to be assigned to the secondary collateral associated with this contract. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 2 numeric characters. (optional input)		.</p>
        <p>COMM.TAX</p>
        <p>This field specifies the amount of tax due at the next repayment or redemption date.This is a system maintained field without any user input.This amount is calculated with the Tax rate field by applying the rate on interest or principal or Both depending on TAX.ON field in the contract.This amount gets recalculated if there is a change in the tax rate or on the repayment schedule dates.Thus the tax amount for the next period or till the next repayment date is updated into this field.This field does not affect any of the Interest accruals or other processing.								</p>
        <p>Validation Rules</p>
        <p>								This is a NOINPUT field.				This is an amount field.						.</p>
        <p>COMMITTED.INTEREST</p>
        <p>Specifies the amount of interest due at the next repayment date. 				The amount of interest to be paid by the customer at the next interest repayment date is held in this field. This is maintained by the system and is calculated at validation. This amount will be recalculated whenever a change in the interest rate for the current period is entered or the principal is changed via the MG.PAYMENT routine. Similarly, the processing of scheduled repayments via the end of day batch routines will update this field. 				This field is maintained for information purposes only and does not effect the interest accrual and repayment processing. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 19 numeric characters. This is a NOINPUT field.				This is a NOINPUT field.		.</p>
        <p>CONSOL.KEY</p>
        <p>Standard T24 numeric field. 				</p>
        <p>Validation Rules</p>
        <p>				A maximum of 70 characters may be entered.				This is a NOINPUT field.		.</p>
        <p>CONTRACT.DATE</p>
        <p>Specifies the date of agreement of the contract. 				This field is used to record the date on which the terms of the contract were agreed by the parties concerned. This date does not effect the processing of the contract and is held for information purposes only 				If a null value is entered in this field the date of input of the contract will be defaulted. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. (mandatory input - default the current date)				Must be a working day.		.</p>
        <p>CONTRACT.NO</p>
        <p>Uniquely identifies each contract on the mortgage main file. 				Each contract on the main file has a unique contract number that is used throughout the system to identify the contract. This number is assigned when the contract is first entered into the system. This can be done either manually or automatically by use of the F3 key, providing that auto IDs have been specified on the company record for the mortgage module. 				The format of the key is as follows: 				 MG YYDDD NNNNN A 				where: MG - Mortgage module identifier. YYDDD - Year and date of input in julian date format. NNNNN - Sequence number which is unique for the date of input. A - Suffix which must be defined on the MG.PARAMETER table. 				It is not necessary to enter the full contract number when accessing an existing contract or inputting a new one. If the contract has been input the same day, or is a new contract, then only the sequence number portion need be entered. In all cases it is not necessary to type any leading zeroes in the sequence number. 				Example : 				To enter a new contract on 1st Jan 1990 with a sequence number of 99 the only input required is "99". This will generate a contract no of "MG9002300099". 				To access this contract later in the same day the only input required is still "99". 				To access the contract the following day both the date and sequence number (without leading zeroes) should be entered, ie "90002399". 				</p>
        <p>Validation Rules</p>
        <p>				10 numeric characters prefixed by MG with an optional suffix of 1 alpha character. MGYYDDDNNNNNA (see details) (mandatory input)		.</p>
        <p>CONTRACT.STATUS</p>
        <p>This is a system maintained field which indicates the processing status of the contract. 				During its life cycle within the system a contract will be in one of three states. These are: 				1. FWD - forward 				The contract is forward dated and has not yet reached its value date. At this stage no funds have been drawn down and no processing will be performed until the value date is reached. The contract appears as a contingent entry in the general ledger. 				2. CUR - current (live) 				The contract has now become "current" or "live". The value date has been passed and the principal drawn down. Interest is being accrued on the outstanding principal and repayments are in progress. The contract now represents a live credit balance in the general ledger. 				3. LIQ - liquidated (matured). 				The outstanding principal and interest have been fully repaid and no further processing or amendments are possible. 				</p>
        <p>Validation Rules</p>
        <p>				3 alpha characters either FWD, CUR or LIQ. This is a NOINPUT field.				Input to this field is not allowed.		.</p>
        <p>CONTRACT.TYPE</p>
        <p>Defines the product type of the contract. This product type determines the way in which the loan is to be repaid. 				This field identifies the product type of the contract and therefore determines the method of repayment. There are four product types available. These are: 				1. ANNUITY 				This type of loan has a fixed periodic repayment amount (the "annuity") consisting of two variable components of principal and interest. The repayment amount is calculated at the start of the contract so that the principal will be fully repaid after the required number of repayments. Initially, repayments consist mostly of interest. However, as the contract progresses, the size of the principal component increases as the accrued interest reduces. 				2. LINEAR 				Linear loans also have an interest and a principal component to their periodic repayments. In this case, however, the principal repayment amount remains fixed over the lifetime of the contract. The interest element reduces as the accrued interest on the reducing balance decreases. This leads to a repayment scheme whereby the total periodic repayment reduces over the lifetime of the contract. 				3. SAVING 				With this type of loan there are no periodic repayments of principal, only interest. As the principal balance remains the same throughout the life of the contract, so the accrued interest, and therefore the periodic interest repayments, remain fixed. The principal amount is repaid in full with a single payment on the contract maturity date. 				This type of contract may have a savings scheme or insurance policy associated with it that will be used to repay the loan at maturity. If required, the payments to these policies may be made automatically via the "additional payment" fields on the contract. Although the processing of these additional payments may be performed by the this module, the maintenance of the associated savings scheme or insurance policy is not. 				4. NONREDEM 				NONREDEM loans are similar to SAVING loans in that there is no regular repayment of principal only interest. In practice, however, they differ by not having any savings scheme or insurance policy associated with them. The way in which SAVING and NONREDEM contracts are processed is exactly the same and the two types exist only for classification purposes. 								Effective T24 release G 14.0; it is possible to switch from any one product to another, any time during the contract life cycle provided there are no past dues for the contract. While changing the product, the category for the product also needs to be changed so that it conforms to the category range defined in MG.PARAMETER for the new product. Once the product is changed, subsequent processing of the contract would be handled as per the extant logic (as applicable for the new product).				</p>
        <p>Validation Rules</p>
        <p>								1 - 10 Alpha characters. Must be either ANNUITY, LINEAR, SAVING or LINEAR. (mandatory input)				Input must be either "ANNUITY", "LINEAR", "SAVING" or "NONREDEM"				Following rules shall apply for product switching:				a)				ANNUITY to LINEAR System would recalculate the repayment amount based on the existing data. The recalculation would be done on the outstanding principal. If tax were calculated on the annuity contract (on inclusive basis), system would change the calculation of tax on exclusive basis. Value in field REPAYMENT.AMOUNT whether user defined or system defaulted would be cleared by the system. The repayment amount would be recalculated by the system based on the outstanding balance.				b)				 LINEAR to ANNUITY System would recalculate the repayment amount based on the existing data. The recalculation would be done on the outstanding principal. Tax calculation would continue on the same basis as defined for original product. Value in field REPAYMENT.AMOUNT whether user defined or system defaulted would be cleared by the system. The repayment amount would be recalculated by the system based on the outstanding balance. If banded interest rate structure were defined for LINEAR product, new interest rate will have to be input in field 29 (NEW.INT.EFF.DATE) to 34.1 (NEW.INT.SPREAD). The new interest rate cannot be banded can be effective the process date (TODAY) only.				c)				ANNUITY/LINEAR to SAVING/NON-REDEMPTION Value in REPAYMENT.AMOUNT field would be cleared by the system. Value in field REDEMPTION.DATE would be cleared by the system. Value in field TERM would be cleared by the system if the change were to NON-REDEMPTION. If an ANNUITY/LINEAR contract were switched to SAVING type after one repayment or redemption, system would recalculate the balance term till the maturity date. The term calculated by the system would be stored in NEW.TERM field.				d)				SAVING to ANNUITY/LINEAR If redemption date were not input, value in field REPAYMENT.DATE would be defaulted as REDEMPTION.DATE by the system. Repayment amount would then be calculated based on the outstanding balance. Maturity date would be recalculated by the system based on the value in fields TERM and REDEMPTION.DATE. If a SAVING type contract were changed to ANNUITY or LINEAR type after one repayment, system would populate the balance term in field NEW.TERM. Maturity date would be recalculated based on the value in fields NEW.TERM and REDEMPTION.DATE.				e)				SAVING to NON-REDEMPTION Value in field TERM would be cleared by the system. Value in field REDEMPTION.DATE would be cleared by the system.				f)				NON-REDEMPTION to ANNUITY/LINEAR Input in field TERM would be mandatory. Maturity date would be recalculated by the system based on the value TERM field. If redemption date were not input, value in field REPAYMENT.DATE would be defaulted as REDEMPTION.DATE by the system. Repayment amount would then be calculated based on the outstanding balance. Redemption date would be inputtable if there is no value in REDEM.ST.DATE field. If a NON-REDEMPTION contract were changed to either ANNUITY or LINEAR after one repayment, input in NEW.TERM field (indicating balance term) is mandatory. Based on the value in TERM/NEW.TERM field and REDEMPTION.DATE field, system would recalculate the maturity date.				g)				NON-REDEMPTION to SAVING Input in field TERM would be mandatory. Maturity date would be recalculated by the system based on the value TERM field.				h)				Rules for Any Product Switch Value, if any, in field TERM.PRIORITY would be set to NULL. All forward dated rate changes defined would be cleared. Existing values in PAYMENT.TYPE, NEW.REPAY.AMT and NEW.REDEM.DATE fields would be cleared by the system. Values in fields MAX.REPAY.AMT, MIN.REPAY.AMT, MAX.REPAY.TOL and MIN.REPAY.TOL would be cleared. Values in fields MAX.INT.RATE, MIN.INT.RATE, MAX.INT.TOL and MIN.INT.TOL would be cleared.		.</p>
        <p>CURRENCY.MARKET</p>
        <p>Identifies the currency market applicable to the contract. Currently only market 1 may be used. This field identifies the currency market which is applicable to the contract. This is currently a NOINPUT field which default to market 1. 				</p>
        <p>Validation Rules</p>
        <p>				1 numeric character. This is a NOINPUT field.		.</p>
        <p>CURRENCY</p>
        <p>Contains either the S.W.I.F.T or numeric currency code that denotes the currency of the mortgage. 				The mortgage system can handle both local and foreign currency mortgages loans. This field is used to specify in which currency the funds are to be given and repaid. All variable interest rates will be linked to a basic rate defined for this currency. 				</p>
        <p>Validation Rules</p>
        <p>				CCY (Currency code) (Mandatory Input), Defaults to local currency.				Must exist on the CURRENCY file.				Once the deal has been authorised, this field cannot be changed.		.</p>
        <p>CUSTOMER</p>
        <p>Identifies the customer of the loan. 				This field identifies the customer who holds the mortgage. 				</p>
        <p>Validation Rules</p>
        <p>				1 -6 numeric character customer number. or 3 - 10 alphanumeric character customer mnemonic. (mandatory input)				Must be either a valid customer number or customer mnemonic of a customer on the CUSTOMER file.				This field cannot be changed once the contract is authorised.		.</p>
        <p>DD.EXCG.RATE</p>
        <p>If the Drawdown account is denominated in a currency different to the contract currency, the exchange rate to be applied for conversion of the deal amount may be input in this field. If no input is made the system would default the appropriate sell rate from the CURRENCY TABLE. 				This field is inputtable even when a principal increase is drawndown in a currency different to the contract currency.				</p>
        <p>Validation Rules</p>
        <p>								Input allowed only if Drawdown Account currency is different from contract currency.		.</p>
        <p>DD.MANDATE.REF</p>
        <p>Give the Mandate reference to which the underlying Mortgage is linked. On linking the mandate reference here, for every forward STMT.ENTRY raised from MORTGAGE application for the MORTGAGE.ACCOUNT, system will create automatically DD.ITEM record with the details from STMT.ENTRY.				The MORTGAGE.ACCOUNT given in the MG can be used to debit the amount for the repayment of Principal / Interest / Charges. Hence for each forward entry created the MORTGAGE.ACCOUNT for the repayment of above, DD.ITEM is created with the respective amount.				The claim value date depends on the repayment date &amp; frequency as entered in this MG contract. Hence the repayment date &amp; frequency has to be given based on the claim value period as given in DD.PARAMETER.				For example DD claim process takes 3 calendar days &amp; the System date is 01st Jan- in such case the MG repayment can be set to start from 04th Jan. In such case the claim file is generated on 1st Jan End of day process and on 4th Jan (MG Repayment date) Claim accounting is raised so that the funds are received on the repayment date of the MG. 				In case the MG is given with a repayment date as 03rd Jan, then on the 3rd Jan MG will be debiting the Mortgage account but only on 4th claim accounting process will give the credit to the Mortgage account. In such case on the repayment day (ie 03rd Jan) entries are raised as per the MG's LIQUATION.MODE.				</p>
        <p>Validation Rules</p>
        <p>								Input allowed only when previous field REPAY.METHOD is set to "DD"				Mandate given here should be a valid record as defined in "DD.DDI" with status as "AVAILABLE.DDI" or "ACTIVE.DDI"				Mandate reference account &amp; Mortgage account as given in the MG should be same-otherwise error raised						.</p>
        <p>DEF.INT.CAP</p>
        <p>This field is used to indicate if the interest and tax are to be capitalised while deferring the repayment and/or redemption date of a MG contract. Based on the flag set in this field the capitalization can be on Simple or Compound basis. The following examples illustrates the functionality in greater detail:								MG Annuity Contract																						Contract Input Stage																																			Principal Amount																			USD 100,000																													Value Date																			January 01,2001																													Term																			12 months																													Original Mat date																			January 01,2002																													Repayment Date																			February 01 M0101																													Redemption Date																			February 01 M0101																													Interest Basis																			A (360/360)																													Interest Rate																			10%																													Repayment Amount																			8791.59																													Committed Interest																			833.33																							Assume that in the above contract the repayment and redemption dates are being deferred. The user in such situations will have the option to flag the Def In Tax Cap field to Simple or Compound. The calculations for each of the situation would be as under:				Simple Capitalisation																										Change Date																			February 15,01																													Principal Amount Outstanding																			USD 92041.74																													Repayment Date																			June 01 M0101																													Redemption Date																			June 01 M0101																													Repayment Amount																			12236.90																													Committed Interest																			3068.05																													Term Priority																			Yes																													Def In Tax Cap																			Simple																							In case of				Simple Capitalisation there would be one capitalization at the end of deferred period. The end date of the deferred period is the next repayment start date. In the above example the end period is June 01, 2001 and the simple interest (3068.05) for the period February 01, 2001 to May 31, 2001 would be capitalised on June 01, 2001. This would increase the Principal amount from USD 92041.74 to 95109.79. Since the redemption date is also June 01, 2001, the annuity would be calculated as "BEGIN TYPE" and the amount of USD 12236.90 on June 01, 2001 would be appropriated towards Principal only.								The net effect of capitalization on June 01, 2001 would be as follows;																						Principal Amount Outstanding before Capitalisation																			92041.74																													Add Simple Interest Capitalised																			3068.05																													Less Principal Repaid (Begin Type)																			12236.90																													Principal Outstanding																			82872.89																							From the next period onwards annuity amount would be appropriated towards Interest and Principal.								Compound Capitalisation																														Change Date																			February 15,01																													Principal Amount Outstanding																			USD 92041.74																													Repayment Date																			March 01, 2001																													Redemption Date																			June 01 M0101																													Repayment Amount																			12241.86																													Committed Interest																			767.02																													Term Priority																			Yes																													Def In Tax Cap																			Compound																											In case of Compound Capitalisation the interest amount during the deferred period would be capitalised during the Repayment dates at the frequency defined in the Repayment Date field. The end date for the interest capitalization would be the Redemption date. In the above example interest would be capitalised from March 01, 2001 till June 01, 2001 at monthly frequency. The annuity calculated would be "BEGIN TYPE" and the payment on June 01, 2001 would be appropriated towards Principal only.				The effect of capitalization would be as follows:																										Principal Amount Outstanding before Capitalisation																			92041.74																													Add Interest Capitalised (March 01, 2001)																			767.02																													Principal Outstanding																			92808.76																													Add Interest Capitalised (April 01, 2001)																			773.41																													Principal Outstanding																			93582.17																													Add Interest Capitalised (May 01, 2001)																			779.85																													Principal Outstanding																			94362.02																													Add Interest Capitalised (June 01, 2001)																			786.35																													Principal Outstanding																			95148.37																													Less Principal Repayment on June 01, 2001																			12241.86																													Principal Outstanding																			82906.51																			</p>
        <p>Validation Rules</p>
        <p>								The field can be flagged to Simple or Compound.								Default is Null						.</p>
        <p>DELIVERY.REF</p>
        <p>Identifies the ID of the consolidation record on the CONSOLIDATE.ASST.LIAB file into which this contract is to be consolidated for financial reporting. 				Financial balance details, outstanding balance and outstanding accrued interest, of each contract are recorded on the CONSOLIDATE.ASST.LIAB file so that they can be included in the financial reports produced via the REPORTING module. This field identifies the CONSOLIDATE.ASST.LIAB record into which the balance for the contract are consolidated. 				The criteria for the consolidation of mortgage contracts is defined on the CONSOLIDATE.COND table. 				This field is maintained by the system during the end of day batch processing. Whenever this field is updated by the system a history record will be written to maintain a full audit trail. 				</p>
        <p>Validation Rules</p>
        <p>				Alphanumeric as specified on the CONSOLIDATE.CONDS file.				This is a NOINPUT field.		.</p>
        <p>DEPOSIT.ACCOUNT</p>
        <p>Specifies the account where any associated deposit is maintained. 				In some cases a customer may request a loan but does not require all of the funds immediately. An example of this might be a loan for the purpose of building a house, where payment to the builder will be made in stages as the work is completed. In such a case the customer will not wish to pay interest on the funds he does not yet require, but, the bank will want to record the maximum value of the loan against the clients credit limit. 				This can be achieved by drawing down the full amount of the loan to a deposit account. The client can then withdraw the funds from this account as they are required. Interest will be earned on the deposit at a similar rate to that of the loan and will be posted automatically to the contract repayment account specified in the MORTGAGE.ACCOUNT field. In this way the interest earned by the client on the unused portion of the loan is offset against that to be paid on the full amount borrowed. However, the full amount of the loan is recorded against the client's credit limit as soon as it is draw. 				Any such account must be set up so that it has an ACCOUNT.CLASS of MGDEPOSIT (see the helptext for the ACCOUNT.CLASS and ACCOUNT applications for further information). 				This field is used to record the account number of any deposit that is linked to this loan for such a purpose. It is stored for information and reporting purposes only and does not affect any processing within this module. 				</p>
        <p>Validation Rules</p>
        <p>				Standard account number format or 3 -10 alphanumeric account mnemonic. (optional input)				Must be a valid account of the same currency as the contract.				The account entered must have an ACCOUNT.CLASS of MGDEPOSIT.				Input not allowed for associated contracts (those with a suffix on their ID).				An override will be required if the account input does not belong to the contract customer.		.</p>
        <p>DRAWDOWN.ACCOUNT</p>
        <p>Identifies the account to which the principal amount is to be credited at drawdown. 				The account to which the principal amount is to be credited on the value date of the contract is defined in this field. 				If required this can be an internal account. 				When the contract in question has other associated contracts (see ASSOC.CONTRACT field), then checks are made on the drawdown account of all other contracts in the group. Any differences in the accounts used will be highlighted with an override message. 				Effective G 13 this field will accept an account denominated in a currency other than the contract currency. 				In case the underlying Contract Customer (eg. Customer.id in MONEYMARKET,Counterparty in FOREX, etc.) has a record in CUSTOMER.SSI application, then the account number in this field gets defaulted as per the definition for that Customer from CUSTOMER.SSI. For more information on the usage of this feature please refer to CUSTOMER.SSI application.				</p>
        <p>Validation Rules</p>
        <p>								Standard account number format or 3 - 10 alphanumeric account mnemonic. (mandatory input)				An override will be required if the customer of the account is not the customer of the loan.				If the contract is linked to another contract, ie it has a suffix in its key, and the drawdown account differs on the main loan, an override will be required.				If the contract has associated contracts (see ASSOC.CONTRACT field), then an override will be required for each associated loan with a different drawdown account to that entered here.		.</p>
        <p>EFFECTIVE.INT</p>
        <p>This field may be used to record an effective or APR interest rate. 				If it is necessary to record an effective or APR interest rate then it can be entered in this field. This data is for information purposes only and is not used or calculated by the system. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. (optional input)				Must be a positive rate.		.</p>
        <p>FIRST.DAY.ACCRUAL</p>
        <p>FIRST.DAY.ACCRUAL 				</p>
        <p>Validation Rules</p>
        <p>				Input must be Yes or No.		.</p>
        <p>FIRST.INT.PAY</p>
        <p>This is an internally used field updated by the system.				</p>
        <p>Validation Rules</p>
        <p>								This is a Noinput Amount field.		.</p>
        <p>FIRST.PAY.IN.ADV</p>
        <p>Indicates whether the first repayment is to be taken in advance at the time of contract drawdown. 				This field enables the first repayment on a loan to be taken at drawdown. The repayment amount will be debited to the drawdown account, effectively reducing the amount of the loan. However, separate accounting entries will be posted for the full amount of the drawdown and the first repayment amounts. The credit side of the transaction will be posted to the repayment account defined in the MORTGAGE.ACCOUNT field. This will give a credit balance on that account which will subsequently be reversed when the actual date of the first repayment is reached. 				A default for this field for each contract type available can be set up on the MG.PARAMETER table. 				</p>
        <p>Validation Rules</p>
        <p>				1 alpha character, either "Y" (yes) or "N" (no). (mandatory input - default from MG.PARAMETER table)				An override will be required if the input to this field is different to the default on the MG.PARAMETER table.		.</p>
        <p>FIXED.VAR.IND</p>
        <p>Defines whether the interest key specified below is to be fixed at the contract input stage, or whether the contract should be linked to the interest key changes. 				This field determines whether the mortgage is to be tied to a variable or fixed interest rate. If 'VARIABLE' is specified then a interest key must be specified. All changes to the interest key will reflect in the mortgage contract by being automatically updated whenever a change to the MG.RATE.CONTROL record is made. 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>				Can be either 'FIXED' or 'VARIABLE' or abbreviations thereof. Multi-value field associated with fields UP.TO.PRINCIPAL, INTEREST.RATE, INTEREST.KEY and INTEREST.SPREAD.				If entered, a INTEREST.KEY must also be entered below.		.</p>
        <p>INIT.REPAY.AMT</p>
        <p>The repayment amount arrived at the time of first input of the deal is written to this field for validating future movements to the NEW.REPAY.AMOUNT. If the user desires to control the movements in repayment amounts to a pre-defined range of values (minimum and maximum) it is necessary to store the amount at the time of first input. 												If MAX.REPAY.TOL &amp; MIN.REPAY.TOL are input, the respective percentages are adjusted to the INIT.REPAY.AMT to validate NEW.REPAY.AMOUNT on the contract. 												SYSTEM updated field. No input is permitted.						.</p>
        <p>INITIAL.RATE</p>
        <p>The applicable interest rate at the time of first input of the contract. For fixed rate contracts, the INTEREST.RATE and for floating types, the rate for the INTEREST.KEY plus INTEREST.SPREAD is stored in this field. This rate is stored in order to validate the future changes to the interest rate. If the user desires to control the movements in interest rate to a pre-defined range of values (minimum and maximum chargeable interest) it is necessary to store the rate at the time of first input. 																				If MAX.INT.TOL &amp; MIN.INT.TOL are input, the respective percentages are adjusted to the INITIAL.RATE to decide the chargeable rate on the contract. 																SYSTEM updated field. No input is permitted.						.</p>
        <p>INT.LIQ.ACCOUNT</p>
        <p>In certain cases, the principal may be required to be liquidated from one account and interest from another account (possibly from another customer). In such a scenario, this field can be used to specify a liquidation account for interest alone (including interest tax, if any), and principal liquidation account can be input in MORTGAGE.ACCOUNT.				If left blank, this field will default the account specified in MORTGAGE.ACCOUNT, and both principal and interest will be liquidated from the same account.				</p>
        <p>Validation Rules</p>
        <p>								Standard account number format. or 3 - 10 alphanumeric account mnemonic. (Mandatory input) Input must be a valid account of the same currency as the loan. The account entered must be either a current account or have an account class of MORTGAGE. An override will be required if the customer of the account is not the customer of the loan. An override will be required if the account input is a SAVINGS account. If the contract is linked to another contract, ie it has a suffix in its key, and the mortgage account differs on the main deal, an override is required. If the contract has associated deals (see ASSOC.CONTRACT field), an override will be required for each associated deal with a different mortgage account to that entered here. 		.</p>
        <p>INT.REVIEW.FREQ</p>
        <p>Maintains an interest review date and frequency for reporting purposes only. 				This field is used to record the next date on which a contract is to undergo an interest rate review and the frequency of subsequent reviews. This is used for information and reporting purposes only. 				This field can be entered manually or defaulted by the system. A default review frequency is held on the MG.PARAMETER table in the DEFAULT.INT.REVIEW field. This will be used in conjunction with the repayment date field to default the review date and frequency. 				The date in this field will be cycled automatically by the system whenever a rate change schedule is processed by the end of day batch routine. This date may also be cycled automatically on-line if a rate change is entered back dated and the review date has already been reached. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date/frequency format. (optional input)				Input cannot be prior to value date.		.</p>
        <p>INTEREST.BASIS</p>
        <p>Mortgages can accept the following types:																										Key																			Days/Denominator																													A																			360/360																													A1																			360/360*																													A2																			360/360*																													B																			366/360																													C																			366/366																													D																			360/366																													E																			366/365																													F																			360/365																													F1																			360/365*																													F2																			360/365*																													G																			366/364																							For illustrations of all supported 				INTEREST.BASIS types and for types marked * see: INTEREST.BASIS				</p>
        <p>Validation Rules</p>
        <p>								1 to 2 type A (alphanumeric) character. 				Valid input is A, A1, A2, B, C, D, E, F, F1, F2, G or blank. 				Default Value = Interest Day Basis as specified on the Currency table for the currency of the contract. 		.</p>
        <p>INTEREST.KEY</p>
        <p>This field is used to obtain an annual rate of interest via the MG.RATE.CONTROL table. 				There are two alternative methods of fixing an interest rate on a mortgage during contract input. The first is via a direct input of the desired rate to the INTEREST.RATE field. This method is useful in an environment where rates vary between individual contracts. 				The second method makes use of the MG.RATE.CONTROL table. By entering an interest key the current rate for that key will be defaulted into the INTEREST.RATE field during validation. This method is advantageous when the rate of interest is similar between groups of contracts. 				Once the contract has been drawn down, ie the contract status is CUR, then this field and therefore the INTEREST.RATE field cannot be updated. However, the rate on a contract may be changed at any time via the "new interest rate" fields (NEW.INTEREST.RATE - NEW.INT.EFF.DATE). At this time a further advantage of the use of interest keys becomes apparent. When a review takes place a new rate along with the date on which it becomes effective must be entered via the new interest rate fields. If the rate was originally entered by the use of an interest key, then the new rate may also be defaulted using the same key but without the need to re-enter it. In such a case the rate for that key on the effective date entered will be determined and defaulted as the new interest rate. 				Also when changes are made to the interest key via the MG.RATE.CONTROL file, all mortgages linked to the key will be automatically updated with the new rate. 				These two methods of fixing the interest rate are mutually exclusive. An interest key cannot be input if a rate has been entered, and vice versa. However, the use of one method to fix the original rate does not exclude the other when entering new rates. 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 4 numeric characters. Multi-value field associated with fields UP.TO.PRINCIPAL, FIXED.VAR.IND, INTEREST.RATE and INTEREST.SPREAD. (optional input)				Input not allowed if an interest rate has been input.				Must be a valid interest key on the BASIC.RATE.TEXT table.				A valid rate must be defined on the MG.RATE.CONTROL table for the interest key, contract currency and effective date entered/defaulted.				Input not allowed once the contract has been authorised with a contract status of CUR.		.</p>
        <p>INTEREST.RATE</p>
        <p>Specifies the annual rate at which interest is to be accrued on the outstanding balance of the contract. 				This field contains the current annual rate of interest to be used when accruing interest on the outstanding balance of the contract. This information may be entered manually or defaulted via an interest key and spread entered in the fields INTEREST.KEY and INTEREST.SPREAD. It is mandatory to enter either a rate or an interest key and spread. 				Once the contract has been drawn down, ie the contract status has become CUR, this field cannot be changed. However, the interest rate can be changed at any time via the "new interest rate" fields (NEW.INTEREST.RATE - NEW.INT.EFF.DATE). 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters Multi-value field associated with fields UP.TO.PRINCIPAL, FIXED.VAR.IND, INTEREST.KEY and INTEREST.SPREAD. (optional input)				Input must be a positive, zero is allowed.				Input prohibited if data is present in the fields INTEREST.KEY or INTEREST.SPREAD.				A rate must be present in this field if the INTEREST.KEY and INTEREST.SPREAD fields are blank.				Input not allowed once the contract has been authorised with a status of CUR.		.</p>
        <p>INTEREST.SPREAD</p>
        <p>Defines the interest spread to be applied to the rate obtained via the interest key entered in the INTEREST.KEY field 				If the interest rate is fixed by the use of an interest key, then it is possible to apply a margin or spread to the rate with this field. 				This field can only be used in conjunction with an interest key and cannot be changed once the contract has been drawn down, ie the contract has become CUR. However, the spread and therefore the interest rate can be changed at any time via the "new interest fields" (NEW.INTEREST.RATE - NEW.INT.EFF.DATE). 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. Multi-value field associated with fields UP.TO.PRINCIPAL, FIXED.VAR.IND, INTEREST.RATE and INTEREST.KEY. (optional input)				Input only allowed if an interest key has been entered in the INTEREST.KEY field.				Input not allowed once the contract has been authorised with a contract status of CUR.				The interest rate resulting from the application of the spread to the rate obtained via the interest key must be positive.		.</p>
        <p>JOINT.HOLDER</p>
        <p>This field must contain a customer no. being made a joint holder of this contract. 				</p>
        <p>Validation Rules</p>
        <p>				If entered this field must contain a valid customer number.				Optional Field		.</p>
        <p>JOINT.NOTES</p>
        <p>This field can contain any documentary information pertaining to the JOINT.HOLDER 				</p>
        <p>Validation Rules</p>
        <p>				This field cannot be entered if the JOINT.HOLDER field has not been entered.				If the JOINT.HOLDER field has been populated this field is optional.		.</p>
        <p>LIMIT.REF</p>
        <p>Identifies the LIMIT REFERENCE number to be checked when verifying a credit limit for the loan. 				Whenever a loan is entered into the system, a check is made for the availability of a suitable credit limit against which to draw the loan. This field defines at which level and against which limit product this check is performed. 				If this field is left blank the limit reference will be defaulted from the LIMIT.PARAMETER file, according to the default sequence defined on that file for the mortgage application. 				For a more detailed explanation of limit processing refer to the helptext guides for the LIMIT, LIMIT.REFERENCE and LIMIT.PARAMETER applications. 				</p>
        <p>Validation Rules</p>
        <p>				3 - 7 numeric characters (optional input)				Input must be a valid LIMIT.REFERENCE number.				If no limit record exists for the client then a default limit will be created which will require a user override.				If the client's limit is insufficient to cover the outstanding principal of the loan an override will be required.				An override will also be required if the expiry date of the LIMIT record is prior to the maturity date of the contract.		.</p>
        <p>LINK.REFERENCE</p>
        <p>LINK.REFERENCE 		.</p>
        <p>LIQUIDATION.MODE</p>
        <p>This field identifies the manner in which overdue payments are handled. The default for all contracts is AUTOMATIC. 				Three options are currently available: AUTOMATIC, SEMI-AUTOMATIC, and MANUAL				AUTOMATIC indicates that payments will be settled irrespective of whether funds are available in the draw down account.				SEMI-AUTOMATIC indicates that a payment will be made only if funds are available, and that a PD end of day process will regularly attempt to make payment by checking whether funds have become available.				MANUAL indicates that the contract will only settle if funds are available and that any future settlement of outstanding payments must be made manually via the PD module.				</p>
        <p>Validation Rules</p>
        <p>				If the PD product is not defined for the current company then the only allowed setting is AUTOMATIC. 		.</p>
        <p>LOCAL.REF</p>
        <p>A number generated automatically by the system which identifies either a statement entry or a category entry in respect of a contract. 				Whenever an amendment to, or input of, a contract requires an accounting entry to be raised, this field will record the IDs of the entries generated. The IDs to accounting entries, both STMT.ENTRYs and CATEG.ENTRYs, consist of a date-time stamp and a sequence number. All entries raised by a particular input/transaction will have the same date-time stamp but different sequence numbers. 				This field has three multi-values, the first contains the base date-time stamp which is common to all entries. The second contains the sequence numbers of the STMT.ENTRYs raised and the third the sequence numbers of any CATEG.ENTRYs. 				Whenever a contract is viewed using the (S)ee function this field will show the entry IDs that were raised by that version of the contract only. If the amendment made on a particular version did not raise any entries, then the field will be blank. Any end of day processing which raises accounting entries will also update this field and write a history record. The following examples illustrate the use of this field more clearly: 				Example 1 : 				On the contract value date a debit entry will be posted to the drawdown account of the loan for the principal amount. The system will generate a statement entry and record the ID of this entry in this field as follows: 				 86.1 STMT.NO ............ 673732684.48 86.2 STMT.NO ............ 1 				The number automatically generated in Field 86.1 is unique to the contract in question and is built in the following way: 				1. The first four digits '6737' indicate the number of days since the 1st of January 1968. In our example, it corresponds to the 11th of June 1986. 				2. The next five digits '32684' indicate the number of seconds since midnight. In our example, it corresponds to an entry generated on line at 09:04:44 AM. 				3. The last two digits '48' indicate the number of hundreds of seconds. 				The value assigned (again automatically) to Field 86.2 identifies the number in 86.1 as a statement entry number. This entry can be seen via the STMT.ENTRY Application using the ID: 				 673732684.480001 				where the suffix '0001' identifies it as the first statement entry (there may be more than one as the next example will illustrate). 				Example 2 : 				A second example outlined here is for a repayment of principal and interest. In this case two entries are posted to the contract repayment account in the MORTGAGE.ACCOUNT field. Both are statement entries, the first is for the principal repayment and the second for the interest. Although separate entries, both are generated by the same transaction. The IDs of the entries generated are recorded as follows:- 				 86.1 STMT.NO ............ 673732684.48 86.2 STMT.NO ............ 1-2 				Once again Field 86.1 contains the date-time stamp automatically generated by the system while Field 86.2 now contains two separate numbers signifying that there are in fact two separate statement entries. These entries may be viewed via the STMT.ENTRY application using the following IDs: 				 673732684.480001 673732684.480002 				Example 3 : 				A third example might be that of a category entry generated by the application of a charge when the interest rate on a contract is changed. This will generate a statement entry debiting the charge account for the amount of the charge and a category entry crediting the relevant P&amp;L category code. The IDs of the entries generated will be recorded as follows: 				 86.1 STMT.NO ............ 673732684.48 86.2 STMT.NO ............ 1 86.3 STMT.NO ............ 1 				Once again the standard date-time stamp is generated and inserted in Field 86.1 				Now, however, both fields 86.2 and 86.3 contain a value. As before the value in field 86.2 indicates that a statement entry has been raised. The value in field 86.3 now indicates that a category entry has also been raised. To view these entries the STMT.ENTRY and now the CATEG.ENTRY application should be used. In this case the ID required for each application is the same as follows: 				 673732684.480001 				</p>
        <p>Validation Rules</p>
        <p>				Internal multi-value field.		.</p>
        <p>MATURITY.DATE</p>
        <p>This field is reserved for future use. 				This field is reserved for future expansion. Currently it contains the same value as the prior field ORIGINAL MAT DATE. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. This is a NOINPUT field.				Input to this field not allowed.		.</p>
        <p>MAX.INT.RATE</p>
        <p>Maximum interest rate for the contract through its life. The chargeable interest (accrual) will be restricted to the rate input in this field. This rule is applicable for fixed as well as floating rate contracts. For fixed rate contracts the NEW.INT.RATE cannot be for a value higher than the rate in this field. For floating rate contracts the accrual rate will be restricted to the rate input in this field should the current rate for the key and spread in the deal add up to more. 				Example Applicable rate in the MG.RATE.CONTROL 				= 8% Spread in the contract = 2% INITIAL.RATE = 10% MAX.INT.RATE in the contract = 12% If the value in the MG.RATE.CONTROL table moves to 11%, including the spread of 2% the chargeable rate is 13%. However, the interest rate for the contract will be restricted to the MAX.INT.RATE of 12%. Any change in rate effected in the deal using NEW.INT.RATE field will be validated with the value in this field. Error message would be produced if the new interest rate is greater than the value in this field.				</p>
        <p>Validation Rules</p>
        <p>								1-10 numeric characters plus a decimal point. Input must be positive value. 								Value cannot exceed 100. 								MAX.INT.RATE cannot be less than the INTEREST.RATE. If INTEREST.KEY and INTEREST.SPREAD are input, the value in this field cannot be lower than the applicable rate in the MG.RATE.CONTROL table plus spread. 								Optional Input. Either MAX.INT.RATE or MIN.INT.RATE alone may be input if so required. No input is permitted if MAX.INT.TOL or MIN.INT.TOL is input 								Also refer to helptext for field CONTRACT.TYPE for product switch rules.						.</p>
        <p>MAX.INT.TOL</p>
        <p>The maximum tolerance on the INITIAL.RATE. The percentage input in this field will be added to the INITIAL.RATE to validate the maximum rate that is to be charged for the contract. If the bank agrees with its customer that the agreement rate will not be increased by more than a specific percentage, then this field is used. 				Example INTEREST.KEY 				 = 1 (which is 8%) INTEREST.SPREAD = 2% MAX.INT.TOL = 25% In this case the rate at the time of input (10%) is written to INITIAL.RATE. If the floating rate moves to 11%, the chargeable rate is 11+2 = 13%. However, the contract will be charged a rate of 12.5% only (INITIAL.RATE of 10% plus MAX.INT.TOL 0.25 = 12.5%) In the above example if the floating rate moves to 10%, the chargeable rate is 10+2 = 12%. Since this is within the permitted tolerance, the deal will be charged 12%. Any change in the interest rate through the deal using NEW.INT.RATE will be validated with the initial rate and interest tolerance. Error message will be produced if the new interest rate is greater than the initial rate plus maximum tolerance. 				</p>
        <p>Validation Rules</p>
        <p>								Standard T24 percentage format. Negative values not allowed. Value input cannot exceed 100. Optional Input. Either MAX.INT.TOL or MIN.INT.TOL alone can be defined if so required. No input permitted if either MAX.INT.RATE or MIN.INT.RATE is input. Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MAX.REPAY.AMT</p>
        <p>The maximum repayment amount permissible for the contract. The repayment amount arrived at the time of first input of the contract is stored in INIT.REPAY.AMT. On account of a principal increase or due to any re-scheduling, the new repayment amount cannot exceed the value input in this field and this validation is done through the life of the contract. 				Example 				At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT = 10,000 Input in MAX.REPAY.AMT = 11,000 On account of a principal increase, re-scheduling or rate change through the deal, the NEW.REPAY.AMOUNT is calculated to be 12,000. In such case error will be produced prompting the user to change the maximum repayment amount. However, if the same situation arises out of rate change through MG.RATE.CONTROL, the NEW.REPAY.AMOUNT will be restricted to 11,000 and the term of the contract will be extended suitably. 				</p>
        <p>Validation Rules</p>
        <p>								Standard T24 amount format 1-14 numeric characters plus a decimal point Value must be greater than zero Optional Input. Either MAX.REPAY.AMT or MIN.REPAY.AMT alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. No input is permitted if MAX.REPAY.TOL or MIN.REPAY.TOL is input Input permissible only for ANNUITY and LINEAR contracts Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MAX.REPAY.TOL</p>
        <p>Maximum tolerance on the repayment amount. The percentage input in this field is added to the INIT.REPAY.AMT to validate the NEW.REPAY.AMOUNT. If the bank agrees with its customer that the repayment amount will be restricted to certain percentages on the initial repayment amount, this field is used. If such movement is to be restricted to an absolute value MAX.REPAY.AMT may be input. On the contrary, if such restriction is defined as a percentage on the INIT.REPAY.AMT, this field is used. 				Example At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT = 10,000 Input in MAX.REPAY.TOL = 25% On account of a principal increase, re-scheduling or rate change through the deal, the NEW.REPAY.AMOUNT is calculated to be 13,000. In such case error message will be produced to change the tolerance. However for rate changes through MG.RATE.CONTROL, the NEW.REPAY.AMOUNT will be restricted to 10,000 plus 25% = 12,500 and the term of the contract will be extended suitably. However, if the re-scheduling results in a NEW.REPAY.AMT of 12,000, this will be maintained as it is within the tolerance percentage of 25%				</p>
        <p>Validation Rules</p>
        <p>								Standard T24 percentage format.								Value must be greater than zero. Maximum allowed value is 100 Optional Input. Either MAX.REPAY.TOL or MIN.REPAY.TOL alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. Not available for input if MAX.REPAY.AMT or MIN.REPAY.AMT is input Input permissible only for ANNUITY and LINEAR contracts.				Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MI.FUNDING.DEPT</p>
        <p>This field is used within the Management Information module to define the Department which funded this Contract. It is used in the generation of cost of funds entries when either the MIS.INTEREST.KEY or MIS.INTEREST.RATE field is used.								</p>
        <p>Validation Rules</p>
        <p>								Must be a key to a valid record on the DEPT.ACCT.OFFICER file.				Mandatory.				 If not defined, value would be defaulted from the value of the field DEFLT.FUND.DEPT associated with the appropriate COMPANY field in MI.PARAMETER.		.</p>
        <p>MIN.INT.RATE</p>
        <p>Minimum interest rate for the contract through its life. This rule is applicable for fixed as well as floating rate contracts. For fixed rate contracts the NEW.INT.RATE cannot be for a value lower than the rate in this field. For floating rate contracts the accrual will be done at the current rate for the key and spread or the rate in this field, whichever is higher. 				Example Applicable rate in the MG.RATE.CONTROL = 8% Spread in the contract = 2% INITIAL.RATE = 10% MIN.INT.RATE in the contract = 9% If the value in the MG.RATE.CONTROL table drops to 6%, including the spread of 2% the chargeable rate is 8%. However, interest for the contract will be charged at the MIN.INT.RATE of 9%. Any change in rate effected in the deal using NEW.INT.RATE field will be validated with the value in this field. Error message would be produced if the new interest rate is less than the value in this field.				</p>
        <p>Validation Rules</p>
        <p>								1-10 numeric characters plus a decimal point. 												Input must be positive value. Value cannot exceed 100. MIN.INT.RATE cannot be more than the INTEREST.RATE. If INTEREST.KEY and INTEREST.SPREAD are input, the value in this field cannot be higher than the applicable rate in the MG.RATE.CONTROL table plus spread. Optional Input. Either MAX.INT.RATE or MIN.INT.RATE alone may be input if so required. No input is permitted if MAX.INT.TOL or MIN.INT.TOL is input Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MIN.INT.TOL</p>
        <p>The minimum tolerance on the INITIAL.RATE. The percentage input in this field will be reduced from the INITIAL.RATE to validate the minimum rate that is to be charged for the contract. If the bank agrees with its customer that the agreement rate will not drop by more than a specific percentage, then this field is used. 				Example INTEREST.KEY = 1 (which is 8%) INTEREST.SPREAD = 2% MIN.INT.TOL = 25% In this case the rate at the time of input (10%) is written to INITIAL.RATE. If the floating rate drops to 5%, the chargeable rate is 5+2 = 7%. However, the contract will be charged a rate of 7.5% (INITIAL.RATE of 10% less MIN.INT.TOL 0.25 = 7.5%) In the above example if the floating rate drops to 6%, the chargeable rate is 6+2 = 8%. Since this is within the permitted tolerance, the deal will be charged 8%. Any change in the interest rate through the deal using NEW.INT.RATE will be validated with the initial rate and interest tolerance. Error message will be produced if the new interest rate is less than the initial rate less minimum tolerance. 				</p>
        <p>Validation Rules</p>
        <p>								Standard T24 percentage format. Negative values not allowed. Value input cannot exceed 100. Optional Input. Either MAX.INT.TOL or MIN.INT.TOL alone can be defined if so required. No input permitted if either MAX.INT.RATE or MIN.INT.RATE is input. Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MIN.REPAY.AMT</p>
        <p>The minimum repayment amount permissible for the contract. The repayment amount arrived at the time of first input of the contract is stored in INIT.REPAY.AMT. On account of a MG.PAYMENT or due to any re-scheduling, the new repayment amount cannot be lower than the value input in this field and this validation is done through the life of the contract. 				Example 				At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT = 10,000 Input in MIN.REPAY.AMT = 9,000 On account of re-scheduling or rate change through the deal, NEW.REPAY.AMOUNT is calculated to be 8,000. In such case error will be produced prompting the user to change the minimum repayment amount. However, if the same situation arises out of rate change through MG.RATE.CONTROL or payments made through MG.PAYMENT, the NEW.REPAY.AMOUNT will be restricted to 9,000 and the term of the contract will be shortened suitably. 				</p>
        <p>Validation Rules</p>
        <p>								Standard T24 amount format 1 -14 numeric characters plus a decimal point Value must be greater than zero Optional Input. Either MAX.REPAY.AMT or MIN.REPAY.AMT alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. No input is permitted if MAX.REPAY.TOL or MIN.REPAY.TOL is input Input permissible only for ANNUITY and LINEAR contracts Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MIN.REPAY.TOL</p>
        <p>Minimum tolerance on the repayment amount. The percentage input in this field is reduced to the INIT.REPAY.AMT to validate the NEW.REPAY.AMOUNT. If the bank agrees with its customer that the repayment amount will be restricted to certain percentages on the initial repayment amount, this field is used. If such movement is to be restricted to an absolute value MIN.REPAY.AMT may be input. On the contrary, if such restriction is defined as a percentage on the INIT.REPAY.AMT, this field is used. 				Example At the time of first input of the contract, the repayment amount is say 10,000 Value written to INIT.REPAY.AMT 				= 10,000 Input in MIN.REPAY.TOL = 25% On account of rescheduling or rate change through the deal the NEW.REPAY.AMOUNT is calculated to be 7,000. In such case error message would be produced for change of the tolerance level. However for payments made through MG.PAYMENT and rate changes through MG.RATE.CONTROL, the NEW.REPAY.AMOUNT will be restricted to 10,000 less 25% = 7,500 and the term of the contract will be shortened suitably. However, if the re-scheduling results in a NEW.REPAY.AMT of 8,000, this will be maintained as it is within the tolerance percentage of 25% 				</p>
        <p>Validation Rules</p>
        <p>								Standard T24 percentage format Value must be greater than zero. Maximum allowed value is 100 Optional Input. Either MAX.REPAY.TOL or MIN.REPAY.TOL alone may be defined is so required. If any value is input in this field, TERM.PRIORITY will not be permitted for input. Not available for input if MAX.REPAY.AMT or MIN.REPAY.AMT is input Input permissible only for ANNUITY and LINEAR contracts Also refer to helptext for field CONTRACT.TYPE for product switch rules.		.</p>
        <p>MIS.ACCT.OFFICER</p>
        <p>Identifies the profit centre to which the contract belongs. This will be used in the MIS (Management Information System) customer profitability analysis. 				This fields identifies the profit centre under which this contract is to be reported. This will be used in the customer profitability analysis of the MIS (Management Information System). 				This field will default to the account officer stored on the CUSTOMER file for the contract customer. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 4 numeric characters. (optional input - default to account officer of contract customer)				Must be a valid account officer on the DEPT.ACCT.OFFICER table.		.</p>
        <p>MIS.COF.DEPT</p>
        <p>This field is used within the Management Information module to define the Department which funded the Type of Additional Cost of Funds for the Contract.. 								This is a multivalue field associated with MIS.COF.TYPE.								</p>
        <p>Validation Rules</p>
        <p>								Must be a key to a valid record on the DEPT.ACCT.OFFICER file.				Mandatory if MIS.COF.TYPE and MIS.COF.RATE are specified.		.</p>
        <p>MIS.COF.RATE</p>
        <p>Represents the financing rate for the Type of Additional Cost of Funds. 								This is a multivalue field associated with MIS.COF.TYPE.								</p>
        <p>Validation Rules</p>
        <p>								1-10 Numeric characters plus a decimal point.				Mandatory if MIS.COF.TYPE is specified.										.</p>
        <p>MIS.COF.TYPE</p>
        <p>Specifies the type of Additional Cost of Funds that needs to be calculated, in addition to the refinancing amount using MIS.INTEREST.KEY/RATE.								For example Liquidity cost might be calculated in addition to the refinancing amount. 								This field is a multivalue field associated with MIS.COF.RATE, MIS.COF.DEPT .								If both refinancing rates (MIS.INTEREST.KEY/RATE) and type of Additional cost of funds (MIS.COF.TYPE) are not specified in the contract, then the Pool rates if specified for the Contract Group in MI.PARAMETER would be used for calculating both refinancing amount and additonal Cost of Funds. 								If only refinancing rates (MIS.INTEREST.KEY/RATE) are specified in the Contract and type of Additional cost of funds (MIS.COF.TYPE) are not specified in the contract, then the additonal Cost of Funds would not be calculated.. 												</p>
        <p>Validation Rules</p>
        <p>												Must be the ID of a valid record on the MI.COF.TYPE file.								Optional.										.</p>
        <p>MIS.INTEREST.KEY</p>
        <p>MIS.INTEREST.KEY 				</p>
        <p>Validation Rules</p>
        <p>				This is a NOINPUT field.		.</p>
        <p>MIS.INTEREST.RATE</p>
        <p>Identifies the refinancing rate for the contract. This will be used by the MIS (Management Information System) customer profitability analysis. 				The rate entered in this field will be used by the MIS (Management Information System) customer profitability analysis. If this field is left blank then the pool rate will be used in the analysis. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. (optional input)		.</p>
        <p>MORTGAGE.ACCOUNT</p>
        <p>Specifies account to which the periodic repayments are to be made is defined by this field.								All periodic repayments made on the loan will be debited to the account contained in this field. Separate accounting entries will be posted for principal, interest and any additional payment elements defined in the field ADD.PAY.TYPE. 				It is possible to specify a different liquidation account for interest alone in INT.LIQ.ACCOUNT, in which case MORTGAGE.ACCOUNT will be used for principal liquidation only				Any penalties for overdue repayments will also be debited to this account. 				If the contract has other associated contracts (see ASSOC.CONTRACT field) then checks are made on the mortgage account of all other contracts in the group. Any differences in the mortgage accounts used will be highlighted with an override message. 				If the customer of the contract is changed through input in the field NEW.CUSTOMER, the user will have to manually input the mortgage account of the new customer, if desired. 				</p>
        <p>Validation Rules</p>
        <p>								Standard account number format. or 3 - 10 alphanumeric account mnemonic. (Mandatory input)				Input must be a valid account of the same currency as the loan.				The account entered must be either a current account or have an account class of MORTGAGE.				An override will be required if the customer of the account is not the customer of the loan.				An override will be required if the account input is a SAVINGS account.				If the contract is linked to another contract, ie it has a suffix in its key, and the mortgage account differs on the main deal, an override is required.				If the contract has associated deals (see ASSOC.CONTRACT field), an override will be required for each associated deal with a different mortgage account to that entered here.		.</p>
        <p>NEW.CUSTOMER</p>
        <p>In certain cases, the customer of a MG contract may be required to be changed during the tenure of the contract. When the id of the new customer is input in this field and the contract authorized, the new customer will now be populated in the CUSTOMER field and the NEW.CUSTOMER field will be open to input again. The id of the previous customer will be populated in the FORMER.CUST field. When a change of customer is effected, it would be treated as a contract maturity for the old customer and affect his limit accordingly. The limit of the new customer would now be hit.												</p>
        <p>Validation Rules</p>
        <p>																				Input should be a valid ID in the CUSTOMER table																				If the MG contract has a PD, change in customer will not be allowed unless the status of the PD is CUR.																				Change in customer would not be allowed where there is a portfolio of the old customer mentioned in the field PORTFOLIO.NUMBER						.</p>
        <p>NEW.FIX.VAR.IND</p>
        <p>Defines whether the interest key specified below is to be fixed at the contract input stage, or whether the contract should be linked to the interest key changes. 				This field determines whether the mortgage is to be tied to a variable or fixed interest rate. If 'VARIABLE' is specified then a interest key must be specified. All changes to the interest key will reflect in the mortgage contract by being automatically updated whenever a change to the MG.RATE.CONTROL record is made. 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>				Can be either 'FIXED' or 'VARIABLE' or abbreviations thereof. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL.				Input only allowed if NEW.INT.EFF.DATE entered above.		.</p>
        <p>NEW.INT.EFF.DATE</p>
        <p>Identifies the date on which the new interest rate in the NEW.INTEREST.RATE field becomes effective. 				Whenever the interest rate on a contract is changed an effective date for that change must be defined in this field. The interest rate can be changed at any time during the life of a contract and therefore the date entered here can be either a prior date, the current date or, a future date. 				If this date is backdated then at authorization the new rate fields (NEW.INTEREST.RATE - NEW.INT.SPREAD) will be transferred to the current rate fields (INTEREST.RATE - INTEREST SPREAD) and the new fields cleared. Similarly the MG.BALANCES file will be updated with the new rate and the date from which it is effective. If interest has already been accrued beyond this effective date then it will be adjusted. Similarly, any payments received after this date will be reprocessed to reflect any changes in the interest due. 				If the effective date is in the future then a rate change schedule will be created. This will be processed during the end of day batch processing on the effective date itself. In the meantime the new interest details may be amended or deleted. 				In the case of annuity contracts, a change in the interest rate will have an effect on the theoretical annuity amount. Depending on the effective date of the rate change this may effect the next repayment or future repayments. If it affects a future repayment, the date on which this new amount is required is automatically inserted into the NEW.REPAY.DATE field on input of the rate change date. In both cases the new theoretical annuity amount is calculated automatically during 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. (optional input) NEW.THEORETICAL field dependent on the date of the rate change. If a rate change is backdated, but, is dated after the next scheduled revision date then the review date defined in the INT.REVIEW.FREQ field will be cycled forward when the change is authorised.				Input only allowed if the contract is authorised with a contract status of CUR.				Input is not allowed unless new rate details have been entered in the fields NEW.INTEREST.RATE - NEW.INT.SPREAD.				Input is mandatory if any new rate details have been entered in the fields NEW.INTEREST.RATE - NEW.INT.SPREAD				The date input cannot be prior to the value date of the contract.				An override is required if the effective date is a non working day.				If the effective date is prior to a previous repayment date, thereby causing that repayment to be adjusted, an override will be required.		.</p>
        <p>NEW.INT.KEY</p>
        <p>Specifies the interest key to be used when fixing a new interest rate on a "Live" contract. 				Once a contract has been authorised with a contract status of CUR it is no longer possible to amend the INTEREST.RATE field. However, the interest rate may be changed by the use of an interest key entered in this field. The date used to obtain the rate from the MG.RATE.CONTROL table and on which that rate becomes effective is defined in the NEW.INT.EFF.DATE field. 				If the original rate was fixed using an interest key and spread then the same key and spread may be used to determine the new rate. This is achieved by simply entering an effective date in the NEW.INT.EFF.DATE field. At validation the appropriate rate for the original key on the new effective date will be determined. The rate obtained from the MG.RATE.CONTROL table will then be combined with any spread in the NEW.INT.SPREAD field and defaulted into the NEW.INTEREST.RATE field. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 3 numeric characters. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL.. (optional input)				Input only allowed if the contract status is CUR.				Input not allowed if a value is present in the NEW.INTEREST.RATE field.				Must be a valid interest key on the MG.RATE.CONTROL table.				A valid rate must be defined on the MG.RATE.CONTROL table for the interest key, contract currency and the effective date of the change.		.</p>
        <p>NEW.INT.RATE</p>
        <p>This field allows the interest rate to be changed during the life of the contract. The new rate may be entered in this field or calculated via an interest key and spread. 				Once a contract has been authorised with a contract status of CUR it is no longer possible to amend the INTEREST.RATE field. However, the interest rate on a "Live" contract may be changed via this field. The date on which this new rate becomes effective is defined in the NEW.INT.EFF.DATE field. 				The new rate may be either entered manually in this field, or, calculated by entering an interest key and spread in the NEW.INTEREST.KEY and NEW.INT.SPREAD fields. If the original rate was fixed using an interest key and spread then the same key and spread may be used to determine the new rate. This is achieved by simply entering an effective date in the NEW.INT.EFF.DATE field. At 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL.. (optional input) date will be determined.				Input only allowed when the contract status is CUR.				Input must be positive, zero is allowed.				Input is not allowed if data is present in either of the fields NEW.INTEREST.KEY or NEW.INT.SPREAD.		.</p>
        <p>NEW.INT.SPREAD</p>
        <p>Identifies an interest spread that will be used with the interest key entered in the NEW.INTEREST.KEY field to determine a new interest rate. 				Once a contract has been authorised with a contract status of CUR it is no longer possible to amend the INTEREST.RATE field. However, the interest rate may be changed by the use of an interest key entered in the NEW.INTEREST.RATE field and a spread entered here. The date on which that rate becomes effective is defined in the NEW.INT.EFF.DATE field. 				If the original rate was fixed using an interest key and spread, then the same key and spread may be used to determine the new rate. This is achieved by simply entering an effective date in the NEW.INT.EFF.DATE field. At validation the appropriate rate for the original key on the new effective date will be determined. 				The resultant rate will be defaulted into the NEW.INTEREST.RATE field during validation. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL.. (optional input)				Input only allowed if the contract status is CUR.				Input not allowed if a value is present in the NEW.INTEREST.RATE field.				Input only allowed with an interest key in the NEW.INTEREST.KEY field.				The interest rate resulting from the combination of the rate from the interest key in the NEW.INTEREST.KEY field and this field must be positive.		.</p>
        <p>NEW.REDEM.DATE</p>
        <p>Defines the dates on which any new repayment amounts become effective. This field is only used by ANNUITY and LINEAR type contracts. 				For redemption type contracts (ANNUITY and LINEAR) it is possible to change the repayment amount a number of times throughout the life of the contract. If these changes are known in advance they can be entered in the multi-valued "new repayment" fields. The NEW.REPAY.DATE field defines the date on which these new repayment amounts become effective. 				This field may be updated manually by the user or automatically defaulted by the system. Defaulting occurs when a future interest rate change is loaded on an ANNUITY contract, or an early partial redemption is made via the MG.PAYMENT file. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL. (mandatory input if NEW.REPAY.AMOUNT entered)				Input not allowed for SAVING and NONREDEM type contracts.				Dates input must be valid future repayment dates.				Dates must be input in ascending order and cannot be duplicated.		.</p>
        <p>NEW.REPAY.AMT</p>
        <p>Specifies any new repayment amounts which are required to become effective at a future date. This field is only used for ANNUITY and LINEAR type contracts. 				For redemption type contracts (ANNUITY and LINEAR) it is possible to change the repayment amount a number of times throughout the life of the contract. This can be done in one of two ways, either the new amounts are entered in the REPAYMENT.AMOUNT field immediately prior to them becoming effective,or if known,they can be loaded in advance. This is done via this multi-valued set of "new repayment" fields. In this way any number of future changes may be entered at the same time. 				As well as requesting a change in the repayment amount, a situation may occur whereby the system forces a new repayment amount to be implemented at a future date. This can happen when a future interest rate change is loaded on an annuity contract or an early partial redemption is made via the MG.PAYMENT file. These new repayment amounts are validated in such a way as to ensure that the contract will always be repaid by the end of the contract term. This is done by calculating a new theoretical repayment amount for each date on which a change in the repayment is requested. This is then compared to the actual repayment amount entered. In all cases the final repayment amount must be at least equal to the final theoretical amount. However, intermediate repayments may be for less than their associated theoretical amount. 				The details from the "new repayment" fields are transferred to the "current fields" when the next repayment date on the contract becomes equal to the new repay date. This transfer is performed as a part of the end of day batch process. 				The way in which these fields can be used is illustrated in the following examples: 				Examples: 				 (i) Temporary change in repayment amount requested. Contract type : LINEAR Principal : 120,000 Term : 60 months (5 years) Repayment date : 31/01/90 M0131 (monthly) Repayment amount : 2000 Theoretical amount : 2000 				 New repay date : 31/01/9131/01/92 New theoretical : 2000 2250 New repay amt : 1000 2250 				 In this case the repayment amount has been lowered for a year to a level below the theoretical amount. The following year it is increased again to a level allowing he shortfall from the previous year to be made up over the remaining life of the contract. An override will be required for the new repay of 1000 as this is less than the theoretical. 				 The new repayment details, effective on 31/01/91, will be transferred to the current repayment fields after the repayment of 31/12/90 when the repayment date is cycled forward and becomes equal to the new repay date. 				 (ii) Recalculation of annuity required due to a future interest rate change 				 Contract type : ANNUITY Principal : 120,000 Term : 60 Months (5 years) Interest rate : 10% Repayment date : 31/01/90 M0131 (monthly) Repayment amount : 2549.65 Theoretical amount : 2549.65 New interest rate : 11% New int eff date : 20/01/91 				 New repay date : 31/03/91 New theoretical : 2598.93 New repay amt : 2598.93 				 In this example a new repayment date and theoretical amount have been created by the system as a result of the rate change on 21/01/91. The new amount will not become effective until 31/03/91. This is due to the fact that the rate change falls in the middle of the repayment period ending 31/1/91 and therefore two interest rates apply in this period. Because of this it is not possible to calculate a new annuity for that period. The new annuity is calculated for the first full repayment period during which a single rate applies for the whole of that period. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 19 numeric characters Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL.. (optional input)				Input not allowed for SAVING and NONREDEM contract types.				Input must be positive.				Input not allowed without an associated date in the NEW.REPAY.DATE field.				Each repayment amount must be sufficient to repay the accrued interest for the repayment period(s) to which it applies.				The last multi-value must be at least equal to the last multi-value of the associated NEW.THEORETICAL field.				An override will be required for any new repayment amount that differs from the associated theoretical amount.		.</p>
        <p>NEW.THEORETICAL</p>
        <p>Defines the minimum repayment amount required at each new repayment date to ensure that the loan is fully repaid within the contract term. This field is used by ANNUITY and LINEAR type contracts only. 				This field is only used for ANNUITY and LINEAR contracts when a future change in the repayment amount is required. These future changes in the repayment amount are entered in this multi-valued set of fields. 				The date on which each new repayment amount becomes effective is held in the NEW.REPAY.DATE field. On each of these dates a new repayment amount is calculated by the system during validation and inserted in this field. This amount represents the minimum repayment amount required to repay the loan within the term and is based on the contract parameters on the effective date. 				Further details of how these amounts are calculated can be found in the Helptext for the REPAYMENT.AMOUNT field. 				If the contract type is ANNUITY, there may be cases where it is not possible to recalculate the repayment amount. These arise when there is a change in the principal balance or interest rate of the contract in the middle of a repayment period, and a new date and repayment amount has been requested for that period. In this case the theoretical amount will be left blank but an override message will be displayed to inform the user of the problem. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL. This is a NOINPUT field.				This is a NO INPUT field.				An override will be required for ANNUITY contracts in cases where it is not possible to calculate an annuity amount.		.</p>
        <p>NEW.UP.TO.PRIN</p>
        <p>Allows for changing or entering new banded rates for the mortgage. 				This field together with the interest rate fields below allow for banded interest rates to be specified for the contract. Different interest rates can be applied to portions of the principal amount lent. The amount specified here will define a band up to which interest rates specified below will be applied. 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>				1-19 Numeric characters. Multi-value field associated with fields NEW.UP.TO.PRIN to NEW.THEORETICAL.				Input only allowed when the contract status is CUR.		.</p>
        <p>OLD.CUSTOMER</p>
        <p>When the customer on a contract is changed through field NEW.CUSTOMER, the id of the previous customer is maintained by the system in this field. This field is non-inputtable.						.</p>
        <p>ORIGINAL.MAT.DATE</p>
        <p>This field contains the theoretical maturity date of the contract based on the TERM and the REDEM.START.DATE. 				This field contains the date on which the contract will be fully repaid, based on the contract term and the redemption start date. For example: 				Term : 300 months (25 years) Value date : 15th March 1990 Redem start date : 1st May 1990 				Original mat date : 1st April 2015 				This field is updated whenever the contract term, frequency of payment or redemption start date are amended. It is also updated when the term priority flag is set to "NO" accompanied by any or all of the events such as change in interest rate, change in repayment amount &amp; principal increases.				This date therefore represents the latest possible date on which the contract must be fully repaid in order that the terms and conditions of the contract are satisfied. In practice, the date of complete repayment may be earlier than this but should never be later. 				Once the repayment frequency of the contract undergoes change, any further amendements to the tenor of the contract would be possible through input of the new maturity date in this field.				</p>
        <p>Validation Rules</p>
        <p>				In case of redeemable contracts input to this field is allowed only after the frequency of the contract undergoes a change.				Otherwise input to this field is allowed only in case of non-redeemable contracts.		.</p>
        <p>OUR.REMARKS</p>
        <p>Free format narrative field for additional user information. 				This is a free format field which may be used for any notes or other information relating to the contract. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 35 alphanumeric characters. Multi-value field (optional input)		.</p>
        <p>OVERDUE.STATUS</p>
        <p>If the contract is overdue, then this field identifies the status of the underlying PAYMENT.DUE contract. 				</p>
        <p>Validation Rules</p>
        <p>				No input allowed.		.</p>
        <p>OVERRIDE</p>
        <p>Contains all the Override messages which the user agreed to during Input. 				During the validation of a contract, the system may provide the user with a series of screen override messages to indicate an anomaly, for instance, the repayment amount entered differs from that calculated by the system. 				In the event that the user confirms the Override, the full text of the actual Override Message will be stored, for reference purposes only, in this multi-value field. 				In the example given above when the deal is validated a warning bell will sound and a message will appear, at the foot of the screen, which reads: 				 'REPAYMENT AMOUNT DIFFERS FROM THEORETICAL' 				This will draw the user's attention to the amount entered, which may be a mistake and can then be corrected, alternatively the input may be correct in which case the user must confirm the input. 				A second example might be in respect of a contract with a client who has a credit line established with the bank, but where the maturity date of the contract goes beyond the credit line expiry date. In this case when the deal is validated a warning bell will sound and a message will appear, at the foot of the screen, which reads: 				 'LIMIT EXPIRES BEFORE TXN MATURITY' 				Once again the user's attention is drawn to the situation which can then be either corrected, or, confirmed via a positive response to the Override Message. 				If, subsequently, the contract record is either fully displayed or printed, then all override messages raised during the input of that version of the contract will be displayed. 				</p>
        <p>Validation Rules</p>
        <p>				Internal field. Multi-value field.		.</p>
        <p>PAYMENT.REFERENCE</p>
        <p>Identifies the MG.PAYMENT reference for a forward annuity closure. 				For Annuity type mortgages a forward value payment, either full or partial, can be entered via the MG.PAYMENT module. 				When this is the case, this field will automatically be updated from MG.PAYMENT with the id of the MG.PAYMENT record. 				When this field is present no subsequent changes to the Mortgage contract are allowed. 				If changes are required, then the forward valued MG.PAYMENT must be reversed first. 				</p>
        <p>Validation Rules</p>
        <p>				This field has three components as follows: a) A valid contract ID, 10 numeric characters prefixed by 'MG' with an optional 1 alpha prefix. b) "," c) 1 - 3 alpha character payment number, MGYYDDDNNNNNA.NN				This is a NO INPUT field.				Must be a valid id on the MG.PAYMENT file.		.</p>
        <p>PAYMENT.TYPE</p>
        <p>After the first redemption, interest only periods can be defined. This field will be used to determine if the repayment is interest-only or annuity. The field can hold either I or A. If set to I, then the system will treat the period from the new.redeem.date in the same set till the new.redeem.date in the following A set as interest only period.				</p>
        <p>Validation Rules</p>
        <p>												The last set can only be A type.		.</p>
        <p>PENALTY.RATE</p>
        <p>Defines the rate of penalty interest. 				Penalty interest on overdue amounts is charged on a flat fee basis. After each repayment the client is given a "grace period" in which to settle any debit balance on his mortgage account. At the end of this time a penalty will be charged based on any debit balance on the mortgage account and the percentage rate held in this field. It is recommended that penalty processing is only used on loans where an account is set up specifically for repaying the loan and is not used for any other purpose. 				The penalty rate may be either input manually in this field or defaulted from the MG.PARAMETER record where a default penalty rate is defined. The MG.PARAMETER record also defines the grace period during which the client must settle repayments. 				Penalty interest is charged on a monthly basis irrespective of the frequency of repayments. Therefore, a loan with quarterly repayments will have three penalties on each of the intervening months. 				Example: 				A client has a mortgage on which he is to repay 1000 on the first day of each month at three monthly intervals, ie. quarterly. The grace period allowed is 10 days and the penalty rate is 1%. The following situation arises: Mortgage Date Event account 				01/03/90 System makes automatic repayment of 1000 to mortgage account. - 1000.00 				 Client does not settle his repayment. - 1000.00 				11/03/90 Grace period has expired penalty applied: 1000 x 0.01 = 10 - 1010.00 				11/04/90 Second penalty date, penalty applied: 1010 x 0.01 = 10.1 - 1020.10 				25/04/90 Client settles repayment and outstanding penalty 1020.10 0.00 				11/05/90 Third penalty date. Zero balance, therefore no penalty. 0.00 				</p>
        <p>Validation Rules</p>
        <p>				1 - 11 numeric characters (optional input)				Input must be positive				Input not allowed if the repayment account defined in the MORTGAGE.ACCOUNT field is a current account.		.</p>
        <p>PORTFOLIO.NUMBER</p>
        <p>Identifies the client's portfolio to which this mortgage is to be linked. 				This field is used to link a customer's mortgage to his securities portfolio. The presence of a portfolio number entered in this field will cause the contract to be taken into account when revaluing the portfolio. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 3 numeric characters. (optional input)				Must be a valid portfolio number for the client on the SEC.ACC.MASTER file.		.</p>
        <p>POSITION.TYPE</p>
        <p>Identifies the position type applicable to this contract. This facility is not used at present and this field will be defaulted to (TR)ading. 				This field is currently not used by the system as the only available position type at present is (TR)ading which is the default value for this field. 				</p>
        <p>Validation Rules</p>
        <p>				2 alpha characters. This is a NOINPUT field - default value TR.		.</p>
        <p>PRIN.EFF.DATE</p>
        <p>The effective date of the principal increase. 				</p>
        <p>Validation Rules</p>
        <p>												Standard date format. (Optional input.)				Cannot be less than process date. 				Mandatory input if a value in PRIN.INCREASE. 				Should be in the current period				The multivalue sets should be in the ascending order of the effective date		.</p>
        <p>PRIN.INCREASE</p>
        <p>This is a multivalue field. It is used to determine the amount to be increased to the principal amount of the contract. This will accept only positive values.				</p>
        <p>Validation Rules</p>
        <p>												Principal increase cannot be backdated.				Principal increase can be defined for the current period only.		.</p>
        <p>PRINCIPAL.AMOUNT</p>
        <p>Specifies the principal amount of the contract. This is the amount of the loan given and does not indicate the outstanding balance. 				This field contains the principal amount of the contract. This is the amount agreed at the inception of the contract and does not indicate the outstanding amount during the life of the contract. This outstanding balance will be displayed as an enrichment for this field and is recorded on the MG.BALANCES file. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 18 numeric characters. (mandatory input)				Must be greater than zero.				Once authorised this field cannot be changed.		.</p>
        <p>PROVISION.AMOUNT</p>
        <p>Indicates the total amount provisioned for this contract.				</p>
        <p>Validation Rules</p>
        <p>								No-Input field 				Standard Amount field.		.</p>
        <p>PROVISION.METHOD</p>
        <p>Indicates whether asset classification should be computed Automatically or maintained manually.				When this field is populated with NULL (for new contracts) or AUTO, system computes the asset classification during the next Provision review Frequency( defined in ASSET.CLASS.PARAMETER) and updates the ASSET.CLASS, PROVISION and PROVISION.AMOUNT with the new details.				When this field is populated as MANUAL, it is assumed that the user Manages the asset classification manually and the contract would be skipped for any computation of provision until the field is switched back to AUTO.				</p>
        <p>Validation Rules</p>
        <p>								Accepts either MANUAL or AUTO		.</p>
        <p>PROVISION</p>
        <p>Indicates the Provision percentage that has been applied for this contract.				If the contract is eligible for Provisioning, system updates this field during COB according to the rules defined in ASSET.CLASS.PARAMETER.				Allows Manual input as well (by changing PROVISION.METHOD field to MANUAL) to override the System classification. Accounting entries would be raised online in accordance with the new Provision percentage..				When PD exists for the contract, this field should match the Provision percentage in the corresponding PD contract.				</p>
        <p>Validation Rules</p>
        <p>								Input allowed only when PROVISION.METHOD is MANUAL. 				Holds Null when there is no asset classification. 				Maximum of 3 Numeric characters. 				Allows '0'(Zero) value.		.</p>
        <p>RATE.FIX.FQY</p>
        <p>This field allows MG module to modify the rates to be fixed at contract level, and for each contract fixing date to be set. 				On the next scheduled date for this contract to be automatically updated, the new interest will be calculated taking into account the interest rates stored in MG.RATE.CONTROL or MG.RATE.CONTROL.HIST and the spread stored on the contract. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date/frequency code format (Optional input)				The date of the first rate fix should not be prior to today or the contract value date and should not be after the contract maturity date.		.</p>
        <p>RECALC.CURR.AMT</p>
        <p>This field is to determine if any recalculations in the repayment amount should be effected from the current instalment or the next instalment.				If set to YES, then the recalculated amount is from the current period onwards. The amount recalculated is populated in the repayment amount field. 				If set to NO, then the repayment amount is recalculated from the next period onwards and recalculated amount would be populated into the new repayment set of fields.				This recalculations could be due to any reason, for e.g., rate change, term increase/decrease, principal increase, change in maturity date etc.				</p>
        <p>Validation Rules</p>
        <p>												Cannot be NO for frequency change.				Cannot be NO for first period.		.</p>
        <p>REDEM.START.DATE</p>
        <p>For redemption type contracts this field contains the repayment date on which principal redemptions commence. For all contract types this field is used along with the contract term to calculate the maturity date. 				For contracts with principal redemptions this field defines the date on which principal repayments will commence. Similarly repayments of additional payment elements will start on this date irrespective of contract type. 				For all contract types this date is used to determine the final maturity of the contract. This is because the term of the contract applies from this date and not the value date or first repayment date of the contract. This feature makes it possible to set up a loan where, for an initial period, repayments are restricted to interest only. 				If left blank this field will be defaulted at validation and will set the first repayment to interest only, ie the redemption start date is after the first repayment date. 				If the date in this field has not yet been reached this field may be changed. Whenever this is done the maturity date will be recalculated. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. (optional input - default to the second repayment date)				Must be a valid repayment date.				Must be at least one full repayment period after the contract value date.				Input cannot be prior to the next repayment date.				Input not allowed once the redemption start date has passed.		.</p>
        <p>REDEMPTION.DATE</p>
        <p>Identifies the date and frequency of redemptions. 				The date of the next redemption is defined in this field along with the frequency of future redemptions. Redemptions may be made on any day of the month and at the repayment frequency in case of annuity contracts. 				The date present in this field applies to repayments of principal only, and cannot be input for non redeemable contracts. 				Contracts with principal redemptions may initially repay only interest. in this case the start date for principal redemptions is held in the REDEM.START.DATE field. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date/frequency code format (can be defaulted from REPAYMENT.DATE). 				Frequency of redemptions must be for a number of weeks or months.				The date of the next redemption must match the day portion of the frequency code unless both dates are month end dates. 				This is a 'no input' field if the contract is non- redeemable, otherwise it is mandatory, but can be defaulted from the previous field. 				The frequency in this field cannot be less than the frequency of the previous field. 				Redeemable contracts that are annuities must coincide on frequency and dates for interest and principal, but the first redemption can be after the first repayment. 		.</p>
        <p>RELATION.CODE</p>
        <p>This field signifies a relationship that the JOINT.HOLDER field has with the contract in view. 				</p>
        <p>Validation Rules</p>
        <p>				If entered the field must contain a valid relation code established on the RELATION file.				This field cannot be entered if the JOINT.HOLDER field has not been entered.				This field must be entered if the JOINT.HOLDER field has been entered.		.</p>
        <p>REPAY.METHOD</p>
        <p>This field determines whether the Mortgage repayment of Interest/Principal/Charges are to be collected through Direct Debit process.				</p>
        <p>Validation Rules</p>
        <p>								Input allowed only when Direct Debit module is installed for the company.				Valid value "DD" to indicate Direct Debit or Null.				If this field is entered as "DD" then next field-DD.MANDATE.REF is mandatory.		.</p>
        <p>REPAY.REVIEW.FREQ</p>
        <p>When a change is required in the repayment amount, the date of the change will be taken from next date calculated from the frequency entered in this field. 				This field allows a date and frequency in which the repayment amount may be changed. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date/frequency format.				Input only allowed for redemption type contracts (ANNUITY, LINEAR).		.</p>
        <p>REPAYMENT.AMOUNT</p>
        <p>The use of this field is dependent on the contract type. For annuity contracts it defines the annuity amount and for linear contracts, the fixed periodic principal repayment amount. This field is not used for non redemption type loans. 				The contents of this field are dependent on the contract type. If the contract is a non redemption type, ie SAVINGS or NONREDEM, then this field is not used and input is not allowed. 				The use of this field also differs between ANNUITY and LINEAR loans. In the case of ANNUITY contracts this field will contain the annuity amount, the fixed periodic total of principal plus interest repayments. For LINEAR contracts this field contains only the fixed periodic principal repayment amount, the interest portion varies each month and can be found in the COMMITTED.INTEREST field. 				In both cases this amount can be either entered manually or defaulted during validation. Irrespective of this a theoretical repayment amount will always be calculated and stored in the THEORETICAL.AMOUNT field. This is done to provide a means of ensuring that the repayment schedule will always repay the loan in full within the contract term. These theoretical amounts are calculated using the following formulae where: 				I = Periodic rate of interest ie if repayments are quarterly RATE/4. n = No of repayments 				i) Annuity contracts: ii) Linear contracts 				 n PRINCIPAL x I x (I + 1) PRINCIPAL ----------------------- --------- n n (I + 1) - 1 				The validation of this field will take into account any future changes in the repayment amount that have been defined in the "new repayment" fields (NEW.REPAY.AMT - NEW.THEORETICAL). If the repayment amount is to be changed then this is recorded in advance in these fields,along with the date on which the new amount becomes effective. The validation process then ensures that the current and any future repayment amounts will be sufficient to repay the loan within the term. This mechanism allows any given repayment amount to be less than its associated theoretical amount at any intermediate stage. However any shortfall arising from this must be made up later in the life of the contract, therefore, the final repayment amount defined must always be at least as large as its associated theoretical amount. 				This mechanism is illustrated in the following examples. 				Examples: 				i) Contract type : LINEAR Principal : 120,000 Term : 60 months (5 years) Repayment date : 31/01/90 M0131 (monthly) Repayment amount : 2,000 Theoretical amount : 2,000 				This represents a simple example where the actual repayment amount is the same as the theoretical. This is acceptable to the system as the loan will be fully repaid within the term. The repayment amount can be increased without giving any validation errors but cannot be reduced. 				ii) Contract type : LINEAR Principal : 120,000 Term : 60 months (5 years) Repayment date : 31/01/90 M0131 (monthly) Repayment amount : 2000 Theoretical amount : 1000 				 New repay date : 31/01/9131/01/92 New theoretical : 2250 2500 New repay amt : 1500 2500 				In this case the repayments for the first two years are reduced. However, the final three years have a higher repayment than in the previous example in order to make up the shortfall from the prior years. These repayment/new repayment amounts will validate successfully as the final repayment amount is equal to the theoretical. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 19 numeric characters (optional input - default from the THEORETICAL.AMOUNT field)				Input not allowed for SAVING and NONREDEM contract types.				If there is no new repayment details in the fields NEW.REPAY.AMT - NEW.THEORETICAL then any amount input cannot be less than that in the THEORETICAL.AMOUNT field.		.</p>
        <p>REPAYMENT.DATE</p>
        <p>Identifies the date and frequency of repayments. 				The date of the next repayment is defined in this field along with the frequency of future repayments. Repayments may be made on any day of the month and at a frequency of weekly, monthly, quarterly, half yearly or yearly. 				The date present in this field applies to repayments of principal (for redemption type contracts), interest and any additional payment elements entered in the additional payment fields. However, contracts with principal redemption may initially repay only interest. In this case the start date for principal redemptions is held in the REDEM.START.DATE field. Once this redemption start date has been reached the repayments of principal continue at the frequency defined in this field. 				The repayment frequency can be changed any time during the life of the contract. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date/frequency code format. (mandatory input) 				Frequency of repayments must be either weekly, monthly, quarterly, half yearly or yearly. The date of the next repayment must match the day portion of the frequency code unless both dates are month end dates. The date of the first repayment must be greater than the value date of the contract.				Term change not allowed with repayment date change or repayment frequency change.				Maturity date can be changed along with repayment date change or repayment frequency change.				Maturity date change, repayment amount change and repayment frequency change not allowed together.				Principal increases not allowed along with repayment date change or repayment frequency change.				RECALC.CURR.AMT cannot be No when repayment date change or repayment frequency change.		.</p>
        <p>RESIDUAL.PRINCIPAL</p>
        <p>Defines the remaining amount at the maturity date on an annuity or linear mortgage. 				This field is used for banks which enter into mortgage contracts with their clients whereby the annuity payment is not sufficient to repay the full amount of the loan by the specified maturity. In these cases a residual principal amount is agreed with the customer. This residual principal must then be paid by the client on the maturity date of the contract. 				The residual principal amount is agreed prior to the loan being granted and cannot be modified or altered during the life of the contract. Similarly a residual amount cannot be added to an existing loan. It is not possible to extend the loan beyond the maturity date in order to allow the client to repay the residual amount over a period of time. Any such arrangement will be considered as a second loan contract. 				On the maturity date of the loan the residual amount will be debited to the loan repayment account. This is raised as a separate entry to the normal repayment on that date. 				A residual principal amount is only allowed for ANNUITY or LINEAR mortgages. 				The calculation of the repayment amount has to be modified to take into account the residual principal amount. The formulae used in the calculation are : 				(i) Annuity contracts n (P - R) * I * (1 + I) ANNUITY = ------------------------ + (R * I) n (1 + I) - 1 				 where P =Principal Amount i.e full amount of loan R = Residual Principal Amount I = Periodic Interest Rate i.e annual rate/no. of repayments in year. n = Total number of repayments. 				(ii) Linear contracts : P - R LINEAR = ----- n 				 where P, R and n are as above 				The normal calculations used when a residual principal amount is not present may be found in the details for REPAYMENT.AMOUNT. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 18 type AMT (standard amount format) characters plus a decimal point. (Optional input)				Input only allowed for ANNUITY and LINEAR contract types				Input only allowed prior to the contract value date, i.e the date in the VALUE.DATE. In other words input is only allowed fro 'FWD' status contracts.				Input must be less than the total principal amount i.e the amount in the PRINCIPAL.AMOUNT.		.</p>
        <p>STMT.NO</p>
        <p>STMT.NO 		.</p>
        <p>TAX.E.I</p>
        <p>Defines if any Tax is applied on the contract.				Allowed Inputs are :				'N' - No Tax ( Default Value) 				'E' - Annuity amount excludes Tax component				'I' - Annuity amount includes Tax component				If Null or 'N' is input in this field, then the other tax related fields are made no input.								</p>
        <p>Validation Rules</p>
        <p>								Option 'I' is allowed only for Annuity type of contracts.				Once input and authorised, this field cannot be changed.				In the unauthorised stage, if the value in this field is changed from 'I' to 'E' or 'E' or 'I', then an override will be generated explaining the same.				Also refer to help text for field CONTRACT.TYPE, for product switch processing rules.						.</p>
        <p>TAX.KEY</p>
        <p>This field will contain any valid record in the TAX file.This is used to calculate the Tax amounts by picking up the relevant information from the TAX file.				No accruals are performed for the taxation.				</p>
        <p>Validation Rules</p>
        <p>								A Valid record in TAX file.				Once input and authorised, the value in this field cannot be changed.		.</p>
        <p>TAX.RATE</p>
        <p>This field holds the annual rate with which Tax is calculated in the contract.This rate is applied on either the Interest, Principal or both depending upon the field TAX.ON.				The rate is picked up from the TAX record which is determined by the TAX.TYPE.KEY, TAX.KEY and APPLIED.TAX.KEY fields in the contract.Currently, only Flat rates of Tax are applicable in mortgages.				This field is a NOINPUT field and is updated by the system during the validation of the transaction.				</p>
        <p>Validation Rules</p>
        <p>								A Noinput field.		.</p>
        <p>TAX.TYPE.KEY</p>
        <p>This field is used to determine the Tax code to be applied on the contract depending on the TAX.TYPE.CONDITION and the CUSTOMER.CHARGE files.This field contains a valid record in TAX.TYPE.CONDITION.The system then reads the CUSTOMER.CHARGE table and picks up the relevant tax record.When both the Tax Type Key and Tax key are given, the tax key determined through the Tax Type key is used for the calculation of Tax on the contract and it is updated into a field called APPLIED.TAX.KEY.The value entered in the TAX.KEY field is not overwritten by this value.				Validation Rule								A Valid TAX.TYPE.CONDITION record.		.</p>
        <p>TERM.PRIORITY</p>
        <p>The field is used to determine if the original maturity date has to be retained while recalculating the redemption amount consequent to any amendments to the contract. If the field has been set to YES, then the original maturity date is retained and the redemption amount is recalculated. The number of terms for recalculation is arrived at by cycling the schedules based on the redemption frequency till the closest date to the original maturity date. The maturity date closest to the original maturity date would then become the new maturity date. 				If the field is set to NO then the amount in the repayment amount field or in the new repayment amount field is retained and the contract schedules are built till the date the balance becomes zero or less than the repayment amount. In effect the maturity date may be extended or shortened depending upon the amount defined.				</p>
        <p>Validation Rules</p>
        <p>								Input can be YES or NO.				Default NULL. 				Also refer to helptext for field CONTRACT.TYPE for product switching rules.		.</p>
        <p>TERM</p>
        <p>TERM				Defines the life of the contract in months or weeks. It is used in conjunction with the REDEM.START.DATE field to define the final maturity date of the contract. 				This field determines the duration of the contract in months or weeks from the redemption start date which is entered in REDEM.START.DATE. These two fields define the maturity date of the contract and are used during validation to calculate this date which is held in the ORIGINAL.MAT.DATE field. 				The contract term is recorded in this field as a number of months or weeks. However, to simplify input a number of years followed by a "Y" may be entered if the term is a whole number of years. If no input is made a value of 360 (30 years will be defaulted.) 				In addition to calculating the maturity date, the contract term will determine the total number of repayments to be made. This is calculated by dividing the value entered in this field by the repayment frequency entered in field REPAYMENT.DATE. It therefore follows that the term must be exactly divisible by the repayment frequency. In the case of annuity and linear repayment schemes this value will then be used to calculate the periodic repayment amount. If an interest only period is defined subsequent to the redemption start date, then the interest only period will also be treated as a term. In case of Annuity and Linear contracts the repayment amount is initially calculated by taking the original value in the term field. After the interest only period the repayment amount is recalculated on the outstanding principal amount for the balance term.				The term of the contract can if required be changed at any time till the frequency of the contract is changed, although such a change will require an override. In such an event the maturity date will be recalculated automatically along with the theoretical repayment amount in the case of annuity and linear contracts. After a frequency change, no input would be allowed in this field. Any change to the tenor of the contract after a frequency change would be possible through change in the Original Mat Date field.				</p>
        <p>Validation Rules</p>
        <p>				1 - 3 numeric characters or 1 - 2 numeric characters and a "Y". (mandatory input) Input must be a positive whole number. Input must be divisible by the repayment frequency. An override will be required if this field is changed after the contract has been authorised. 		.</p>
        <p>THEORETICAL.AMOUNT</p>
        <p>Defines the minimum repayment amount required to fully repay the loan within the term based on the current contract parameters. This field is only used by the ANNUITY and LINEAR contracts 				This field is maintained by the system and is only used for redemption type contracts, ie LINEAR and ANNUITY. It contains the minimum periodic repayment amount required to repay the loan at the end of the contract term. This amount is calculated at validation and is based on the present contract details, it does not take into account any future changes in interest rates or actual repayment amounts. Details on how this amount is calculated can be found in the Helptext for the REPAYMENT.AMOUNT field. 				If an early redemption is made on a LINEAR contract via the MG.PAYMENT routine then this amount will be automatically recalculated. Similarly, if an interest rate change or, an early redemption, is made on an ANNUITY contract, backdated into a prior repayment period then this amount will again be automatically recalculated. However, if such a change is made on an annuity contract in the current repayment period then the annuity cannot be recalculated due to the differing principal amounts and rates for that period. In this case a new theoretical amount is calculated for the following period and inserted in the "new repay fields" along with the date on which it becomes effective. 				Any interest rate changes on ANNUITY contracts with an effective date in a future repayment period will also result in the calculation of a new theoretical amount. This will be recorded in the "new repay fields" along with an effective date for the new amount. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 19 numeric characters. This is a NOINPUT field.				This is a NOINPUT field.				An override will be required if this amount is recalculated automatically due to changes in other contract parameters.				If any contract parameters are changed in the current repayment period on an annuity contract and the repayment amount cannot be calculated then an override message will be given.		.</p>
        <p>TOTAL.CHARGE</p>
        <p>Identifies the total amount of charges applied on the contract.				</p>
        <p>Validation Rules</p>
        <p>								System generated, No input field.						.</p>
        <p>TOTAL.CHG.TAX</p>
        <p>Identifies the total amount of tax on charges applied on the contract.				</p>
        <p>Validation Rules</p>
        <p>								System generated, No input field.						.</p>
        <p>TOTAL.PRINCIPAL</p>
        <p>Specifies the total principal amount of this contract and all associated contracts entered in the ASSOC.CONTRACT field. 				This field is only used if a contract has other contracts associated with it, ie one or more other contract numbers have been entered in the ASSOC CONTRACT field. This field will then contain the total of all principal amounts on the associated contracts, plus the principal on the current contract. 				The amount in this field is similar to that in the PRINCIPAL AMOUNT field, in that it represents the total of the PRINCIPAL AMOUNT fields on the associated contracts. This field does not, therefore, represent the total of the outstanding amounts on all associated contracts. 				This field is filled automatically during validation of the "main" contract. 				</p>
        <p>Validation Rules</p>
        <p>				1 - 18 numeric characters. This is a NOINPUT field.				This is a NOINPUT field.		.</p>
        <p>USER.DEF.INT</p>
        <p>For SAVINGS and NONREDEM contracts, the can mark this field as ?YES? for interest smoothing functionality. If marked "YES" the interest amount in the field REPAYMENT.AMOUNT can be changed to to a specific payment amount.				Optional field and will only accept YES				Input allowed only for NONREDEM and SAVINGS contracts		.</p>
        <p>UP.TO.PRINCIPAL</p>
        <p>Allows banded interest rates to be applied on the principal amount of the loan. This field is used to specify the bands applicable. 				This field together with the interest rate fields below allow for banded interest rates to be specified for the contract. Different interest rates can be applied to portions of the principal amount lent. The amount specified here will define a band up to which interest rates specified below will be applied. 				Example 1: PRINCIPAL AMOUNT : 140,000 GBP 				UP TO PRINCIPAL 100,000 120,000 FIXED VAR IND FIXED VARIABLE VARIABLE INTEREST RATE 10% 11% 11.25% INTEREST KEY 1GBP 1GBP INTEREST SPREAD 0.5% 0.75% 				In this example the amount borrowed is 140,000 GBP. Different interest rates apply to different portions of this amount. The first 100,000 accrues interest at 10%, the next 20,000 at 11%, and the amount above 120,000 (ie 20,000) at 11.25%. 				The lowest band is on a fixed rate basis, the remaining two bands being variable. Both variable bands are linked to the same interest key and the current rate applicable on that key is 10.5%. A different spread is applied to the two variable bands which accounts for the difference in the applied rate. 				</p>
        <p>Validation Rules</p>
        <p>								1 - 18 numeric characters. Multi-value field associated with fields FIXED.VAR.IND, INTEREST.RATE, INTEREST.KEY and INTEREST.SPREAD.				The amount entered cannot exceed the principal amount lent on the mortgage.				Each multi-value amount must be in ascending sequence.				Can only be applied on LINEAR and NON-REDEMPTION type mortgages.				The last multi-value in the set must be blank.		.</p>
        <p>VALUE.DATE</p>
        <p>Specifies the value date of the contract. 				The date held in this field represents the date on which the principal amount of the contract is transferred to the customer. It is also the date on which interest accruals commence on the outstanding balance of the contract. 				This date may be entered as either a future date, the current date or a date in the past. If forward dated then the contract status will be FWD until the value date is reached, at which time, the principal amount will be drawn down and the contract status changed to CUR. An input of a null value will result in the current date being defaulted. The value date may be changed at any time whilst the contract status is FWD. 				If backdated or 'today' dated then the contract will be drawn down, on-line, at authorization and the contract status set to CUR. Also, if backdated into a prior month, interest will be accrued on-line up to the end of the previous month. 				Input of a non working day will require an override. 				</p>
        <p>Validation Rules</p>
        <p>				Standard date format. (mandatory input)				Must be after the date input to the CONTRACT.DATE field.				Input not allowed once the contract status has become CUR.				An override will be required if this date is backdated.				An override will be required if this date is a non working day.		.</p>
        <p>NEW.TERM</p>
        <p>Holds the actual No of repayment periods between repayment date and the maturity of the contract		.</p>
        <p>SECTOR</p>
        <p>Jdescriptor field		.</p>
        <p>INDUSTRY</p>
        <p>Jdescriptor field		.</p>
        <p>TARGET</p>
        <p>Jdescriptor field		.</p>
        <p>RESIDENCE</p>
        <p>Jdescriptor field		.</p>
        <p>SOURCE.ID</p>
        <p>Jdescriptor field		.</p>
        <p>PRODCCY</p>
        <p>Jdescriptor field		.</p>
        <p>CUSTOMER.NO</p>
        <p>Jdescriptor field		.</p>
        <p>PRODCAT</p>
        <p>Jdescriptor field		.</p>
        <p>ACCOUNT.OFFICER</p>
        <p>Jdescriptor field		.</p>
        <p>CONV.APPLICATION</p>
        <p>Jdescriptor field		.</p>
        <p>CONVERTED.DATE</p>
        <p>Jdescriptor field		.</p>
        <p>MG.PAYMENT.IDS</p>
        <p>Jdescriptor field		.</p>
        <p>FWD.BWD</p>
        <p>This field is to indicate whether the cycling of schedules need to consider holiday definition or not.				 Values allowed - FWD,BWD,FSM,CAL				FWD – When the cycled date is a holiday, cycle the schedule dates to the next working date.BWD – When the cycled date is a holiday, cycle the schedule dates to the last working date.FSM – When the cycled date is a holiday, cycle the schedule dates to the next working date. If the next working date happens to be in the next month, re-track backwards and cycle the schedule date to the last working date in the same month.CAL – Do not consider holiday definition. Default value 		)</p>
    </desc>
</t>
<t>
<field>ACCOUNT.OFFICER</field>
<desc>
            <p>Jdescriptor field</p>
        </desc>
</t>
<t>
<field>ADD.AMOUNT</field>
<desc>
            <p>Contains the periodic payment amount for the additional payment type defined in field ADD.PAY.TYPE. </p>
            <p>If an additional payment type has been defined in ADD.PAY.TYPE field then this field contains the periodic payment amount for that type. </p>
            <p>If an additional type has been defined, then a value must be input in this field. However, in some cases this amount may be defaulted. This depends on the definition of the associated additional type on the MG.PARAMETER table.  It is possible to define an additional type with automatic calculation of the payment amount. In this case the amount is calculated on a savings scheme basis. The resultant amount, if paid for the life of the contract, at the same frequency as the repayment of principal, and invested at the same rate of interest as the loan, will result in a fund sufficient to repay the loan at maturity. </p>
            <p>It should be noted that for those types defined for automatic calculation this field will be recalculated each time the contract is amended prior to contract draw. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1 - 19 numeric characters Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1 (mandatory input if ADD.PAY.TYPE entered, otherwise not allowed - default value may be defined on the MG.PARAMETER table.)</p>
            <p>Input mandatory if an additional payment type has been entered in the associated value of field ADD.PAY.TYPE, and the type is not defined for auto calculation on the MG.PARAMETER table.</p>
        </desc>
</t>
<t>
<field>ADD.CR.ACCOUNT</field>
<desc>
            <p>Identifies the account which is to be credited with the additional payment amount entered in the associated value of ADD.PAY.AMOUNT field. </p>
            <p>Whenever a repayment of an additional payment type is made, two accounting entries will be raised. The first is debited to the contract repayment account defined in the MORTGAGE.ACCOUNT field. The second, a credit entry, will be debited to the account entered in this field. </p>
            <p>A default value for this field may be defined on the MG.PARAMETER table for each additional payment type available. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Standard account number format or 3 - 10 alphanumeric account mnemonic. Multi-valued field associated with fields ADD.PAY.TYPE to ADD.USER.REF.1. (Input mandatory if ADD.PAY.TYPE entered, otherwise not allowed - default value on MG.PARAMETER table)</p>
            <p>Input mandatory if a value has been entered in the associated value of the ADD.PAY.TYPE field, and no default value has been defined on the MG.PARAMETER table.</p>
            <p>An override will be required if the customer of the account entered is not the third party entered in the associated value of the ADD.THIRD.PARTY field, or the customer of the loan.</p>
        </desc>
</t>
</menu>
</t24help>

