<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>SE</product>
<table>SEAT.SCRIPTS</table>
</header>
<overview>
<ovdesc>

            <p>SEAT.SCRIPTS is the application that the user would use to define a set of test cases. The advantage of having the test cases in the form of scripts is enormous. Scripting the test cases Facilitates various end-use of testing viz. Integration testing, Maintenance testing, Unit testing, Regression testing etc. The user can group various related scripts so that the same script can be re-used in different sequence for a different end use.</p>
            <p />
            <p>   Scripting the test cases reduces the manual intervention to a sizeable level. The scripts can be grouped based on various factors such as the product to which it belongs, the functionality, the application used etc.</p>
            <p />
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>SCRIPT.SOURCE</field>
<desc>
            <p>SAR/CSS/TTS reference. For information only . Up to 35 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed .</p>
        </desc>
</t>
<t>
<field>VERSION</field>
<desc>
            <p>The OFS.VERSION, which would be used in the OFS message. Hard coded to default ‘SEAT’ as the version name. However, the user can modify the version.</p>
            <p>   Checks against availability of a similar Version record.</p>
            <p>   Useful to load scripts with different versions (and possibly different version routines or Automatic field defaults) for different static set-ups. Up to 35 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed</p>
            <p />
        </desc>
</t>
<t>
<field>SCRIPT.ID</field>
<desc>
            <p>ID of the respective script.ID would be ‘SCRPT’ : YY : Jul date (of the system date (not bank date)) : 6 digit serial No OR  ‘SCRPT’ : YY : Jul date (of the system date (not bank date)) : 6 digit serial No: 2 digit sequence no.</p>
            <p>   (E.g. -- SCRPT: 06 : 064 : 000001 OR SCRPT: 06 : 064 : 000001 : 01</p>
            <p />
        </desc>
</t>
<t>
<field>PRODUCT.CODE</field>
<desc>
            <p>The Product code to which the Application belongs.For Ex Sec.Trade belongs to SC. No input field, Defaulted by the system.</p>
            <p />
        </desc>
</t>
<t>
<field>USER</field>
<desc>
            <p>A valid USER id, the name in which the transaction will be Input/Authorise/Reverse/Amend etc. No input field. </p>
        </desc>
</t>
<t>
<field>IO.ANALYSIS</field>
<desc>
            <p>Help Text for this field is unavailable.  Please refer to the T24 User Guides for further information.</p>
        </desc>
</t>
<t>
<field>GENERATE.ERROR</field>
<desc>
            <p>New field added to define a script that is supposed to fail. Depending on the value of the OVERALL.RESULT variable and the value in GENERATE.ERROR field, the SEAT test routines are called and this is also updated in the SEAT.RESULTS record. For example, if the GENERATE.ERROR has the value of "NO" and "OVERALL.RESULT" is "-1" then the SEAT test routines should not be called.Allowed values are “YES” and “NO”</p>
        </desc>
</t>
<t>
<field>CREATED.DATE</field>
<desc>
            <p>This field will get updated with the Date on which the Script was created and uploaded to the master. This is an Noinput field.</p>
        </desc>
</t>
<t>
<field>FUNCTION</field>
<desc>
            <p>Allowed values are ‘I”, “IA”, “D”, “R”, “RA” , "V" </p>
            <p>   ‘IA’ means Input and Authorise. System will generate 2 OFS messages, one for input and the next one for Authorisation. Same applies to ‘RA’ . Mandatory field . </p>
            <p />
        </desc>
</t>
<t>
<field>DEFINE.ERROR</field>
<desc>
            <p>New field added to define error messages/EB.ERROR ID. This field is used to define an error message or the key to an EB.ERROR record. Check is done during the script upload to locate this error message in the OFS message that is returned and the SEAT.RESULTS record is updated with an error message accordingly.This field can have a maximum of 35 characters. </p>
        </desc>
</t>
<t>
<field>OVERRIDE</field>
<desc>
            <p>Contains details of any overrides applicable to this Script.</p>
        </desc>
</t>
<t>
<field>UPDATE.SCRPT.ID</field>
<desc>
            <p>This is the first associated multi-value field of UPDATE.APPL field. The UPDATE.SCRPT field will have the ID of the SEAT.SCRIPTS amendment record for the application defined in UPDATE.APPL, into which the correct transaction ID will be updated in the TXN.ID field.This field can have a maximum of 35 characters.</p>
        </desc>
</t>
<t>
<field>CREATED.BY</field>
<desc>
            <p>Name of the person who created the script.  Mandatory field and can have a maximum of 35 characters</p>
        </desc>
</t>
<t>
<field>TXN.ID</field>
<desc>
            <p>This can be anyone of the following formats:                                     </p>
            <p>   a) If an ID is given, the OFS message will be formed with this ID.  </p>
            <p>   b) If blank, OFS message would carry no ID implying that the system will generate next ID.   </p>
            <p>   c) Could be another script id * field.name, the system would read SEAT.RESULTS for that script, read  the transaction  generated by that script and read the value of the field name from the script.         </p>
            <p>   d) SCRIPT.ID*@ID . If the field value starts with a “SCRPT” string and “@ID” is found, then the SEAT.UPLOAD.SCRIPT would be   modified to read the SEAT.RESULTS for that script "-A", get the values of the transaction id of the originating script and return it as the FIELD.VALUE.  </p>
        </desc>
</t>
<t>
<field>DESCRIPT</field>
<desc>
            <p>Description of the purpose of the script. This should cover the very purpose for which this script is used for testing. Between 3 and 35 characters allowed, no special editing will be done.</p>
        </desc>
</t>
<t>
<field>SCRIPT.GROUP</field>
<desc>
            <p>The group to which Script belongs. Multiple groups facilitate easy selection for upload. To be defined in SEAT.SCRIPT.GROUP . Up to 16 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed.</p>
        </desc>
</t>
<t>
<field>SELECT.ROUTINE</field>
<desc>
            <p>@ROUTINE that can be attached. The upload service’s Record routine will call this User Exit, which typically used for modifying a script where the routine will read the original script and get the transaction ID.</p>
            <p>   Carries one input parameter—SCRIPT.ID which will return the TRANSACTION.ID.  Up to 35 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed. The routine should be attached prefixed with an @. Eg: @GET.SCRIPT.ID.</p>
            <p />
        </desc>
</t>
<t>
<field>FIELD.NAME</field>
<desc>
            <p>Fields, which hold the script in OFS Syntax. Refers to the field name and the field, multi-value or sub-value position. Up to 35 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed.</p>
        </desc>
</t>
<t>
<field>STATIC.SETUP</field>
<desc>
            <p>The SITE.NAME as appears on SPF. The script will be uploaded only when the value in this field matches the Site.Name in SPF. A Null value indicates that this check will not be done and the script will be uploaded in any account. This field can have a maximum of 32 characters</p>
            <p />
        </desc>
</t>
<t>
<field>SCRIPT.STATUS</field>
<desc>
            <p>ACTIVE_OBSOLETE_HOLD script. Only Active scripts would be chosen for upload. Mandatory field, upto 8 characters will be allowed. </p>
        </desc>
</t>
<t>
<field>FIELD.VALUE</field>
<desc>
            <p>Value for the associated field above.If mapping is for a ‘date’ field this field can hold +2C or –2W to denote as many calendar or working days forward or backward.</p>
            <p>   Also accepts the various common variables with a prefix of ‘!’ mark like LCCY, COMPANY and TODAY</p>
            <p />
        </desc>
</t>
<t>
<field>ALTERNATE.REF</field>
<desc>
            <p>Reference of alternate sources. Currently this is the DTL (Desktop Load) reference since the existing scripts are migrated from DTL system. This field can have a maximum of 35 characters</p>
        </desc>
</t>
<t>
<field>APPLICATION</field>
<desc>
            <p>The actual Application to which this input will be done. Mandatory field, upto 32 characters will be allowed. </p>
        </desc>
</t>
<t>
<field>APPROVED.BY</field>
<desc>
            <p>Name of the person who approve the script. This is a noinput field and is used for internal purpose.  </p>
        </desc>
</t>
<t>
<field>BASE.RELEASE</field>
<desc>
            <p>Release from when this Script is relevant. One of the selection criteria could be Base.Release . Up to 10 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed.</p>
        </desc>
</t>
<t>
<field>UPDATE.APPL</field>
<desc>
            <p>New associated multi-value field added to update the TXN.ID field in a child transaction when the id is not updated in the parent transaction but the parent transactions @ID is available in the child transaction.The UPDATE.APPL field will have the name of the application from which the transaction reference is to be read from. This field can have a maximum of 35 characters.</p>
        </desc>
</t>
<t>
<field>LAST.MODIFIED.DATE</field>
<desc>
            <p>This field will get updated with the Date on which the Script was modified and uploaded to the master. This is an Noinput field.</p>
        </desc>
</t>
<t>
<field>PRODUCT.GROUP</field>
<desc>
            <p>The product group to which this script belongs. Not necessarily the product group to which the Application belongs. To be defined in the table SEAT.PRODUCT.GROUP.</p>
            <p>   For Ex: If a FT is input by Securities team for Portfolio valuation purposes, then Product group would be ‘Securities’. Mandatory field, upto 25 characters will be allowed</p>
        </desc>
</t>
<t>
<field>UPD.APPL.FLD.IDEN</field>
<desc>
            <p>This is the second associated multi-value field of UPDATE.APPL field. The UPDATE.SCRPT.ID field is needed only in case of multiple images wherein a unique identifier needs to be specified in this file which will be unique among the available images. This field can have a maximum of 35 characters.</p>
        </desc>
</t>
<t>
<field>COMPANY.CODE</field>
<desc>
            <p>Company to which the transaction relates. OFS message will carry this company ID.  Up to 11 characters of input will be accepted, leading spaces, trailing spaces and duplicated embedded spaces will be removed.</p>
        </desc>
</t>
<t>
<field>MSG.FROM.FILE</field>
<desc>
            <p>This field will have the file name for Delivery/Swift/OFS.CLEARING types of Messages</p>
        </desc>
</t>
<t>
<field>TPR.FILE.NAME</field>
<desc>
            <p>This field holds the name of the TPR file, in which the script ID will be updated in SEAT.IN directory during upload.The ID of the TPR file name is the Dependent Sequence Number in the script id.That is Sequence number after hipen. </p>
            <p>  E.g., Consider the script "SCRPT07076000300-100", for this script the field TPF.FILE.NAME will hold the value as '100'.So that the scripts with the Sequence number 100 will be grouped the same tpr file in SEAT.IN directory.</p>
        </desc>
</t>
<t>
<field>FIELD.INPUT</field>
<desc>
            <p>YES_NO field to indicate if this field name and value should be carried to the OFS message. If this field is blank or NO, then the field will not be part of the OFS message.</p>
        </desc>
</t>
<t>
<field>SEAT.ID</field>
<desc>
            <p>ID of the SEAT record, which would be invoked when the script is uploaded. This can hold the scenario name or Application name based on the hierarchy. This field can be left blank also. This field can have a maximum of 60 characters. </p>
        </desc>
</t>
</menu>
</t24help>

