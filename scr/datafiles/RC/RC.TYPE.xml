<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>RC</product>
<table>RC.TYPE</table>
</header>
<overview>
<ovdesc>

        <p data-mc-conditions="FROMRELEASE.R13">Overview</p>
        <p data-mc-conditions="FROMRELEASE.R13">This table is used to define the core and local routines that will be called by the transaction cycler service to perform transaction specific processing. IT also provides a link to the RC.CONDITION table which defines the processing conditions for this type of transaction.</p>
    </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>@ID</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">Describes the type of transaction to process </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">A maximum of 35 characters may be used  </p>
    </desc>
</t>
<t>
<field>LOC.CAPTURE.RTN</field>
<desc>
        <p>Holds a local routine that can modify RC.  The routine must be in the form of "RC.CAPTURE".RC.TYPE.ID</p>
        <p>Validation Rules:</p>
        <p>Yes or No or Null</p>
    </desc>
</t>
<t>
<field>LOC.POST.PROCESS</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field defines whether a message specific API routine called by the cycler to perform processing after the transaction has completed.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core priority processor routine needs to be called. The routine name will be built up as "RC.POST.":RC.TYPE:".LOC" key</p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Optional input</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
    </desc>
</t>
<t>
<field>LOC.PRE.PROCESS</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field defines whether a specific local routine needs to be called to pre process a message. For example; to get the current due amount for transactions where the amount due is not fixed and can change with time.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core pre processor routine needs to be called. The routine name will be built up as "RC.PREP":RC.TYPE:".LOC" key</p>
        <p>
            <p data-mc-conditions="FROMRELEASE.R13">e.g. RC.PREP.AC.FIXED.LOC for fixed amounts such as charges  or debit interest against the settlement account</p>
        </p>
        <p>
            <p data-mc-conditions="FROMRELEASE.R13">RC.PREP.AA.DUE.LOC for overdue AA bill processing</p>
        </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Optional input</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
    </desc>
</t>
<t>
<field>LOC.PRIORITISE</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is used to define whether a message specific local routine called by the cycler to perform transaction grouping and sorting. For example to order and group AA bills for a particular arrangement based on AA product rules, e.g. combine all bills for a particular date and to sort by date order.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core priority processor routine needs to be called. The routine name will be built up as "RC.PRTY.":RC.TYPE:".LOC" key</p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Optional input</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
    </desc>
</t>
<t>
<field>LOCAL.REF</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">Local reference field(s) defined by the user. Identifies any additional element which has been defined locally to meet a particular requirement. </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation Rules</p>
        <p data-mc-conditions="FROMRELEASE.R13">Up to 35 Any characters as defined in the local table definition for this local reference field.</p>
        <p data-mc-conditions="FROMRELEASE.R13"> (Optional input. Multi-valued field). Optional or mandatory input according to the LOCAL.TABLE definition for this field.</p>
    </desc>
</t>
<t>
<field>POST.PROCESS</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field defines the message specific API routine called by the cycler to perform processing after the transaction has completed.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core priority processor routine needs to be called. The routine name will be built up as "RC.POST.":RC.TYPE key</p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Optional input </p>
    </desc>
</t>
<t>
<field>PRE.PROCESSOR</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is used to define whether a message specific core  routine needs to be called to pre process a message. For example to get the current due amount for a transaction, where the amount due is not fixed and can change with time.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core pre processor routine needs to be called.The routine name will be built up as "RC.PREP.":RC.TYPE key For example </p>
        <p>
            <p value="1" data-mc-conditions="FROMRELEASE.R13">RC.PREP.AC.FIXED for fixed amounts such as charges  or debit interest against the settlement account</p>
            <p value="2" data-mc-conditions="FROMRELEASE.R13">RC.PREP.AA.DUE for overdue AA bill processing</p>
        </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Optional input</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
    </desc>
</t>
<t>
<field>PRIORITISE</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field defines the message specific core routine called by the cycler to perform transaction grouping and sorting. For example; to order and group AA bills for a particular arrangement based on AA product rules, e.g. combine all bills for a particular date and to sort by date order.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core priority processor routine needs to be called. The routine name will be built up as "RC.PRTY.":RC.TYPE key. </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Optional input</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO Null</p>
    </desc>
</t>
<t>
<field>PROCESSOR</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field defines the message specific core routine called by the cycler to process the cycler transaction, or transactions if they are grouped. For example to settle all AA bills for a particular date, to to collect a flat amount of interest or charges due from a current account.</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES indicates that a core priority processor routine needs to be called. The routine name will be built up as "RC.PROC.":RC.TYPE key</p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Mandatory input</p>
        <p data-mc-conditions="FROMRELEASE.R13">YES /NO</p>
    </desc>
</t>
<t>
<field>RC.CONDITION</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is used to link the condition record which defines how the transaction is handled.</p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">Must be a valid record id from RC.CONDITION table </p>
    </desc>
</t>
<t>
<field>OVERRIDE</field>
<desc>
        <p>This is a multi valued field. </p>
        <p>Contains details of any override applicable to this record.</p>
        <p>
           <p>Validation Rules:</p>
        </p>
        <p> A maximum of 35 characters may be entered. This is a NOINPUT field.</p>
    </desc>
</t>
<t>
<field>RESERVED.02</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>RESERVED.03</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>RESERVED.04</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>RESERVED.05</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>RESERVED.06</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>RESERVED.07</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>RESERVED.08</field>
<desc>
        <p data-mc-conditions="FROMRELEASE.R13">This field is reserved for future use </p>
        <p data-mc-conditions="FROMRELEASE.R13">Validation rules </p>
        <p data-mc-conditions="FROMRELEASE.R13">No input field </p>
        <p data-mc-conditions="FROMRELEASE.R13">Reserved for future use </p>
    </desc>
</t>
<t>
<field>LOC.CAP.CHK.RTN</field>
<desc>
	<p>This field is to facilitate the application or local routines to decide if capture of a transaction is allowed or not</p>
	<p>YES/NO field</p>
	<p>optional</p>
	<p>When 'YES' during RC capture processing ,system would check if a local routine exists in the system </p>
	<p>If exists, then, call that routine to decide if the transaction is eligible for capture or not. </p>
	<p>If this returns CAPTURE.FLAG=FALSE, then, this would override core's capture flag and the transaction should not be captured</p>
	<p>When this is set to NO or null, no local capture check routine would be called</p>	        
</desc>
</t>
<t>
<field>PROC.PRE.CHK</field>
<desc>
	<p>This field is to specify a pre.check api which would be triggered before the processing happens to check if the transaction to be processed is still valid or not</p>
	<p>YES/NO field</p>
	<p>optional</p>
	<p>When 'YES' during retry procesing ,system would call this pre.check api in the system </p>
	<p>Transaction is processed based on the values returned by this api </p>
	<p>When this is set to NO or null, no pre check api routine would be called</p>	        
</desc>
</t>

</menu>
</t24help>

