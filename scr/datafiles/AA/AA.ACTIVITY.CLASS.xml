<?xml version="1.0" encoding="utf-8"?>
<t24help xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <header>
        <product>AA</product>
        <table>AA.ACTIVITY.CLASS</table>
    </header>
    <overview>
        <ovdesc>
            <p>• Each AA.ACTIVITY.CLASS record will define the list of Actions to be applied on the given list of property classes for a given process in the activity</p>
            <p/>
            <p>                  • Temenos would release AA.ACTIVITY.CLASS records for product lines and its property classes or the arrangement. Following are examples of some of AA.ACTIVITY.CLASS records,</p>
            <p>                         LENDING-NEW-ARRANGEMENT</p>
            <p>                         INTERNET.SERVICE-NEW-ARRANGEMENT</p>
            <p>                         LENDING-UPDATE-INTEREST</p>
            <p>                         INTERNET.SERVICE-UPDATE-PROTECTION.LIMIT</p>
            <p/>
            <p>                   • When properties are linked to AA.PRODUCT.GROUP, the system will generate AA.ACTIVITY records which are property specific named instances of AA.ACTIVITY.CLASS. </p>
            <p/>
            <p>                     For example when a record in AA.PRODUCT.GROUP for the product line, say LENDING, with following list of properties - LOANINT (Interest Property Class) and REPAYMENT (Payment Schedule Property Class) , is authorised, following AA.ACTIVITY records are created.</p>
            <p>                         LENDING-UPDATE-LOANINT</p>
            <p>                          LENDING-UPDATE-REPAYMENT</p>
            <p>                        • Hence an ACTIVITY definition will be linked to the ACTIVITY.CLASS. When the activity is triggered, the actions to process will be determined by referring to the activity class.</p>
            <p/>
        </ovdesc>
    </overview>
    <menu>
        <t>
            <field>CAN.USER.INP</field>
            <desc>
                <p>This field indicates whether "REVERSE"/"DELETE" function is allowed for this action. Some actions may not require these even though they may be triggered by user. These go through a special function called 'M' (Method call) and do not leave a trace of transaction but still do a process.</p>
                <p/>
                <p>                     Validation rules:</p>
                <p/>
                <p>                     YES or NO</p>
            </desc>
        </t>
        <t>
            <field>CLASS.ID</field>
            <desc>
                <p>This field represents the property class on which the said action would be performed.</p>
                <p/>
                <p>              System maintained(NOINPUT) field.</p>
            </desc>
        </t>
        <t>
            <field>DESCRIPTION</field>
            <desc>
                <p>This field describes the activity in generic terms and is used for enrichment.</p>
                <p/>
                <p>                       This field can be expanded to allow the User to enter the description of the ACTIVITY in various languages. Each expansion of the field will correspond to a new Language as defined in the LANGUAGE table (Ref: GENERAL TABLES), and will indicate to the User the Language in which the Description must be entered.</p>
                <p/>
                <p/>
                <p>                       Mandatory Field.</p>
                <p>                      Multi-language field</p>
                <p>                       Up to 35 type A (alphanumeric) characters. </p>
            </desc>
        </t>
        <t>
            <field>FULL.DESC</field>
            <desc>
                <p>This field provides a detailed description of the Activity. Mutiple lines may be stated about the activity.</p>
                <p/>
                <p/>
                <p/>
                <p>                       Mandatory Field.</p>
                <p>                       NOTES field allowing user to specify multiple lines</p>
                <p>                       Up to 50 type A (alphanumeric) characters. </p>
            </desc>
        </t>
        <t>
            <field>PROCESS.ID</field>
            <desc>
                <p>This field denotes the process that would be carried out in the activity. This field gets updated from the ID of the current record</p>
                <p>                   System maintained (NOINPUT) field.</p>
            </desc>
        </t>
        <t>
            <field>PRODUCT.LINE</field>
            <desc>
                <p>This field denotes the product line for which this activity is valid. This field gets updated from the ID of the current record.</p>
                <p/>
                <p>              System maintained(NOINPUT) field.</p>
            </desc>
        </t>
        <t>
            <field>PROPERTY.CLASS</field>
            <desc>
                <p>This field represents the property class on which activity could be triggered from.</p>
                <p/>
                <p>              System maintained(NOINPUT) field.</p>
            </desc>
        </t>
        <t>
            <field>RELATED.ACT.CLASS</field>
            <desc>
                <p>This field is used ONLY whilst simulating an Arrangement scenario and is used only for LENDING and DEPOSIT product lines at the moment.</p>
                <p/>
                <p/>
                <p>For example, when a NEW arrangement is to be simulated for 2 schedules, the schedules could be run only after the arrangement could be disbursed(either fully or partially). But, disbursement is always transaction driven and may not be captured using a AA.SIMULATION.CAPTURE application. To automatically trigger an activity after the current activity(stated in this ID), this field may be utilised. So, a LENDING-NEW-ARRANGEMENT would have LENDING-DISBURSE-TERM.AMOUNT as its RELATED.ACT.CLASS. Similarly, automatic repayments on DUEs may be triggered by using this field. The disbursement and repayments generally assume FULL disbursement and payment which may be altered at the AA.SIMULATION.RUNNER to simulate partial disbursements and payments.</p>
                <p/>
                <p/>
                <p/>
                <p>Only an activity belonging to this Activity class may be stated in the RELATED.ACTIVITY field of AA.ACTIVITY record. Temenos would release the related activity class that may be used with this activity and cannot be modified by the user.</p>
                <p/>
                <p>This field has NO relevance on activities triggered on Live arrangement.</p>
                <p/>
                <p/>
                <p/>
                <p>Validations:</p>
                <p/>
                <p>Should be a valid entry in AA.ACTIVITY.CLASS file.</p>
                <p/>
                <p>  Validation rules:</p>
                <p>  Should be a valid ID in AA.ACTIVITY.CLASS table.</p>
            </desc>
        </t>
        <t>
            <field>USED.FIELD</field>
            <desc>
                <p/>
                <p>        This field denotes the name of the fields available in the designer property class table defined in USED.PROP.CLASS.  For example if the USED.PROP.CLASS is defined as ACCOUNTING and the USED.FIELD as TXN.ACTIVITY, the current activity can be defined in TXN.ACTIVITY field of AA.PRD.DES.ACCOUNTING.</p>
            </desc>
        </t>
        <t>
            <field>USED.PROPCLASS</field>
            <desc>
                <p/>
                <p>        This field denotes the name of the property class in whose designer the current activity would be defined. For example if the USED.PROP.CLASS is defined as ACCOUNTING, then the current activity would be defined in the file AA.PRD.DES.ACCOUNTING. The property class defined should be part of the product line.</p>
            </desc>
        </t>
        <t>
            <field>ACTION</field>
            <desc>
                <p>This field denotes the actual processing that would be performed for this activity. </p>
                <p>                    For example, the UPDATE action on interest, might not only update the interest property condition record for the arrangement, might also recalculate the Payment schedule. </p>
                <p/>
                <p>                    Hence the UPDATE process of the activity may have multiple actions like:</p>
                <p>                     1. UPDATE on INTEREST class</p>
                <p>                     2. CALCULATE on PAYMENT.SCHEDULE class.</p>
                <p/>
                <p>                     Validation rules:</p>
                <p>                     Must be a valid ACTION from the corresponding AA.PROPERTY.CLASS record</p>
            </desc>
        </t>
        <t>
            <field>USER.INPUT</field>
            <desc>
                <p>This field indicates whether "Input" function is allowed for this action. Some actions may not require "Input"  function even though they may be triggered by user. These go through a special function called 'M' (Method call) and do not leave a trace of transaction but still do a process.</p>
                <p/>
                <p>                     Validation rules:</p>
                <p/>
                <p>                     YES or NO</p>
            </desc>
        </t>
        <t>
            <field>ACTIVITY.ID</field>
            <desc>
                <p>This field denotes the id of the activity class record.</p>
                <p/>
                <p>             Activities are performed on either the entire Arrangement (Ex. New Arrangement) or on a specific Property (like Change Principal Interest). Since Properties are user-defined, Temenos has specified the composition of each Activity as an Activity Class which targets either a Property Class or the entire Arrangement.</p>
                <p/>
                <p/>
            </desc>
        </t>
        <t>
            <field>ACTIVITY.TYPE</field>
            <desc>
                <p>This field indicates how the activity would be triggered and indicate the characteristic of this activity. More than one type indicates the activity would share the characteristic of all types specified.They are classified into the following types:</p>
                <p/>
                <p>                       ACCOUNTING - The activity deals with accounting entries and may require balances and allocation rules for them to  perform this activity correctly. </p>
                <p>                      ACCRUAL - The activity deals with accrual of interest. Activity of this type do not generate AA.ARRANGEMENT.ACTIVITY id everytime but still perform their functionality. They have specific AAA id and use the same everytime this activity is run</p>
                <p/>
                <p>               NORR - The activity will not trigger reversal / replay.  The activity would not be reversed / replayed by other activities but can be forcibly reversed by the user. </p>
                <p>               NOREPLAY - The activity would not be reversed / replayed by any other Activity. </p>
                <p>               NOREVERSE - The activity cannot be manually reversed by the user. </p>
                <p>               SCHEDULED - The activity can be executed as part of a scheduled COB job.(like MAKEDUE)</p>
                <p>               TRANSACTION - The activity is triggered by external transactions(like DISBURSE)</p>
                <p>               USER - The activity can be triggered manually by the user.</p>
                <p>               SECONDARY - The activity can be triggered as a SECONDARY activity.</p>
                <p>               SOD-PROCESS - The activity, when processed as a Scheduled activity could be run from the SOD process as well. If the option is not stated the activity would be executed only as part of COB.</p>
                <p>               NOLOG - Whenever activities are performed on an arrangement, they are recorded onto a file called AA.ACTIVITY.HISTORY. An option of NOLOG indicates that those activities need not be  recorded into Activity History.</p>
                <p>                 PRE.NOTICE  - This activity can be generate pre notice advice</p>
                <p>                 BUNDLE.ADJUST - Indicates, if a backdated activity belonging to this type is processed on a donor arrangement, system would check for bundle linkages(notional pooling) and would trigger  backdated events on Recipients as well to catch up with accruals lost or gained from this backdated event on donor.</p>
                <p/>
                <p/>
                <p>                     Validation rules:</p>
                <p/>
                <p>                     Valid inputs are ACCOUNTING, ACCRUAL, NORR, NOREPLAY, NOREVERSE, SCHEDULED, TRANSACTION, USER, PRE.NOTICE</p>
                <p>                    Can be multi-valued and more than one type may be stated.</p>
                <p>                    Duplicates not allowed.</p>
                <p>                    Maximum of 12 characters</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>ALERT.EVENT.TYPE</field>
            <desc>
                <p>This field holds a Valid EB.EVENT.TYPE reference for which alerts shall be raised from this Activity class,  if Alerts property is included in product and as per the subscription rules </p>
                <p/>
            </desc>
        </t>
        <t>
            <field>ATTRIBUTE</field>
            <desc>
                <p>This field can be used for classifying the activities. The list of classification can be defined in the EB.LOOKUP file for AA.ACTIVITY.ATTRIBUTE. AA.ACTIVITY records created out of these carry these attributes as well.</p>
                <p/>
                <p>     Validation rules:</p>
                <p/>
                <p>     Non Mandatory field.</p>
                <p>     Contents should be defined in EB.LOOKUP of AA.ACTIVITY.ATTRIBUTE.</p>
            </desc>
        </t>
        <t>
            <field>BATCH.NAME</field>
            <desc>
                <p>When ACTIVITY.TYPE contains SCHEDULED, the batch job in which the activity is to be run should be stated in this field. This field along with BATCH.SEQ determines when this activity(if scheduled) would be run during COB.</p>
                <p/>
                <p>             Validation rules:</p>
                <p>             Mandatory when ACTIVITY.TYPE contains SCHEDULED.</p>
                <p>             Should be a valid entry in BATCH.NEW.COMPANY.</p>
                <p>             Maximum of 35 Alphanumeric characters.</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>BATCH.SEQ</field>
            <desc>
                <p>The field assumes significance only when ACTIVITY.TYPE contains SCHEDULED. Several activities may be scheduled to be processed for an arrangement on the same date, the sequence the activities are performed in is important and this is defined as part of the ACTIVITY.CLASS definition.</p>
                <p/>
                <p>             Validation rules:</p>
                <p/>
                <p>             Mandatory when BATCH.NAME is specified</p>
                <p>             Valid only when ACTIVITY.TYPE is SCHEDULED.</p>
                <p>             Only Numeric characters allowed</p>
                <p>             Maximum of 3 characters.</p>
            </desc>
        </t>
        <t>
            <field>CAN.ACTION</field>
            <desc>
                <p>This field denotes the actual processing that would be performed for this activity during Cancellation(Reverse/Delete)</p>
                <p/>
                <p>     Validation rules:</p>
                <p>     Must be a valid ACTION from the corresponding AA.PROPERTY.CLASS record</p>
            </desc>
        </t>
        <t>
            <field>CAN.PROP.CLASS</field>
            <desc>
                <p>This field represents the property class on which activity could be triggered from during Reversal/Deletion ONLY. This field(if stated) would specify the order of executing the property class whilst performing those operations. If this field is not stated, the order of execution would be taken from PROPERTY.CLASS field(Bottom to Top order)</p>
                <p/>
                <p>              System maintained(NOINPUT) field.</p>
            </desc>
        </t>
    </menu>
</t24help>
