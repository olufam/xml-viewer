<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>PW</product>
<table>PW.PROCESS.DEFINITION</table>
</header>
<overview>
<ovdesc>

            <p>PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p />
            <p>       This table enables linking of different activities and workflow constructs into a logical process. This table defines the sequence of various activities in the process and their dependencies. It also defines the activities that get enabled based on the dynamic flow of the process.</p>
            <p />
            <p />
            <p>       An activity could be attached to a process as independent activity or dependant on the completion of a previous activity. Further, the activity could be further made rigid by making the triggering of activity conditional on an appropriate status of the previous activity.</p>
            <p />
            <p />
            <p>       An example could be in a process called LOAN, if charges are waived in an activity, then the activity that captures charges shall not be triggered as a part of the process. In case, the charges are not waived, then the activity that captures charges will be a part of the process.</p>
            <p />
            <p />
            <p>       Thus process definition helps in not only defining the activities to be a part of the process, but the sequence and the stage at which they have to appear in the process are defined.</p>
            <p />
            <p />
            <p>       Process definition also helps in identifying the activity and its status that can be construed as the completion of the process.</p>
            <p />
            <p />
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>EVAL.CONDITION</field>
<desc>
            <p />
            <p />
            <p>                 PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                 EVAL.CONDITION</p>
            <p>                 This field is used in conjunction with the the Loop (ROUTE.TO) and Switch(SWITCH) pattern constructs in the process definition. It can hold values from the EB.API application.</p>
            <p />
            <p>                 The”@ “symbol should be added with the EB.API id for ex.,@Route condition. This is a mandatory format for defining values in this field.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                 EVAL.CONDITION and EVAL.RULE are mutually exclusive fields.</p>
        </desc>
</t>
<t>
<field>PROCESS.CONSTR</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  PROCESS.CONSTR</p>
            <p>                  This field can hold values from the PATTERN.CONSTRUCT field. This is used to decide the process completion status.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  The format of PROCESS.CONSTRUCT should accept values in the format PATTERN.CONSTR_UNIQUE.NAME.</p>
            <p />
        </desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  DESCRIPTION</p>
            <p />
            <p>                  Described the PW.PROCESS.DEFINITION record and is used as the enrichment of the key.</p>
            <p />
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  Up to 35 Alphanumeric      characters.</p>
            <p />
            <p>                  Multi-valued field.</p>
        </desc>
</t>
<t>
<field>FLOW.ACT</field>
<desc>
            <p />
            <p />
            <p>                 PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                 FLOW.ACT</p>
            <p>                 The FLOW.ACT is used to define multiple activities to construct PARALLEL.FLOW in process.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                 This sub value field holds PW.ACTIVITY id values.</p>
            <p />
            <p>                 If the PATTERN.CONSTR field is set as PARALLEL.FLOW then the FLOW.ACT should be defined.</p>
        </desc>
</t>
<t>
<field>TIME.TRIGGER</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  TIME.TRIGGER</p>
            <p />
            <p />
            <p>          A facility whereby the status of an activity is evaluated by a tSA service as opposed to a user interaction on the process.  </p>
            <p />
            <p>          If this field is set to ‘YES’ then PW.ACTIVITY.TXN record corresponding to the PW.ACTIVITY will be selected by the job PW.TIME.TRIGGER ( in the service PW.MAPPING) for evaluating the status of the activity. </p>
            <p />
            <p>          If a PW.ACTIVITY.TXN record already exists for the Activity then the service checks to see if any time triggers have been reached and then invokes the PW Process-engine to re-evaluate the activity status otherwise creates the PW.ACTIVITY.TXN record for the Activity based on the conditions/rules specified.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>          This is a non-mandatory field.</p>
            <p />
            <p />
            <p>          Can either take values ‘YES’, ‘NO’ or BALNK.</p>
            <p />
            <p>          (NO and BLANK means the same.)</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>PW.DEF.ID</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  PW.DEF.ID @ID</p>
            <p />
            <p />
            <p>                  This is the ID of the PW.PROCESS.DEFINITION record.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  Up to 35 Alphanumeric      characters.</p>
            <p />
        </desc>
</t>
<t>
<field>SLA</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  SLA</p>
            <p>                  This field is used to define a SLA(Service Level Agreement) for the process.</p>
            <p />
            <p>                  INPUT only when SG product is installed otherwise NOINPUT.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                  Up to 35 alphanumeric characters.</p>
            <p>                  Must be a valid record from SG.SLA application.</p>
        </desc>
</t>
<t>
<field>PRE.REQ.ACT</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  PRE.REQ.ACT</p>
            <p />
            <p>                  This field is used to define a previous ACTIVITY that has to have run in this process before the </p>
            <p />
            <p>                  corresponding ACTIVITY (to the PRE.REQ.ACT) will appear on the process ENQUIRY and hence </p>
            <p />
            <p>                  be allowed to be executed.</p>
            <p />
            <p />
            <p>                  If no PRE.REQ.STAT or PRE.REQ.RULE has been defined along with this PRE.REQ.ACT then </p>
            <p />
            <p>                  the defined PRE.REQ.ACT must just have previously run and regardless of it&amp;#8217;s status, the </p>
            <p />
            <p>                  corresponding ACTIVITY will appear on the ENQUIRY. </p>
            <p />
            <p />
            <p>                         EG. </p>
            <p />
            <p />
            <p />
            <p>                  Field 4.1 Activity = CREATE.CUSTOMER </p>
            <p />
            <p />
            <p />
            <p>                  Field 5.1.1 Pre.Req.Activity = </p>
            <p />
            <p />
            <p />
            <p>                  Field 6.1.1 Pre.Req.Stat = </p>
            <p />
            <p />
            <p>                  Field 7.1.1 Pre.Req.Rule = </p>
            <p />
            <p />
            <p />
            <p />
            <p />
            <p>                  Field 4.2 Activity = CREATE.ACCOUNT </p>
            <p />
            <p />
            <p />
            <p>                  Field 5.2.1 Pre.Req.Activity = </p>
            <p />
            <p />
            <p />
            <p>                  Field 6.2.1 Pre.Req.Stat = </p>
            <p />
            <p />
            <p>                  Field 7.2.1 Pre.Req.Rule = </p>
            <p />
            <p />
            <p>                  CREATE.CUSTOMER must have run before a PW.ACTIVITY.TXN record is automatically created, </p>
            <p />
            <p>                  and therefore before the CREATE.ACOUNT activity will appear on the ENQUIRY.</p>
            <p />
            <p />
            <p>                  With the ability of including a PW.PROCESS.DEFINITION as an activity, this field now accepts a valid PW.PROCESS.DEFINITION Id well. When a PW.PROCESS.DEFINTION ID is specified then the value specified in the PRE.REQ.STATUS will be evaluated against the overall status of the embedded process.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p />
            <p>            Non-Mandatory field. </p>
            <p />
            <p />
            <p>            A PW.ACTIVITY Key can be linked to this field as usual. </p>
            <p />
            <p />
            <p>            If a PW.PROCESS.DEFINITION is specified as an pre-req-activity, then it should end with ‘.DEF’ to distinguish whether it’s a PW.ACTIVITY or nested Process definition Key.</p>
            <p />
            <p />
            <p>            The PW.ACTIVITY or PW.PROCESS.DEFINITON record must appear previously as an ACTIVITY on this PW.PROCESS.DEFINITION record.</p>
        </desc>
</t>
<t>
<field>PROCESS.XML</field>
<desc>
            <p>Contains the project name of the process model as defined in the plug-in user interface.</p>
        </desc>
</t>
<t>
<field>OVERRIDE</field>
<desc>
            <p />
            <p />
            <p>                 PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                 OVERRIDE</p>
            <p>                 This holds the override messages of PW.PROCESS.DEFINITION</p>
        </desc>
</t>
<t>
<field>DEF.DURATION</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  DEF.DURATION</p>
            <p />
            <p>                  Default duration of this entire process in definable units.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  1-3 numeric characters.</p>
            <p />
            <p>                  Mandatory field.</p>
        </desc>
</t>
<t>
<field>UNIQUE.NAME</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  UNIQUE.NAME</p>
            <p />
            <p />
            <p>                   Can be used when 2 or more identical ACTIVITY names are defined on the PW.PROCESS.DEFINITION and is used for Data Mapping, to differentiate between identical ACTIVITY records.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  Input now allowed if PW.PROCESS.DEFINITION is specified as an Activity.</p>
            <p />
            <p />
            <p />
        </desc>
</t>
<t>
<field>CASE.ACTIVITY</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  CASE.ACTIVITY</p>
            <p>                  This field is used define the activities to the SWITCH pattern construct in the process.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                  This sub value field holds an associated set of PW.ACTIVITY id values.</p>
            <p>                  If the PATTERN.CONSTR field is set as SWITCH then the CASE.ACTIVITY should be defined.  The CASE.ACTIVITY and DEF.ACTIVITY   are mutually inclusive fields.</p>
            <p>                  If the value returned in the specific argument by the corresponding EVAL.CONDITION/ EVAL.RULE corresponds to an existing  value of CASE.ACTIVITY, then it will be activated.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>DEF.ACTIVITY</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  DEF.ACTIVITY</p>
            <p>                  This field holds a PW.ACTIVITY id value.If the PATTERN.CONSTR field is set as SWITCH, then the DEF.ACTIVITY should be defined. The DEF.ACTIVITY and CASE.ACTIVITY are mutually inclusive fields.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  If the corresponding EVAL. CONDITION/ EVAL.RULE are evaluated to FALSE, then the DEF.ACTIVITY will be activated.</p>
            <p />
        </desc>
</t>
<t>
<field>PRE.REQ.EVAL</field>
<desc>
            <p>This can accept any valid keys of EB.RULE.GATEWAY. This is mutually exclusive with PRE.REQ.ACT, PRE.REQ.STAT and PRE.REQ.RULE multi-value field set.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>   0-35 characters</p>
            <p>   Optional field</p>
        </desc>
</t>
<t>
<field>PROCESS.STATUS.RULE</field>
<desc>
            <p>Links to a rule that if true will set the status of the process to that held in the associated ALLOWED.STATUS.</p>
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p>   Input must have an existing code on PW.TRANSITION</p>
        </desc>
</t>
<t>
<field>EVAL.RULE</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  EVAL.RULE</p>
            <p>                  This field is used in conjunction with the the Loop (ROUTE.TO) and Switch(SWITCH) pattern constructs in the process definition. It can hold values from the EB.RULE.GATEWAY application.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  EVAL. CONDITION and EVAL.RULE are mutually exclusive fields.</p>
        </desc>
</t>
<t>
<field>OPERATION</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  OPERATION</p>
            <p />
            <p />
            <p>                  Flag to say whether we need to 'AND' or 'OR'  the pre - requisites specified.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>           This is a non-mandatory field.</p>
            <p />
            <p>           Can either take values ‘AND’, ‘OR’ or BLANK.</p>
            <p />
            <p>           Leaving the field blank or NULL defaults to 'AND' condition</p>
            <p />
            <p />
            <p />
        </desc>
</t>
<t>
<field>FOLLOW.ON.ACT</field>
<desc>
            <p>             A facility where T24 automatically presents an input screen to a user without them directly</p>
            <p />
            <p>                  requesting it based on the definition of the activity within the workflow.  This would be optional </p>
            <p />
            <p>                  and would be required in two situations:</p>
            <p />
            <p />
            <p>                  1. When a PW.PROCESS record is created</p>
            <p />
            <p>                  2. When one activity reaches a certain status and a new activity is to be started.</p>
            <p />
            <p />
            <p>                  The idea is that we can automatically present successive screens which form a sequence of   activities in a process to the same user one after the other (assuming the last activity was successful) without the user having to reference the process enquiry.</p>
            <p />
            <p />
            <p>              Therefore the requirement is to define an activity as a “follow on activity” if:</p>
            <p />
            <p>              1.The necessary pre-requisites for the “follow on” activity are met.</p>
            <p />
            <p>              2.The Participant of the “follow on” activity is the same as the participant of the activity which has just invoked the “workflow engine”</p>
            <p />
            <p />
            <p>              In the case of a “follow-on” activity being the first activity in the process then there will be no pre requisite and we should check that the participant of the activity is the same and the creator of the process and the workflow engine has been invoked by the creation of a process and not the update of another activity.</p>
            <p />
            <p />
            <p>              If there is more than one activity ready to follow-on, then the first Activity ready to follow-on would be triggered as not more than one screen can be presented to the USER at the same time.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>           This is a non-mandatory field</p>
            <p />
            <p />
            <p>           Can either take values ‘YES’, ‘NO’ or BLANK.</p>
            <p />
            <p>           (NO and BLANK means the same.)</p>
            <p />
            <p />
            <p>           Set the flag to YES, to mark an Activity to be follow-on.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>PATTERN.CONSTR</field>
<desc>
            <p />
            <p />
            <p>                   PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                   PATTERN.CONSTR</p>
            <p>                   This field is used to define a specific workflow pattern construct.</p>
            <p>                   This is a mandatory field to implement a specific workflow pattern in the process. If the pattern construct is set up then an associated UNIQUE.NAME should be defined.</p>
            <p />
            <p>                   There are three pattern construct options like ROUTE.TO, PARALLEL.FLOW and SWITCH. </p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                   The ROUTE.TO pattern construct implements the structured loop pattern (repeat variant) in the process. The ROUTE.TO pattern construct cannot be defined as the first node in the process definition. The fields EVAL.CONDITION/EVAL.RULE ,ROUTE.TO.ACT,  ROUTE. ACT. STATUS  are mutually inclusive fields for implementing the ROUTE.TO pattern construct.</p>
            <p />
            <p>                  The PARALLEL.FLOW pattern construct implements the parallel split workflow pattern in the process. To construct the PARALLEL.FLOW pattern the field FLOW.ACT should be defined because the FLOW.ACT field is mutually inclusive with PARALLEL.FLOW.</p>
            <p />
            <p>                  The SWITCH pattern construct is used to implement the exclusive choice workflow pattern in the process. To construct the switch pattern in process the fields CASE.ACTIVITY and DEF.ACTIVITY should be defined because these are mutually inclusive fields for SWITCH pattern construct.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>PRE.REQ.STAT</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  PRE.REQ.STAT</p>
            <p />
            <p />
            <p>                  This is the Pre-requisite status that the corresponding PRE.REQ.ACT needs to be at in order for the PW.ACTIVITY.TXN record, for the corresponding ACTIVITY, to be automatically created and appear on the ENQUIRY to be executed. </p>
            <p />
            <p />
            <p />
            <p>                  If the status of the corresponding PRE.REQ.ACT does not equal what is defined in this PRE.REQ.STAT then the corresponding ACTIVITY defined will not appear on the ENQUIRY to be executed.</p>
            <p />
            <p />
            <p />
            <p>                  The PRE.REQ.STAT and PRE.REQ.RULE fields are mutually exclusive. </p>
            <p />
            <p>                  The PRE.REQ.STAT and PRE.REQ.RULE cannot be used to work together with the same PRE.REQ.ACT. A PRE.REQ.ACT is EITHER dependant on itself, or on a PRE.REQ.STAT or on a PRE.REQ.RULE.</p>
            <p />
            <p>                  The PRE.REQ.STAT here is dependant on the status from the PW.ACTIVITY.TXN record which is turn is worked out according to the STATUS.RULE field on the PW.ACTIVITY record of the PRE.REQ.ACT.</p>
            <p />
            <p />
            <p>                  EG. </p>
            <p />
            <p />
            <p>                  Field 4.1 Activity = CREATE.CUSTOMER</p>
            <p />
            <p />
            <p>                  Field 5.1.1 Pre.Req.Activity =</p>
            <p />
            <p />
            <p>                  Field 6.1.1 Pre.Req.Stat = </p>
            <p />
            <p>                  Field 7.1.1 Pre.Req.Rule =</p>
            <p />
            <p />
            <p />
            <p>                  Field 4.2 Activity = CREATE.ACCOUNT</p>
            <p />
            <p />
            <p>                  Field 5.2.1 Pre.Req.Activity =</p>
            <p />
            <p />
            <p>                  Field 6.2.1 Pre.Req.Stat = CUSTOMER.COMPLETE</p>
            <p />
            <p>                  Field 7.2.1 Pre.Req.Rule =</p>
            <p />
            <p />
            <p />
            <p>                  Until the CREATE.CUSTOMER PW.ACTIVITY.TXN record has a status of CUSTOMER.COMPLETE, the CREATE.ACCOUNT activity will not appear on the ENQUIRY in this process to be executed.</p>
            <p />
            <p />
            <p />
            <p>                  When the CREATE.CUSTOMER activity is run, the conditions attached to the CREATE.CUSTOMER PW.ACTIVITY record</p>
            <p />
            <p />
            <p>                  With the ability of including a PW.PROCESS.DEFINITION as an activity, this field now accepts a valid PW.PROCESS.DEFINITION Id well. When a PW.PROCESS.DEFINTION ID is specified then the value specified in the PRE.REQ.STATUS will be evaluated against the overall status of the embedded process.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p />
            <p>             Non-Mandatory field. </p>
            <p />
            <p />
            <p>             An PW.ACTIVITY Key can be linked to this field as usual. </p>
            <p />
            <p />
            <p>             If a PW.PROCESS.DEFINITION is specified as an pre-req-activity, then it should end with ‘.DEF’ to distinguish whether it’s a PW.ACTIVITY or nested Process </p>
            <p />
            <p />
            <p>             definition Key.</p>
            <p />
            <p />
            <p>             Since this field can take values either from PW.ACTIVITY or PW.PROCESS.DEFINITION the CHECKFILE validations have been removed.</p>
            <p />
            <p />
            <p>             The PW.ACTIVITY or PW.PROCESS.DEFINITON record must appear previously as an ACTIVITY on this PW.PROCESS.DEFINITION record.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>RECU.EVAL.COND</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  RECU.EVAL.COND</p>
            <p>                  This field is used to implement the recursive workflow pattern in process. This field holds the the EB.API id. Based on the boolean value(if TRUE) returned from the condition, the specific activity instance is repeated again recursively until the condition returns a value FALSE.</p>
            <p />
            <p>                  The”@ “symbol should be added with the EB.API id for ex.,@Route condition. This is a mandatory format.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  The RECU.EVAL.COND and RECU.EVAL.RULE are mutually exclusive fields.</p>
        </desc>
</t>
<t>
<field>ROUTE.ACT.STATUS</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  ROUTE.ACT.STATUS</p>
            <p>                  This field is used to define the status to be set for activity stage to which the process loops back.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                  ROUTE.TO.ACT  and  ROUTE. ACT. STATUS  are mutually inclusive fields.</p>
            <p />
            <p>                  The ROUTE.ACT.STATUS must be defined if the PATTERN.CONSTR field set as ROUTE.TO.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>CONSTR.STATUS</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  CONSTR.STATUS</p>
            <p>                  This field can hold values from the PW.STATUS field. This is used to determine the process completion status.</p>
            <p>                  The CONSTR.STATUS and ACTIVITY.STATUS are mutually exclusive fields.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  Input must have an existing code on PW.STATUS.</p>
        </desc>
</t>
<t>
<field>PROC.STAT.EVAL</field>
<desc>
            <p>This can accept any valid keys of EB.RULE.GATEWAY. This is mutually exclusive with ALLOWED.STATUS, PROCESS.ACTIVITY, ACTIVITY.STATUS adn PROCESS.STATUS.RULE multi-value field set.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>   0-35 characters</p>
            <p>   Optional field</p>
            <p />
        </desc>
</t>
<t>
<field>SHORT.DESC</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  SHORT.DESC</p>
            <p />
            <p>                  Describes the PW.PROCESS.DEFINITION record in an abbreviated format, which can be used for reporting purposes where space is limited.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  Up to 35 alphanumeric      characters.</p>
            <p />
            <p>                  Mandatory field.</p>
        </desc>
</t>
<t>
<field>PROCESS.COMPLETION.STATUS</field>
<desc>
            <p>       Defines the status which when reached means the process is complete.</p>
            <p />
            <p />
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p />
            <p />
            <p>           Input must have an existing code on PW.STATUS</p>
            <p />
        </desc>
</t>
<t>
<field>EB.MAPPING</field>
<desc>
            <p>       Specifies the mapping to perform on the current activity of the process.</p>
            <p />
            <p />
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p />
            <p />
            <p>             Input should have an entry on EB.MAPPING.SOURCE table.</p>
            <p>             Input not allowed when TARGET field in PW.ACTIVITY is an Enquiry</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>PROCESS.ACTIVITY</field>
<desc>
            <p>       Name of an activity on the process definition record.</p>
            <p />
            <p />
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p />
            <p />
            <p>            Must be an activity on this process</p>
            <p />
            <p />
            <p>            Input must have an existing code on PW.ACTIVITY</p>
            <p />
        </desc>
</t>
<t>
<field>ROUTE.TO.ACT</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  ROUTE.TO.ACT</p>
            <p>                  This field is used to define the activity stage in the process to which the process loops back upon encountering the ROUTE.TO pattern construct. </p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  If the value defined in ROUTE.TO.ACT activity has not been defined more than once in the process definition then ROUTE.TO.ACT should accept id values from the PW.ACTIVITY table.</p>
            <p />
            <p>                  If the value defined in ROUTE.TO.ACT activity has been defined more than once in the process definition then ROUTE.TO.ACT should accep values in the format PW.ACTIVITY_UNIQUE.NAME where UNIQUE.NAME corresponds to the specific instance of the PW.ACTIVITY.</p>
        </desc>
</t>
<t>
<field>PRE.REQ.RULE</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  PRE.REQ.RULE</p>
            <p />
            <p />
            <p>                  Pre-requisites rule associated with an Activity</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                  A valid PW.TRANSITION key.</p>
            <p />
            <p />
            <p />
        </desc>
</t>
<t>
<field>PRE.REQ.CONSTR</field>
<desc>
            <p />
            <p />
            <p>                 PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                 PRE.REQ.CONSTR</p>
            <p>                 This field is used to define a previous CONSTRUCT  that has to have run in this process before the corresponding ACTIVITY/ CONSTRUCT (to the PRE.REQ.CONSTR) will be allowed to be executed.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  The format of PRE REQ CONSTRUCT value is PATTERN.CONSTR_UNIQUE.NAME (Ex: SWITCH_ONE where SWITCH is a workflow pattern construct and ONE corresponds to the UNIQUE.NAME defined in this construct). This is a mandatory format.</p>
            <p />
        </desc>
</t>
<t>
<field>RECU.EVAL.RULE</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  RECU.EVAL.RULE</p>
            <p>                  This field is used to implement the recursive workflow pattern in process. This field holds the the EB.API id. Based on the boolean value(if TRUE) returned from the condition, the specific activity instance is repeated again recursively until the condition returns a value FALSE. It can hold values from the EB.RULE.GATEWAY application.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>                  The RECU.EVAL.COND and RECU.EVAL.RULE are mutually exclusive fields.</p>
        </desc>
</t>
<t>
<field>OWNER</field>
<desc>
            <p>       Specifies the user(s) who is/are privileged to execute the current process</p>
            <p />
            <p />
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p />
            <p />
            <p>        Input must have an existing code on PW.PARTICIPANT</p>
            <p />
        </desc>
</t>
<t>
<field>ACTIVITY</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p />
            <p>                  ACTIVITY</p>
            <p />
            <p />
            <p>                  Used to set up PW.ACTIVITY records in the logical business order or flow the user requires the </p>
            <p />
            <p>                  PW.ACTIVITYs to be displayed and consequently executed in.</p>
            <p />
            <p>                  Usually the first ACTIVITY does not contain PRE.REQ.ACT, PRE.REQ.STAT OR   </p>
            <p />
            <p>                  PRE.REQ.RULEs as there is no previous activity in this process to base these pre-requisites on.</p>
            <p />
            <p />
            <p>                  Within the range of processes that exist within any organisations there are a number of “activity </p>
            <p />
            <p>                  sequences” which are common across many processes. </p>
            <p />
            <p />
            <p>                  Therefore it is possible to create these types of recurring activity sequences as processes </p>
            <p />
            <p>                  in their own right which can then be embedded or nested within an overall process. Therefore we  </p>
            <p />
            <p>                  have the ability to include a PW.PROCESS.DEFINITION as an activity within another </p>
            <p />
            <p>                  PW.PROCESS.DEFINITION record (i.e nesting a PW.PROCESS.DEFINTION within another)</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p />
            <p>                  A PW.ACTIVITY Key can be linked to this field as usual. </p>
            <p />
            <p />
            <p>                  If a PW.PROCESS.DEFINITION is specified as an activity, then it should end with ‘.DEF’ to  </p>
            <p />
            <p>                  distinguish whether it’s a PW.ACTIVITY or nested Process definition Key.</p>
            <p />
            <p />
            <p>                  Since this field can take values either from PW.ACTIVITY or PW.PROCESS.DEFINITION the  </p>
            <p />
            <p>                  CHECKFILE validations has been removed.</p>
            <p />
        </desc>
</t>
<t>
<field>ACTIVITY.OWNER</field>
<desc>
            <p />
            <p />
            <p>                  PW.PROCESS.DEFINITION</p>
            <p />
            <p>                  ACTIVITY OWNER</p>
            <p />
            <p />
            <p>                  DESCRIPTION</p>
            <p />
            <p>                  Specifies the user(s) who is/are privileged to      execute this activity.</p>
            <p />
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p />
            <p>                   Input must have a record in PW.PARTICIPANT application.</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>ACTIVITY.STATUS</field>
<desc>
            <p>       When the above activity reaches this status then the process will be assigned the </p>
            <p />
            <p>             status of the associated ALLOWED.STATUS field</p>
            <p />
            <p />
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p />
            <p />
            <p>        Must be an allowed status for the activity as defined on the PW.ACTIVITY record </p>
            <p />
            <p />
            <p>        Input must have an existing code on PW.STATUS</p>
            <p />
        </desc>
</t>
<t>
<field>ALLOWED.STATUS</field>
<desc>
            <p>       Defines the statuses that can be assigned to the process.       </p>
            <p />
            <p />
            <p>
                <p>
                    <p>Validation Rules:</p>:</p>
            </p>
            <p />
            <p />
            <p>            Any completions statuses as defined in the prior field must appear here before any </p>
            <p />
            <p>            other non completion statuses.</p>
            <p />
            <p />
            <p>           Input must have an existing code on PW.STATUS</p>
            <p />
        </desc>
</t>
</menu>
</t24help>

