<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>DE</product>
<table>DE.FORMAT.TEMPLATE</table>
</header>
<overview>
<ovdesc>

            <p>Using DE.FORMAT.TEMPLATE, Delivery can hand message data to a Windows application, such as Word, so that the formatting and printing of the document is done outside of Delivery, in Word, for example.  This means that all the functionality of Word is available, giving greatly enhanced formatting capabilities, e.g. multiple fonts and styles, headers and trailers, watermarks, inclusion of graphics and pictures, etc. This is achieved by using WordLink with PRINT.SERVER utility that is compatible with DESKTOP tool.</p>
            <p>DE.FORMAT.TEMPLATE is used to specify all the data required to produce each type of delivery message.  The record can be populated from an existing DE.FORMAT.PRINT record, from a DE.MESSAGE record, or can be entered manually.  The record can contain </p>
            <p>     Fields contained in DE.MESSAGE (entered in FIELD) </p>
            <p>     text (entered in TEXT) </p>
            <p>     keywords, e.g. TO.ADDRESS, DATE (entered in FIELD) </p>
            <p>     fields previously output, e.g. a converted field or a field which may </p>
            <p>     or may not contain data dependent upon another field (entered in      FIELD) </p>
            <p>Each field/text is assigned a DATA.NAME which can either be entered or defaulted.  The data name is the name of the field when it is accessed in Word. </p>
            <p>Fields can be converted, masked, and output or not depending on the value of another field.  Simple calculations can also be performed. </p>
            <p>Masking and conversion can be carried out on the same field.  However, the conversion is done first.  If you wish to convert the masked field, you must specify a conversion on the output of the masked field. </p>
            <p />
            <p>When a format template record is input, a TEMPLATE is required.  This is the name of the Word document which will be used to print the message. The Word document should be created as a Mail Merge document, specifying the DATA.NAMEs of the fields to be printed.  It should contain all the necessary text, fonts, styles and graphics necessary for creating the formatted message.  NOTE: It may still be necessary for some text to be present on the DE.FORMAT.TEMPLATE record, if, for example, it is dependent upon another field being present. </p>
            <p>Templates can be shared between DE.FORMAT.TEMPLATE records.  For example, the Word document for debit advices may be the same as credit advices, even though these are different message types in Delivery.  Text can be passed from delivery to indicate whether the advice is a debit advice or credit advice. </p>
            <p>When the DE.FORMAT.TEMPLATE record is authorised, a sample file is created which can then be used for merging into the Word document.  This file will contain the data names and dummy data.  The file can be recreated at any time by running the application DE.MM.TEMPLATE.LAYOUT. </p>
            <p>Also upon validation of the DE.FORMAT.TEMPLATE record, a REPORT.CONTROL record is created, with an id the same as the id of DE.FORMAT.TEMPLATE, prefixed by $.  To ensure that the formatted messages are sent by the T24 Print Server to Word, you should make sure that the printer to be used has the COMMAND field set to LOCAL.SPOOL.  When the message is "spooled" by DE.CC.GENERIC, the message data will be merged with the Word template and spooled to the local or network printer. </p>
            <p>Messages can be directed to template formatting by either specifying a carrier of TEMPLATE on the appropriate DE.PRODUCT record, or by changing the DE.CARRIER record for PRINT to use TEMPLATE formatting and output. </p>
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>MASK</field>
<desc>
            <p>Can be used to control the formatting of a data item. </p>
            <p>Note : Conversion and mask may be specified on the same field: the field        will initially be converted, then the converted field will be masked.  If you wish to apply a conversion to a masked field, the        masked field should be assigned a DATA.NAME, then that field should        then be converted. </p>
            <p>e.g.    FIELD.NAME    TRANS.REF         MASK          000000/00000/00000         DATA.NAME     MASK.TRANS.REF </p>
            <p>        FIELD.NAME    MASK.TRANS.REF         CONVERSION    TRIMF         DATA.NAME     CONV.TRANS.REF </p>
            <p>In the above example, if TRANS.REF is "FT9717600123", MASK.TRANS.REF would be "   FT/97176/00123".  CONV.TRANS.REF has then been specified to trim the leading spaces from the field, thus CONV.TRANS.REF contains "FT/97176/00123". </p>
            <p>The following MASKs are available: </p>
            <p>Bn             Right adjust into a length of n by inserting blanks on the left.  (n must not be zero.) </p>
            <p>*n             As for Bn but place asterisks before the first significant digit. </p>
            <p>Zn             As for *n but placing zeros before the first significant digit. </p>
            <p>,              Insert commas to separate thousands. </p>
            <p>.              Change '.' to ','. </p>
            <p>. , or , .     Insert points to separate thousands, and use a comma for decimals. </p>
            <p>-              Put the sign after the amount.  (The sign normally precedes the amount.)  '-' can only be used in conjunction with other masks. </p>
            <p>A              Print the absolute value without a sign, even if it is negative. </p>
            <p>D              Print DR after the amount if it is negative. </p>
            <p>C              Print CR after the amount if it is positive and DR if negative. </p>
            <p>%              Print % after the data. </p>
            <p>00x00x000x     Digits will be substituted for the zeros. Any other                characters (x represents 1 or more characters) will be printed wherever they were in the mask. </p>
            <p>'L'00x00x000x  As above except that user specifies that format is Left or 'R'00x00x000   Right justified.  If not specified the default is Right justified. </p>
            <p>More than one masking parameter may be specified, separated by a space. However, 00x00x000x may not be combined with other masking parameters. </p>
            <p>Note : Zero amounts will always be printed unless the name of the field        is entered in DEPENDENT.ON. </p>
            <p>Examples: </p>
            <p>Field Contains:       1234.67          -1234.67 Mask *10           ***1234.67        **-1234.67 Mask Z10           0001234.67        -001234.67 Mask B10 -            1234.67           1234.67- Mask , -             1,234.67          1,234.67- Mask .                1234,67          -1234,67 Mask B10 . , C       1.234,67CR        1.234,67DR Mask B10 , D         1,234.67          1,234.67DR </p>
            <p>The above examples show that various Masking options may be combined.  The length of 10 specified includes the comma, point and a preceding sign, but not '%', 'CR' 'DR', or a sign that follows the field. </p>
            <p>Field Contains:  123456 ----------------------- Mask 00-(00-00) 12-(34-56) Mask "L"000-000012-3456 Mask "R"000-0000123-456 </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>'Bn'  '*n'  'Zn'  ','  '.'  '-'  'C'  'D'  'A'  '%' '00x00x000x..etc. '  (where n is 1 or more digits and x is 1 or more characters)</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>RESERVED.4</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>DEPENDENT.ON</field>
<desc>
            <p>Specifies that the FIELD.NAME or TEXT is not to be printed if the field named in DEPENDENT ON is blank or zero, or is only printed if the field named in DEPENDENT.ON matches the condition specified. </p>
            <p>This field is generally used to prevent a heading from being printed when the associated data is not present. </p>
            <p>Example:   TEXT               "PAYMENT DETAILS"            DEPENDENT ON       PAY DET            ... </p>
            <p>The text PAYMENT DETAILS is only needed if the field PAY DET is present. </p>
            <p>Example: </p>
            <p>FIELD.NAME      AMOUNT CALCULATION     +,TOTAL.1 DEPENDENT.ON    AMOUNT </p>
            <p>TEXT            "--------------" DEPENDENT.ON    TOTAL.1 </p>
            <p>FIELD.NAME      TOTAL DEBIT DEPENDENT.ON </p>
            <p>In the above example TOTAL.1 is not printed: AMOUNT is added into TOTAL.1.  The line is only drawn if any of the AMOUNTs were present. </p>
            <p>AMOUNT will not print if it contains zero because it is 'Dependent On' itself.  The 'Dependent On' parameter suppresses both blank and zero values. </p>
            <p>TOTAL DEBIT will print if it is zero. </p>
            <p>In addition, a field or text can be printed depending on the value of the 'DEPENDENT ON' field. </p>
            <p>For example, move an amount to a credit or debit amount field, according to the value of the amount.  The credit or debit amounts can be printed in different columns, in the WORD template. </p>
            <p>FIELD.NAME      AMOUNT DEPENDENT ON    AMOUNT DEPEND OPERAND  LT DEPEND COND     0 DATA.NAME       DB.AMOUNT </p>
            <p>FIELD.NAME      AMOUNT DEPENDENT ON    AMOUNT DEPEND OPERAND  GE DEPEND COND     0 DATA.NAME       CR.AMOUNT </p>
            <p>In the above example, if the amount is less than 0, it will be printed in debit column. If, however, it is greater than or equal to 0, it will be printed in credit column. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>The name of any field in the Message, (it need not be one that is being printed), or the name of any field already defined in the Format record (i.e. a field which has already been specified) or TOTAL.n, where n = 1 to 9</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>RESERVED.3</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>RESERVED.2</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>DEPEND.OPERAND</field>
<desc>
            <p>Specifies how the 'DEPENDENT.ON' field is to be compared against the 'DEPEND.COND' field in determining whether to print the FIELD.NAME or TEXT. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Optional input</p>
            <p>If DEPEND.COND is entered, this field must be present.</p>
            <p>If entered, must be one of the following: EQ   Equal NE   Not Equal LT   Less Than LE   Less than or Equal GT   Greater Than GE   Greater than or Equal</p>
        </desc>
</t>
<t>
<field>RESERVED.7</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>TEXT</field>
<desc>
            <p>Specifies text to be printed.  Normally, any text to be printed would be entered onto the WORD template document.  However, if the text is conditional (e.g. dependent upon other fields) or the template document is shared between DE.FORMAT.TEMPLATE records, then it may be necessary to output text. </p>
            <p>Example </p>
            <p>One template document exists called ADVICE.  This can either be a credit advice (910.1.1.GB) or a debit advice (900.1.1.GB).  Therefore, "CREDIT" may be assigned to the DATA.NAME "ADVICE.TYPE" on the 910.1.1.GB and "DEBIT" assigned to the same field on the 900.1.1.GB. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Optional input</p>
            <p>Either FIELD.NAME or TEXT must be present, but not both</p>
            <p>Up to 50 type "ANY" characters</p>
        </desc>
</t>
<t>
<field>RESERVED.9</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>DE.MESSAGE.POPN</field>
<desc>
            <p>When creating a DE.FORMAT.TEMPLATE record initially, the fields on the record can either be entered manually, populated from DE.MESSAGE or populated from DE.FORMAT.PRINT records.  If you wish to populate this record from a DE.MESSAGE record, enter the id of the DE.MESSAGE record in this field.  If any fields have been entered already, they will be cleared before being populated with the details from the DE.MESSAGE record. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Optional input</p>
            <p>1-4 type "A" characters</p>
            <p>Must exist on DE.MESSAGE</p>
        </desc>
</t>
<t>
<field>RESERVED.10</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>ID</field>
<desc>
            <p>Identifies this template format. </p>
            <p>The key is composed of four parts as follows: </p>
            <p>         mmmm.aannnn.fff.ll </p>
            <p>where </p>
            <p>mmmm     is the message type (as defined on DE.MESSAGE) </p>
            <p>aannnn   is the application format.  This can either be : </p>
            <p> application code or numeric or application code followed by a number </p>
            <p>fff      is the format version number </p>
            <p>ll       is the language </p>
            <p>The Application Format used is placed in the Message Header (DE.O.HEADER) by the Mapping routine, having previously been set up by the Banking Application.  It distinguishes functionally different messages that share the same SWIFT message type. </p>
            <p>The format version number is used to distinguish special layouts of what are fundamentally the same message. </p>
            <p />
            <p>Example: </p>
            <p>All Money Market confirmations for fixed maturity deposits are Message Type 320, so for printing purposes Application Format is set to: </p>
            <p>30   for a new deposit with us, 75   for a new placement by us with a customer, 230  for a change to a deposit, etc. </p>
            <p />
            <p>Example: </p>
            <p>Special contract conditions might be added for a particular Customer and their use is controlled by the DE.PRODUCT file. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Each part of the id must be present, seperated by full stops (.)</p>
            <p>The message type must exist on the DE.MESSAGE table.</p>
            <p>The application format must either be :          an application code (two alpha characters)  or numeric (up to 4 characters)  or      an application code followed by up to 4 numeric characters</p>
            <p>The format version number must be numeric, up to 3 digits</p>
            <p>Language must be a valid language mnemonic on the LANGUAGE table.</p>
        </desc>
</t>
<t>
<field>K.CONVERSION</field>
<desc>
            <p>Specifies the type of field conversion (if any) required. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>CUS*xxxx TABLE xxxx   TRANS DATExxxx WORDS COPY     DUPLICATE    LINK*xxxx CCY*xxxx  xxxx above represents a range of options, as explained in Details below. (Optional input)  print.  The format of the conversion command is as follows:- LINK* FILE.NAME &gt; FIELD NAME &gt; VALUE &gt; SUB VALUE  where:  FILE.NAME is the name of the file the data is to be extracted from. This file must exist on PGM.FILE and Standard Selection.  FIELD.NAME is the name of the field from which the data is to be extracted.  The field name must be defined on the STANDARD.SELECTION record and can be a data field (type 'D') or an I-Descripter (type 'I') VALUE is the particular value to be extracted from the field.  The value 'L' can be entered to signify that the correct language for that message copy is to be extracted.  SUB VALUE is the particular sub value to be extracted from the Value of the field.  The value 'L' can be entered to signify that the language of the message copy is required. The key to the specified file is the correct value of the field to be converted.   CCY*xxxx -------- This conversion will allow a numeric field to be formatted to contain the currect number of decimal places.  This option may be defined for TOTAL.n fields, as well as data fields.  xxxx must be defined in the associated DE&gt;MESSAGE record, and should contain a valid 3 character currency code when mapped.</p>
            <p>The only Conversions that can be applied to "Text" are COPY and DUPLICATE.</p>
            <p>Conversion is not allowed if FIELD/"TEXT" is "Total.n"</p>
            <p>LINK conversion is only allowed when files are Resident as defined in DE.PARM.</p>
            <p>The file name for LINK conversion must be defined on PGM.FILE as types H,U,L,T or W.</p>
            <p>The field name must be defined on STANDARD.SELECTION for the file as type I or D for LINK conversions.</p>
            <p>Conversion type CCY*xxx requires a valid field name in the associated DE.MESSAGE record as the second element.</p>
        </desc>
</t>
<t>
<field>DEPEND.COND</field>
<desc>
            <p>Specifies the constant value that the 'DEPENDENT ON' field is to be compared against in determining whether to output the FIELD.NAME or TEXT or not. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-30 type A (alphanumeric) characters</p>
            <p>Optional input</p>
            <p>If entered, DEPENDENT.ON and DEPEND.OPERAND must be present.</p>
        </desc>
</t>
<t>
<field>RESERVED.5</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>FORM.TYPE</field>
<desc>
            <p>Defines the form type that will be used to determine which local printer the merged message output from WORD should be directed to.  The form type is not used in the formatting of the message.  If a special form type is required, it should be specified on the WORD template document. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-7 type A (alphanumeric) characters</p>
            <p>Optional input</p>
            <p>Will default to "DEFAULT" if left blank (there is a form type of "DEFAULT" on DE.FORM.TYPE, which is used when this field is ommitted)</p>
            <p>If entered, must be defined on DE.FORM.TYPE</p>
        </desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
            <p>Describes a message to be passed to a word processing package, such as WORD, whose formatting is controlled by this record. </p>
            <p>Descriptions may be entered in each of the languages defined in the LANGUAGE table. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>3-35 type A (alphanumeric) characters</p>
            <p>Multilanguage field</p>
            <p>Mandatory input</p>
        </desc>
</t>
<t>
<field>RESERVED.8</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>RESERVED.6</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>K.TEMPLATE</field>
<desc>
            <p>Help Text for this field is unavailable.  Please refer to the T24 User Guides for further information.</p>
        </desc>
</t>
<t>
<field>RESERVED.1</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>PRINT.POPN</field>
<desc>
            <p>When creating a DE.FORMAT.TEMPLATE record initially, the fields on the record can either be entered manually, populated from DE.MESSAGE or populated from DE.FORMAT.PRINT records.  If you wish to populate this record from a DE.FORMAT.PRINT record, enter the id of the DE.FORMAT.PRINT record in this field.  If any fields have been entered already, they will be cleared before being populated with the details from the DE.FORMAT.PRINT record. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Optional input</p>
            <p>1-20 type "A" characters</p>
            <p>Must exist on DE.FORMAT.PRINT</p>
        </desc>
</t>
<t>
<field>MULTI</field>
<desc>
            <p>Specifies whether the field should be treated as a single valued field (MULTI contains blank), multi-valued field ("M") or sub-valued field ("S"). </p>
            <p>If the field is specified as either multi-valued or sub-valued, each value/sub-value is processed in turn with regards to conversions, calculations and masking.  The values/sub-values are output separated by "line-feeds", so that they can either by input into a table in WORD, or if the field is simply printed, each value/sub-value will be printed on a seperate line. </p>
            <p>If a field is specified as single-valued, any multi or sub-value markers will be converted to spaces.  If a field is specified as multi-valued, any sub-value markers will be converted to spaces. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>"M" (multi-valued), "S" (sub-valued) or blank</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>TEMPLATE</field>
<desc>
            <p>Defines the WORD template that will be used to merge the data into a formatted message from DESKTOP tool. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-12 type A (alphanumeric) characters, which must be in the format of: xxxxxxxx  or xxxxxxxx.yyy  where xxxxxxx is the file name and yyy is the file extension.</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>FIELD.NAME</field>
<desc>
            <p>Specifies the name of the field to be printed.  This can be one of the following: </p>
            <p>a)   A field name which is part of the message details (must exist on DE.MESSAGE) </p>
            <p>b)   The DATA.NAME of a field which has previously been output </p>
            <p>c)   A total accumulated during Formatting (TOTAL.n, where n is in the range 1-9) </p>
            <p>d)   Today's date (DATE) </p>
            <p>e)   Current time of day (TIME) </p>
            <p>f)   The address the message is being sent to (TO.ADDRESS) </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>i)   A field name defined in DE.MESSAGE  or  ii)  A DATA.NAME previously output  or  iii)  'TOTAL.1' ... 'TOTAL.9', 'DATE', 'TIME', 'TO.ADDRESS'</p>
            <p>Optional input</p>
            <p>Either FIELD.NAME or TEXT must be present, but not both</p>
            <p>Up to 35 alphanumeric characters</p>
        </desc>
</t>
<t>
<field>CALCULATION</field>
<desc>
            <p>Can be used to set a TOTAL field to zero, or to add, subtract, multiply or divide the contents of the field into a TOTAL. </p>
            <p>Only TOTAL.n fields can be set to ZERO. </p>
            <p>The following calculations are available for normal field names and TOTAL.n: </p>
            <p>+,TOTAL.n  Add the contents of the field into TOTAL.n where n is 1 to 9. -,TOTAL.n  Subtract the contents of the field from TOTAL.n, where n is 1            to 9. *,TOTAL.n  Multiply TOTAL.n by the contents of the field (Where n is 1 to            9). /,TOTAL.n  Divide TOTAL.n by the contents of the field (Where n is 1 to 9). </p>
            <p>Calculation +,TOTAL.n may sometimes be used to detect the presence of detail lines.  See DEPENDENT.ON. </p>
            <p>When multiplying or dividing, the first field determines the number of decimal places.  This is not suitable for such purposes as calculating a local currency equivalent. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>May contain 'ZERO' only if FIELD.NAME is TOTAL.1 TOTAL.2 ... etc. otherwise may contain: +,TOTAL.n, -,TOTAL.n  *,TOTAL.n  /,TOTAL.n</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>CONVERSION</field>
<desc>
            <p>Specifies the type of field conversion (if any) required. </p>
            <p>NOTE : Conversion and mask may be specified on the same field: the field will initially be converted, then the converted field will be masked. If you wish to apply a conversion to a masked field, the masked field should be assigned a DATA.NAME, then that field should then be converted. </p>
            <p>e.g. </p>
            <table>
                <tr>
                    <td>
                        <p>FIELD.NAME</p>
                    </td>
                    <td>
                        <p>TRANS.REF</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>MASK</p>
                    </td>
                    <td>
                        <p>000000/00000/00000</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>DATA.NAME</p>
                    </td>
                    <td>
                        <p>MASK.TRANS.REF</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>FIELD.NAME</p>
                    </td>
                    <td>
                        <p>MASK.TRANS.REF</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>CONVERSION</p>
                    </td>
                    <td>
                        <p>TRIMF</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>DATA.NAME</p>
                    </td>
                    <td>
                        <p>CONV.TRANS.REF</p>
                    </td>
                </tr>
            </table>
            <p />
            <p>In the above example, if TRANS.REF is "FT9717600123", MASK.TRANS.REF would be " FT/97176/00123". CONV.TRANS.REF has then been specified to trim the leading spaces from the field, thus CONV.TRANS.REF contains "FT/97176/00123". </p>
            <p>The following CONVERSIONs are available: </p>
            <p>CUS*xxxx If Field Name contains a company code, the name and address will be retrieved from the DE.ADDRESS file using an ID of Company*code.PRINT.1. If Field Name contains neither a company code nor a customer number, it will be assumed that the field contains a name and address. If Field Name contains a customer number it will be prefixed with the Cus Company from the message header and the name and address will be retrieved from the Delivery Address file. The address used will have an ID of Cus Company.C-Customer.PRINT.1 </p>
            <p>If a Customer has PRINT.2 PRINT.3 etc. addresses on file they can only be used as a To Address (an address to send a message to) and then only if the relevant Delivery Product record points to PRINT.2 or PRINT.3 etc. </p>
            <p>CUS must be followed by one of the following parameters to control whether the full address is to be printed, or only one line. </p>
            <p>To print the full address: </p>
            <p>*FULL </p>
            <p>To print a single line the same name is used as is defined in the DE.ADDRESS file: </p>
            <p>*SHORT.NAME *NAME.1 *NAME.2 *STREET.ADDRESS *TOWN.COUNTY *POST.CODE *COUNTRY </p>
            <p>Since PRINT.1 addresses are passed from the Customer file where the address is 4 lines instead of 6, conversions CUS*POST.CODE and CUS*COUNTRY will be blank except when printing To Address for address PRINT.2, PRINT.3 etc. </p>
            <p>TABLE xxxx When Conversion is set to TABLE the contents of a field are used to read the DE.TRANSLATION table and the correct translation is picked according to the Language chosen to deliver a message in. </p>
            <p>xxxx after the word TABLE (as specified above) represents a prefix to the key of the DE.TRANSLATION table. If no prefix is specified then prefix defaults to SW. </p>
            <p>Example: </p>
            <p>Field contains GBP Conversion is specified as TABLE Text to be printed will be found by looking up SWGBP in the DE.TRANSLATION table. </p>
            <p>Field contains GBP Conversion is specified as TABLE CCY/ Text to be printed will be found by looking up CCY/GBP in the DE.TRANSLATION table. </p>
            <p>If the field is a multivalue set and Conversion 'TABLE' is specified, then only an item preceded by :: will be looked up on the DE.TRANSLATION table. </p>
            <p>Example: </p>
            <p>If we have a multivalue set containing: </p>
            <p>Commission amounts Identifiers to describe the amounts </p>
            <p>The identifiers are generally commission codes which will need translating, and so must be preceded by :: but there may also be fixed text such as 'Standard Commission' which needs no conversion. </p>
            <p>TRANS A full multi-language set of text can be passed from an Application calling Delivery. The use of TRANS will cause the print formatting module to use the Language in the Message Header to select text in the appropriate language. </p>
            <p>DATE Translates dates into a different format depending on the parameters following DATE. DATE DD MMM YYYY (Three letter month.) DATE/F DD MMMMMMMMM YYYY (Month up to 9 letters.) DATE/S DD MM YY (2 digit month.) DATE//US MMM DD YYYY (Three letter month.) DATE/F/US MMMMMMMMM DD YYYY (Month up to 9 letters.) DATE/S/US MM DD YY (2 digit month.) </p>
            <p>WORDS Translates numbers into words in the appropriate language. Large amounts require 2 lines, so MULTI should be 'M'. At present, amounts can only be translated into English. NOTE: Multivalue and sub-value fields cannot be translated using a conversion of words. </p>
            <p>WORDSCCY*ccy As WORDS but will additionally append the currency name to the amount in the same language. In some languages the currency spelling may differ according to the amount. </p>
            <p>COPY Data or text specified will only be printed if the document is a copy, i.e. the message has previously been successfully formatted for printing (possibly with a different To Address). The Disposition of the original printed message must be 'Formatted' or 'ACK'. </p>
            <p>DUPLICATE Text or data specified will only be printed if the Message Header is flagged as a possible duplicate entry, either because it has had to be formatted twice, or because the header field APP.PDE was set by the banking application that generated the message. </p>
            <p>LINK* This conversion will allow data from a LINKED file to be used in the printed message. The current field will be used as the key to the file specified. A field, value or sub-value can be extracted, or the current language value of the field. Links should be specified as follows: </p>
            <p>LINK*file namefield namevaluesubvalue </p>
            <p>where </p>
            <p>FILE.NAME is the name of the file the data is to be extracted from. This file must exist on PGM.FILE and Standard Selection. </p>
            <p>FIELD.NAME is the name of the field from which the data is to be extracted. The field name must be defined on the STANDARD.SELECTION record and can be a data field (type 'D') or an I-Descripter (type 'I') </p>
            <p>VALUE is the particular value to be extracted from the field. The value 'L' can be entered to signify that the correct language for that message copy is to be extracted. </p>
            <p>SUB VALUE is the particular sub value to be extracted from the Value of the field. The value 'L' can be entered to signify that the language of the message copy is required. </p>
            <p>LINK*filefieldnamevaluesubvalue </p>
            <p>value and subvalue are both optional value or subvalue can be specifed as "L" to pick up the languge value of the field </p>
            <p>CCY*xxxx This conversion will allow a numeric field to be formatted to contain the currect number of decimal places. This option may be defined for TOTAL.n fields, as well as data fields. xxxx must be defined in the associated DE.MESSAGE record, and should contain a valid 3 character currency code when mapped. </p>
            <p>FIXEQU*xxx This conversion returns the equivalent value of an amount (e.g the Euro amount) when the currency held in the field xxx has a FIXED.CCY linked to it. The conversion takes place at the FIXED.RATE defined in the CURRENCY record. A null value is returned if there is no FIXED.CCY. </p>
            <p>FIXCCY*xxx This returns the currency which is equivalent to the currency code held in the field xxx. The currency code is extracted from the FIXED.CCY field in the CURRENCY record. A null value is returned if there is no FIXED.CCY. </p>
            <p>FIXRTE*xxx This returns the fixed exchange rate between the currency held in the field xxx and the FIXED.CCY, if defined, in the currency record. A null value is returned if there is not FIXED.CCY defined. </p>
            <p>@xxxxxxx</p>
            <p>where</p>
            <p>xxxxxxx is the name of a user-created subroutine to carry out customised conversions. The subroutine must exist in PGM.FILE as a type S record. The arguments used in calling the subroutine are xxxxxxx(IN.FIELD, HEADER.REC, MV.NO, OUT.FIELD, ERROR.MSG), where</p>
            <p>IN.FIELD  unconverted data from calling routine</p>
            <p>HEADER.REC  dynamic variable containing current Header record from calling routine</p>
            <p>MV.NO  Current value number for carrier address (references Header record) from calling routine</p>
            <p>OUT.FIELD  converted data from subroutine</p>
            <p>ERROR.MSG - text error message generated by subroutine. If this is not null on return from the subroutine, the calling program will abort the conversion and place the message in the Repair queue.</p>
            <p>TRIMF Trim leading spaces </p>
            <p>TRIMB Trim trailing spaces </p>
            <p>DOWNCASE Convert to lowercase </p>
            <p>UPCASE Convert to uppercase </p>
            <p>TITLECASE Convert to titlecase (Each Word Begins With A Capital Letter) </p>
            <p>SENTENCECASE Convert to sentence case (The first word after a full stop begins with a capital letter) </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Optional input 45 type "A" characters </p>
            <p>CUS*xxxx TABLE xxxx TRANS DATExxxx WORDS COPY DUPLICATE LINK*xxxx CCY*xxxx TRIMF TRIMB DOWNCASE TITLECASE SENTENCECASE FIXEQU*ccy FIXRTE*ccy FIXCCY*ccy xxxx represents a range of options, as explained above. The only Conversions that can be applied to "Text" are COPY and DUPLICATE.</p>
            <p>Conversion is not allowed if FIELD.NAME is "Total.n" </p>
            <p>LINK conversion is only allowed when files are Resident as defined in DE.PARM. The file name for LINK conversion must be defined on PGM.FILE as types H,U,L,T or W. The field name must be defined on STANDARD.SELECTION for the file as type I or D for LINK conversions. </p>
            <p>Conversion type CCY*xxx requires a valid field name in the associated DE.MESSAGE record as the second element. </p>
            <p />
            <p>User-defined conversion routines must be entered with a leading @ character or they will not be recognised.</p>
        </desc>
</t>
<t>
<field>DATA.NAME</field>
<desc>
            <p>Specifies the name of the field to be used in the merged Word Processing document (e.g. WORD).  All field and text to be output is assigned a DATA.NAME.  It is this DATA.NAME which will be used in WORD when merging and printing the document from DESKTOP tool.  If the DATA.NAME is left blank, it will be defaulted.  For fields, it will be defaulted to the name in FIELD.NAME. If a data name of this value has already been assigned, it will be defaulted to DATAnn.  (e.g. TO.ADDRESS may be output many times, for each line of the address.) For text, it will be defaulted to TEXTnn. </p>
            <p>You should wherever possible, assign meaningful DATA.NAMEs, to make the job of creating the TEMPLATE documents easier. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Optional input</p>
            <p>Must be unique</p>
            <p>Up to 35 alphanumeric characters</p>
        </desc>
</t>
<t>
<field>DE.FORMAT.TEMPLATE.ID</field>
<desc>
            <p>Identifies this template format. </p>
            <p>The key is composed of four parts as follows: </p>
            <p>         mmmm.aannnn.fff.ll </p>
            <p>where </p>
            <p>mmmm     is the message type (as defined on DE.MESSAGE) </p>
            <p>aannnn   is the application format.  This can either be : </p>
            <p> application code or numeric or application code followed by a number </p>
            <p>fff is the format version number </p>
            <p>ll is the language </p>
            <p>The Application Format used is placed in the Message Header (DE.O.HEADER) by the Mapping routine, having previously been set up by the Banking Application.  It distinguishes functionally different messages that share the same SWIFT message type. </p>
            <p>The format version number is used to distinguish special layouts of what are fundamentally the same message. </p>
            <p />
            <p>Example: </p>
            <p>All Money Market confirmations for fixed maturity deposits are Message Type 320, so for printing purposes Application Format is set to: </p>
            <p>30   for a new deposit with us, 75   for a new placement by us with a customer, 230  for a change to a deposit, etc. </p>
            <p />
            <p>Example: </p>
            <p>Special contract conditions might be added for a particular Customer and their use is controlled by the DE.PRODUCT file. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Each part of the id must be present, separated by full stops (.)</p>
            <p>The message type must exist on the DE.MESSAGE table.</p>
            <p>The application format must either be : an application code (two alpha characters)  or numeric (up to 4 characters)  or      an application code followed by up to 4 numeric characters</p>
            <p>The format version number must be numeric, up to 3 digits</p>
            <p>Language must be a valid language mnemonic on the LANGUAGE table.</p>
        </desc>
</t>
</menu>
</t24help>

