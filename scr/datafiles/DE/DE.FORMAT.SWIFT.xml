<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>DE</product>
<table>DE.FORMAT.SWIFT</table>
</header>
<overview>
<ovdesc>

            <p>FORMAT SWIFT (DE.FORMAT.SWIFT) OVERVIEW ======================================= </p>
            <p>DE.FORMAT.SWIFT defines how the data content of a message is to be converted for SWIFT.  The header and trailer required by SWIFT are standard and generated automatically.  They are not specified in this table. </p>
            <p>This table is also used to convert incoming SWIFT messages for processing by the various banking applications. </p>
            <p>The maximum size of a SWIFT message is 2000 characters, so if a message exceeding this limit is generated by one of the banking applications to Delivery System it is placed on the Repair Queue.  However, when a statement (a message type 950) is received exceeding this limit it is automatically divided up to allow for transmission in sections of less than 2000 characters. </p>
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>USER.FIELD</field>
<desc>
            <p>Specifies the name of a field being placed in the SWIFT message as defined on the DE.MESSAGE table.</p>
            <p>Details mapped here will be used in application handoff to populate the User Header (Block 3) in outgoing Swift Message.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Allowed only for Message type 103.</p>
            <p>1-18 type A (alphanumeric) characters </p>
            <p>User field name must be existing in DE.MESSAGE for the message type.</p>
        </desc>
</t>
<t>
<field>MESSAGE.TYPE</field>
<desc>
            <p>Not used: the SWIFT Message Type will be the same as the Delivery System Message Type defined in DE.MESSAGE. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>(Optional input)</p>
            <p>If inputted- It should be a valid record in DE.MESSAGE.</p>
        </desc>
</t>
<t>
<field>FIELD.TAG</field>
<desc>
            <p>Specifies the SWIFT "Field Tag" of a field. </p>
            <p>Messages sent by SWIFT have codes ('Field Tags') in front of the fields to define what these fields are. </p>
            <p>These may be: </p>
            <p>1)         A simple code defining a single field. 2)         A code defining a fixed group of fields. 3)         A code with a variable suffix which depends on the            contents of a field. </p>
            <p>Example: </p>
            <p>SWIFT Field Tag 30 means 'Date Contract Agreed', and applies to a single Field in the Delivery System with this Field Tag. </p>
            <p>SWIFT Field Tag 32A means 'Value Date, Currency Code, Amount'. When specifying the format of this field Value date will have its Field tag entered as 32A, but Currency Code and Amount will then be entered on this table without Field Tags.  Specifications of Value Date, Currency Code and Amount must be consecutive on the Format SWIFT record, but the same is not true for the Message record. </p>
            <p>When a Field Tag has an 'A', 'B', or 'D' suffix that depends on the data, it is entered in Field Tag with the 'A' suffix, then changed automatically during the formatting process if necessary.  The Field Tag should be entered on the TRANSLATION table with a suffix of 'A'.  Variable suffixes other than 'A', 'B' and 'D' are entered on the DE.FORMAT.SWIFT and TRANSLATION tables with a suffix of 'X'. </p>
            <p>Example: 52A is the SWIFT address of an Ordering Bank, whereas 52D is the full address of the Bank/Branch/Office. </p>
            <p>Even if 'Ordering Bank' is always sent out in the format that corresponds to a tag of 52D, Field Tag must still be defined as 52A because a field 'Tagged' as 52A instead of 52D might be received in an incoming message. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-3 type A (alphanumeric) characters. All fields on DE.FORMAT.SWIFT (except DESCRIPTION Field 1.1 and MESSAGE TYPE Field 2) form a multivalue set describing the formatting of an individual field for SWIFT. (Optional input - if FIELD TAG is not entered it means that the FIELD NAME (Field 4.1) is a subsidiary part of a single field for SWIFT.) The value entered must be on the DE.TRANSLATION table prefixed by 'SW'.  This not only provides validation for the Field Tag, but also enables descriptive 'enrichment' when a message needs to be printed, displayed on the screen or sent by Telex.</p>
        </desc>
</t>
<t>
<field>K.CONVERSION</field>
<desc>
            <p>Internal field .</p>
            <p>Noinput</p>
        </desc>
</t>
<t>
<field>ID</field>
<desc>
            <p>Contains the Message Type, followed by the Application Format and the Format version number. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-4 numeric characters.  (Mandatory input - the rest of the key defaults to '.1.1', the only value allowed.)  Only one Format SWIFT record allowed per Message Type. The Message Type entered must be on the DE.MESSAGE table.</p>
        </desc>
</t>
<t>
<field>HEADER.NAME</field>
<desc>
            <p>Defines the name of this field when building a message header for an incoming message. </p>
            <p>Fields should be placed on a header whenever possible so that they can be used for controlling routing and the collection of statistics. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Must be one of the following: 'ACCOUNT'       'AMOUNT' 'COMPANY'       'CURRENCY'    'CUSTOMER' 'DESTINATION'   'TRANS.REF'   'VALUE.DATE' (Optional input)</p>
        </desc>
</t>
<t>
<field>HEADER.POSITION</field>
<desc>
            <p />
            <p>Specifies a position in the Header file for a field to be mapped into.</p>
            <p />The use of HEADER.POSITION makes mapping slightly faster than otherwise.<p /><p><p>Validation Rules:</p></p><p /><p>1-2 Numeric Characters - Multivalue Set   </p><p>This is a NOINPUT field</p></desc>
</t>
<t>
<field>INWARD.ROUTINE</field>
<desc>
            <p>Defines whether a specially coded routine is to be used by the formatting routine for processing this field in inward messages. </p>
            <p>If the special routine is called it will use the Field Tag to determine the particular processing required. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>'Y' or 'NO'. (Optional input. Default 'NO'.)</p>
        </desc>
</t>
<t>
<field>USER.BLOCK</field>
<desc>
            <p>Specify the User Header Block Name for mapping into User Header (Block 3) of outgoing Swift Message.</p>
            <p />
            <p>Possible Codes in User Header Block -3 (SWIFT Standards Release 2002) and their Globus Block Name in DFS are</p>
            <table>
                <tr>
                    <td>
                        <p />
                        <p>Swift Field</p>
                        <p />
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>Swift Field details</p>
                    </td>
                    <td>
                        <p />
                        <p>Values</p>
                    </td>
                    <td>Globus Block Name</td>
                </tr>
                <tr>
                    <td>
                        <p />
                        <p>103</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>Fin Copy Service Code</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>3!a</p>
                        <p />
                    </td>
                    <td>SERVICE.ID</td>
                </tr>
                <tr>
                    <td>
                        <p />
                        <p>113</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>Banking Priority (Optional)</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>4!x</p>
                        <p />
                    </td>
                </tr>
                <tr>
                    <td>
                        <p />
                        <p>108</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>Message User Reference (Optional)</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>16x</p>
                        <p />
                    </td>
                </tr>
                <tr>
                    <td>
                        <p />
                        <p>119</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>Validation Flag       (Optional)</p>
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>8!c</p>
                        <p />
                    </td>
                </tr>
                <tr>
                    <td>
                        <p />
                        <p>115</p>
                        <p />
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>Payment-Release-Information-Receiver (Optional)</p>
                        <p />
                        <p />
                    </td>
                    <td>
                        <p />
                        <p>32x</p>
                        <p />
                    </td>
                    <td>PAY.REL.INF</td>
                </tr>
            </table>
            <p>User Block name has to be mapped to valid user name in the next field and same is mapped using application handoff which in turn generates Swift message with the given user header Block 3 Details.</p>
            <p>System will populate STP for MT103+ and REMIT for MT103 Extend messages (MT103 with tag 77T) in field 119 (Validation Flag).</p>
            <p>User Block and User field allowed only for 103. For other message type it is not allowed.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Allowed only for DE.FORMAT.SWIFT with record id-103.</p>
            <p>Valid values SERVICE.ID, BNK.PRIORITY, MUR, VALID.FLAG, PAY.REL.INF.</p>
            <p>If entered then next field User.Field is mandatory</p>
            <p>Duplicate or Null values not allowed</p>
            <p />
        </desc>
</t>
<t>
<field>OUTWARD.ROUTINE</field>
<desc>
            <p>Defines whether a specially coded routine is to be used by the formatting routine for processing this field in outward messages. </p>
            <p>If the special routine is called it will use the Field Tag to determine the particular processing required.  However, so far it has not been found necessary to write a routine to convert a particular Field Tag.  Therefore, at present, this field is not used. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>'Y' or 'NO'. (Optional input. Default 'NO'.)</p>
        </desc>
</t>
<t>
<field>MULTIPLES</field>
<desc>
            <p>Defines whether multiple values in a field should be converted into multiple SWIFT fields, each with a Field Tag. This is also used to define which SWIFT fields form a multiple set of SWIFT fields to be repeated for all values. </p>
            <p>'Y' in Multiples causes multiple values in a field to be split into separate SWIFT fields, each having its own Field Tag. If a single 'SWIFT' field is made up of subsidiary fields, 'multiples' can only be set to 'Y' on the first subsidiary field in the group (i.e. the multivalue set containing the field tag). </p>
            <p>'NO' in Multiples instructs the formatting routine to search for 'value markers' (separating the parts of a multivalue Field) and replace them with carriage return and line feed. However, if 'NO' is specified in multiples and the field is defined on the DE.MESSAGE table as being single value, any value markers which may exist will be replaced with spaces. </p>
            <p>A FIELD.NAME may be specified which denotes the last field to be included in repeating sequence of SWIFT fields. This value must be defined in the first field comprising the associated fields. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>'Y' or 'NO' or a FIELD.NAME. (Optional input. Default 'NO'.) A FIELD.NAME may only be defined when a FIELD.ID is specified. The FIELD.NAME defined must be specified as a FIELD.NAME after the specified multiple. A FIELD.NAME may only be part of a single association. </p>
        </desc>
</t>
<t>
<field>CALCULATION</field>
<desc>
            <p>Can be used to add the contents of a Field into a Total. </p>
            <p>Calculation can be used so that the field being defined in this multivalue set is added into TOTAL.n which is needed later on in the message. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>'TOTAL.1' 'TOTAL.2' ... 'TOTAL.9' (Optional input)</p>
        </desc>
</t>
<t>
<field>CONVERSION</field>
<desc>
            <p />
            <p>Specifies the type of field conversion if required. </p>
            <p>CUSTOMER or CUS When this is used the Field Tag will be made appropriate to the contents of the field: </p>
            <p>Field Tag nnA indicates a SWIFT address. Field Tag nnD or Tag nnK indicates a postal address. </p>
            <p>Customer conversion will only be performed if the contents of a field are numeric. Otherwise it is assumed that the field already contains the customer's full name and address, and the Field Tag is changed to nnD. </p>
            <p>For MT103 messages the tag 50D will be changed to 50K, as required by SWIFT.</p>
            <p>When Field Name is numeric it must contain a Customer Number. It will be prefixed with the CUS COMPANY field from the Message Header, then the address will be looked up in the DE.ADDRESS file. The address used will be the customer's first address on the DE.ADDRESS file. </p>
            <p>The ID will be composed of Cus Company Code, '.C-', the Customer Number, and '.SWIFT.1'. (These have Field Tag nnA.) If the SWIFT address does not exist, the first print address will be accessed. This will create a Field Tag nnD. </p>
            <p>This means, for example, that if a bank not on SWIFT has a location of 25 Farringdon Street and a separate mailing address of P.O. Box 654, its first address will be set up on the DE.ADDRESS file with an ID containing 'PRINT.1' and P.O. Box 654 will be set up with an ID containing 'PRINT.2'. A DE.PRODUCT record will then be set up for the bank with a Carrier Addr No field of 'PRINT.2'. </p>
            <p>Thus the name and address will be referred to in SWIFT messages as 25 Farringdon Street, while printed messages will be posted to P.O. Box 654. </p>
            <p>CUS*ORD Converts a Customer number (or text string) to the value set in the ORD record on DE.TRANSLATION according to the language of the receiving bank. This conversion depends on the CUSTOMER field CONFID.TXT being set to Yes and the ordering party is a customer and has no BIC address other wise the conversion is same as for CUSTOMER or CUS. This conversion should be used where the tag has an option e.g. 50A. </p>
            <p>CUS*FULL Converts a Customer number to a full PRINT.1 address. Used, for example, when the field tag is 50. It does not affect the Field Tag. </p>
            <p>CUS*SHORT Converts a Customer number to the SHORT.NAME in the PRINT.1 address record for the customer. It does not affect the Field Tag. </p>
            <p>CUS*TEXT*ORD Converts a Customer number (or text string) to the value set in the ORD record on DE.TRANSLATION according to the language of the receiving bank. This conversion depends on the CUSTOMER field CONFID.TXT being set to Yes. This conversion should be used where the tag has no option e.g. 50.</p>
            <p>ACCOUNT or ACC The field will be formatted as SWIFT requires for an Account, i.e. preceded by '/' and the Field Tag changed to nnB. If a Customer Conversion follows, the field will be appended by a carriage return and line feed, and the Field Tag will be changed if necessary. </p>
            <p>AGENT This conversion is used for retrieving a national clearing system code from the AGENCY file. The format for this is "AGENT*field containing customer number for reading AGENCY file*field containing currency of the message". An example would be "AGENT*ACCT WITH BANK CUS*CURRENCY". The two fields after AGENT* must exist on the DE.MESSAGE file for the corresponding message type. Also the CLEAR.CCY and CLEAR.CODE fields must be present on the AGENCY file. </p>
            <p>AMOUNT or AMT If a sign exists it is removed. Thousand delimeters are also removed, then the decimal point is replaced by a comma. </p>
            <p>AMOUNT,x,y or AMT,x,y As for AMOUNT, thousand delimeters are removed, then the decimal point is replaced by a comma, and if a sign exists it is removed. This option also modifies the Field Tag. If the field has a positive or zero value 'x' is appended to the Field Tag, otherwise 'y' used. </p>
            <p>For example, a Field Tag of 32P or 32R means Date of Deposit/Currency Code/Amount of Contract. The 'R' or 'P' indicates 'Paid' or 'Received'. If the amount is negative when paid out, the correct suffix can be set by using AMOUNT,R,P </p>
            <p>SIGN,x,y If the field is positive or zero, it is replaced by '*', otherwise it is replaced by 'y'. </p>
            <p>TABLE or TABLE x Contents of the Field are appropriately modified (as described in FORMAT PRINT) then used to read DE.TRANSLATION. LANGUAGE in the message header is then used to replace the field with text in the language chosen for delivery. </p>
            <p>TRANS A full set of language text is maintained by the application calling Delivery. The SWIFT formatting module will select text in the appropriate language. </p>
            <p>TAG Contents of the field replace the third character of the Field Tag. For example, if 'P' or 'R' ('pay' or 'receive') is held in a field, then it can be used to alter the tag dynamically so the application calling Delivery effectively controls the Field Tag. </p>
            <p>DATE Translates dates into the 6-digit SWIFT ISO format. (YYMMDD) </p>
            <p>CRLF Prefixes the field with a carriage return and line feed. </p>
            <p>PAGE.NO Appends '/' then a page number to the field. </p>
            <p>'/' Prefixes the field with '/'. </p>
            <p>'//' Prefixes the field with '//'. </p>
            <p>x*y*z This format of conversion is used for decoding incoming messages, where a field tag contains more than one field, one of which must contain one of a range of values. This is used where the range of values are of different lengths and the field cannot be extracted from the line by removing the next n characters. The conversion has no effect on outward messages. </p>
            <p>@subroutine name Allows a DATABASIC subroutine to be invoked to perform special conversion processing. </p>
            <p />
            <p>Parameters required for this routine are:</p>
            <p />
            <p />
            <p>FORMAT.SWIFT.REC -DE.FORMAT.SWIFT RECORD (Exp: 103.1.1) MESSAGE.REC, -DE.MESSAGE RECORD (Exp : 103) TEMP.FIELD,  -CONVERTED FIELD VALUE ( IN / OUT PARAMETER) &gt;OUTPUT, &gt;-PROCESSED MESSAGE DETAILS BEFORE CONVERTING THE EXISTING TAG DETAILS   SROUTINE.ERROR -ERROR DETAILS.    FMT,xxx Allows a standard Universe FMT command to be applied to the data. ERI Replaces an amount field with the related ERI information where appropriate. ERI information is built when a non EUR transaction is settled in EUR, for other transactions a null value is returned. ERI information should be placed in a narrative field (e.g. field 72), and is in the format /xxxx/ccynnnnn where xxxx = OCMT or CHGS, ccy is the original ccy, nnnn is the orig amount See DE.MAPPING field AC.FIELD for further info. TIME.CET - conversion adds the CET time offset in the SWIFT format, as defined in the field CET.TIME.DIFF for the SYSTEM.STATUS record in the DE.PARM file. This should be used in the TIME field/s where CET time offset is to be set in the SWIFT message.</p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>One of the following: 'CUSTOMER' 'CUS' 'CUS*FULL' 'CUS*SHORT' 'CUS*TEXT*ORD' 'CSW' 'ACCOUNT' 'ACC' 'AGENT' 'AMOUNT' 'AMT' 'AMOUNT,x,y' 'AMT,x,y' 'SIGN,x,y' 'TABLE' 'TABLE x' 'TRANS' 'TAG' 'DATE' 'CRLF' 'PAGE.NO' '/' 'x*y*z' '@xxxxxxx' 'FMT,xxx' x and y above represent any type A (alphanumeric) character or characters. (Optional input) Rule : If field name is TOTAL.n, the only conversions which may be entered are 'AMT', 'AMOUNT','AMT,x,y', 'AMOUNT,x,y' , 'SIGN,x,y' and TIME.CET.</p>
        </desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
            <p>Describes the SWIFT message whose formatting is controlled by this record. </p>
            <p>Descriptions may be entered in each of the languages defined in the LANGUAGE table. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>3-35 type A (alphanumeric) characters.  Multilanguage field. (Mandatory input)</p>
        </desc>
</t>
<t>
<field>FIELD.NAME</field>
<desc>
            <p>Specifies either the name of a field being placed in the SWIFT message as defined on the DE.MESSAGE table, or: Defines a total accumulated during the formatting process. </p>
            <p>As well as the banking application data, SWIFT sometimes requires control totals.  These have FIELD NAMES of 'TOTAL.1' 'TOTAL.2 ... 'TOTAL.9' </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-18 type A (alphanumeric) characters or 'TOTAL.1' ... 'TOTAL.9' (Mandatory input) Must be either on the DE.MESSAGE table record for the Message Type in the ID of this record, or 'TOTAL.1' 'TOTAL.2' ....  'TOTAL.9'.</p>
        </desc>
</t>
</menu>
</t24help>

