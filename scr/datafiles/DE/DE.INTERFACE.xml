<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>DE</product>
<table>DE.INTERFACE</table>
</header>
<overview>
<ovdesc>

            <p>This file contains details of the protocols for all interfaces which use the Generic Delivery Interface.  The protocols for interfaces written prior to the introduction of the Generic Delivery Interface are either stored on DE.PARM or are hard-coded in the program.  Sequence numbers for existing interfaces are stored on F.LOCKING. </p>
            <p>There is little validation of the fields on DE.INTERFACE.  This is to allow for maximum flexibility when new interfaces are written. </p>
            <p>The id of the file is the interface as defined in the interface field on DE.CARRIER. </p>
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>OVERRIDE</field>
<desc>
            <p>This is a multi valued field. Standard T24 alphanumeric field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>A maximum of 35 characters may be entered.</p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>RESERVED.2</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>RESERVED.1</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>RESERVED.3</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>LINE.COMM</field>
<desc>
            <p>Can be used to define the line communications parameters, for example for ATE or TCPIP protocols. </p>
            <p>There is no validation on this field, to allow for maximum flexibility. If any validation is required, it should be done through a routine specified on VERSION. </p>
            <p>EXAMPLE 1 </p>
            <p>If ATE is specified in the PROTOCOL field, then this field could specify five pieces of information about the line communications as follows : </p>
            <p>Line , Baud , Data , Stop , Parity </p>
            <p>Where : </p>
            <p>Line       Defines the &amp;DEVICES&amp; file devicename for the asynchronous            line connected to the SWIFT device. For example '8' will look            for a tty line called 'TTY08' or '0' will look for 'TTY00'. </p>
            <p>Baud       Defines the baud rate of the line. </p>
            <p>Data       Defines the number of data bits. </p>
            <p>Stop       Defines the number of stop bits. </p>
            <p>Parity     Defines parity as '0' - None                              '1' - Even                              '2' - Odd </p>
            <p>EXAMPLE 2 </p>
            <p>If TCPIP is specified in the PROTOCOL field then this field could specify three pieces of information about the communications interface as follows : </p>
            <p>Blocksize , Internet address and port , pipes location </p>
            <p>Where : </p>
            <p>Blocksize  Specifies the minimum datagram size in bytes which will            be exchanged with the 'c' server. This is present for            performance reasons since it allows a block of fixed size            to be expected by each side. It should be set at            installation to a value determined appropriate for likely            message sizes. The default should be 512. </p>
            <p>Internet   Specifies the Internet address as connected on the network address    with the port number as an extension e.g. 100.100.10.10:1234.            This is the address the 'c' server will connect its sockets to. </p>
            <p>Pipes      Specifies the unix pathname of the directory containing the location   pipes used for communications between T24 and the 'c'            server for TCPIP. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>FILE.PATHNAME</field>
<desc>
            <p>Defines the pathname of the msg interface files.  This can be used if the files are to be created in a directory other than the data directory. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-50 type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>RESERVED.6</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>MF.SEQUENCE</field>
<desc>
            <p>The next sequence number to be used for outgoing messages. </p>
            <p>This field is updated, if required, by the outward interface routine (as defined in OUT.IF.ROUTINE).  Care should be taken if updating this field manually.  However, it may sometimes be necessary to update it manually if, for example, the sequence number being used by the outward routine is different from that expected by the interface. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-12 numeric characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>HARDWARE</field>
<desc>
            <p>Defines the hardware being used by the interface. </p>
            <p>e.g. For SWIFT, it could be ST200 or ST400. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>NETWORK</field>
<desc>
            <p>This field can be used to specify which network connection is being used when there is a choice available.  For example, during the transition from SWIFT I to II, it could have been used to specify whether the connection was to SWIFT I or SWIFT II and whether it was being used in training mode. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 type "A" (alphanumberic) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>RESERVED.4</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>LOCAL.REF</field>
<desc>
            <p>This is a multi valued field. Standard T24 alphanumeric field. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>A maximum of 35 characters may be entered.</p>
        </desc>
</t>
<t>
<field>SHUTDOWN.ROUTINE</field>
<desc>
            <p>Defines the name of the interface routine which is called from the delivery interface program to close the interface. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>RESERVED.9</field>
<desc>
            <p>This field is reserved for future use. </p>
        </desc>
</t>
<t>
<field>RESERVED.8</field>
<desc>
            <p>This field is reserved for future use. </p>
        </desc>
</t>
<t>
<field>K.NETWORK</field>
<desc>
            <p>This field can be used to specify which network connection is being used when there is a choice available.  For example, during the transition from SWIFT I to II, it could have been used to specify whether the connection was to SWIFT I or SWIFT II and whether it was being used in training mode. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 type "A" (alphanumberic) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>TIME.OUT.SECS</field>
<desc>
            <p>This field could be used to specify the maximum length of time (in seconds) to wait for a response from the carrier before it should be assumed that the connection has been broken. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-5 numeric characters.</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>RESERVED.5</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>STARTUP.ROUTINE</field>
<desc>
            <p>Defines the name of the interface routine which is called from the delivery interface program to initialise the interface. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>OUT.IF.ROUTINE</field>
<desc>
            <p>Defines the name of the interface routine which is called from the generic delivery interface program, to send the messages to the required carrier. </p>
            <p>If this field is left blank, the messages are still written to the interface file, but it is assumed that a seperate program is invoked at a later time to send the messages (for example, to create batched messages once a day). </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-50 type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>IN.IF.ROUTINE</field>
<desc>
            <p>Defines the name of the interface routine which is called from the generic delivery interface program, to receive messages from the required carrier. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-50 type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>SF.SEQUENCE</field>
<desc>
            <p>The next sequence number to be used for incoming messages. </p>
            <p>This field is updated, if required, by the inward interface routine (as defined in IN.IF.ROUTINE).  Care should be taken if updating this field manually.  However, it may sometimes be necessary to update it manually if, for example, the sequence number being used by the inward routine is different from that expected by the interface. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-12 numeric characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>INTERFACE</field>
<desc>
            <p>The name of the interface, as defined in the interface field on the carrier file, DE.CARRIER. </p>
            <p>e.g.  If SWIFT messages are to be sent via MINT, a record would be defined on DE.CARRIER with an id of SWIFT and an interface of MINT.  The id of the record on the interface will would be MINT. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-20 alphanumeric (type "A") characters</p>
            <p>Mandatory input</p>
        </desc>
</t>
<t>
<field>RESERVED.7</field>
<desc>
            <p>This field is reserved for future expansion. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>This is a NOINPUT field.</p>
        </desc>
</t>
<t>
<field>PROTOCOL</field>
<desc>
            <p>Defines the communication protocol being used by the interface routine. </p>
            <p>e.g. ATE, TCPIP </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 type "A" (alphanumeric) characters</p>
            <p>Optional input</p>
        </desc>
</t>
<t>
<field>ACK.REQUIRED</field>
<desc>
            <p>Determines whether or not an ACK is required by Delivery.  If the interface being used does not send back an acknowledgement (either positive or negative), this field should be set to "NO".  When messages are sent by the generic delivery program, if this field is set to "NO", the msg.disposition on the header record will automatically be set to "ACK";  if this field is set to "Y", the msg.disposition will be set to "AWAK" (awaiting acknowledgement) and the message will be written to the AWAK queue. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>"Y", "NO" or blank</p>
            <p>Default "Y"</p>
        </desc>
</t>
<t>
<field>ACK.ROUTINE</field>
<desc>
            <p>Defines the name of the interface routine which is called from the delivery interface program to acknowledge the reception of a message. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Type "A" (alphanumeric) characters.</p>
            <p>Optional input.</p>
        </desc>
</t>
<t>
<field>AUDIT.SEQ.CHECKING</field>
<desc>
            <p>Specifies whether sequence number checking should be performed by the generic delivery interface. </p>
            <p>If set to "Y", messages sent and received are checked to ensure that the sequence number assigned is the next sequence number expected. </p>
            <p>If set to "N", no sequence number checking is performed and the sequence numbers assigned are not validated (e.g. for inward messages, they do not have to be numeric). </p>
            <p>Default is blank as the many interface types do not permit a default of either Yes or No. This <strong>must</strong> be set by the user as required.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Y or N</p>
            <p>Default is blank - user must set correct value.</p>
        </desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
            <p>Description of the interface </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 Type "A" (alphanumeric) characters</p>
            <p>Multivalue field</p>
            <p>Multi-language field</p>
            <p>Mandatory input</p>
        </desc>
</t>
</menu>
</t24help>

