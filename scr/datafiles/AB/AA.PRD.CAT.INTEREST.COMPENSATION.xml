<?xml version="1.0" encoding="utf-8"?>
<t24help xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <header>
        <product>AB</product>
        <table>AA.PRD.CAT.INTEREST.COMPENSATION</table>
    </header>
    <overview>
        <ovdesc>
            <p>Property allows definition of source and target properties in a bundle - describing which properties contribute their balances, which product/properties act as recipients, how should accruals be handled on donor products etc. Typically, this property together with PRODUCT.BUNDLE describe the definition of a bundle and its working.</p>
        </ovdesc>
    </overview>
    <menu>
        <t>
            <field>ID.COMP.1</field>
            <desc>
                <p>Contains the arrangement number, extracted from the first component of the id</p>
                <p>Not applicable at product level</p>
                <p>System updated field no input allowed</p>
            </desc>
        </t>
        <t>
            <field>ID.COMP.2</field>
            <desc>
                <p>The action that was triggered on the arrangement property</p>
                <p>The action is taken from ACTIVITY.CLASS record of the underlying AA.ARRANGEMENT.ACTIVITY request that caused the record to be modified</p>
            </desc>
        </t>
        <t>
            <field>ID.COMP.3</field>
            <desc>
                <p>Contains the effective date of the property condition</p>
                <p>Not applicable at product level</p>
                <p>System updated field no input allowed</p>
            </desc>
        </t>
        <t>
            <field>ID.COMP.4</field>
            <desc>
                <p>Reserved for future use</p>
                <p>Not applicable at product level</p>
                <p>System field no input allowed</p>
            </desc>
        </t>
        <t>
            <field>ID.COMP.5</field>
            <desc>
                <p>Reserved for future use</p>
                <p>Not applicable at product level</p>
                <p>System field no input allowed</p>
            </desc>
        </t>
        <t>
            <field>ID.COMP.6</field>
            <desc>
                <p>Reserved for future use</p>
                <p>Not applicable at product level</p>
                <p>System field no input allowed</p>
            </desc>
        </t>
        <t>
            <field>MAX.OFFSET</field>
            <desc>
                <p>The maximum % of the recipient balance that can be offset by the Donation.</p>
                <p>For ex, in an Offset mortgage, if the Principal is -85,000 and if the Donor balances amount to credit +100,000 then specifying Max Offset as 100% would mean only 85,000 of the credit balances are offset against the Recipient’s debit balance.</p>
                <p>There is no additional benefit for the surplus 15,000 in the Donor Balances</p>
                <p>80% in Max Offset would mean only 68,000 (80% of 85,000) of the credit balance can be offset against the recipient’s debit balance</p>
                <p>In the case of Interest Compensation, this will be set to “” to indicate that there is no “Offset’ percentage but only a consolidation of Donor and Recipient balances to calculate interest on</p>
            </desc>
        </t>
        <t>
            <field>NEGOTIATED.FLDS</field>
            <desc>
                <p>No input and multi value field that lists the attributes on the arrangement property record that have been fixed and/or negotiated. These are stored when the arrangement level record is committed. Once an attribute has been fixed or negotiated it will remain in negotiated field list on all subsequent dated versions of the property.</p>
            </desc>
        </t>
        <t>
            <field>NR.ATTRIBUTE</field>
            <desc>
                <p>Defines which individual attribute (field) has the negotiation rules defined in fields "Nr.Negotiable" through to "Nr.Message"</p>
                <p/>
                <p>Must be a valid field name within this property</p>
                <p>This field is part of a multi value set</p>
            </desc>
        </t>
        <t>
            <field>NR.MESSAGE</field>
            <desc>
                <p>This field indicates whether to raise error or override message when rule is broken</p>
                <p>Allows only two values ERROR or OVERRIDE</p>
                <p>ERROR error message is raised</p>
                <p>OVERRIDE Override message is generated</p>
            </desc>
        </t>
        <t>
            <field>CHANGED.FIELDS</field>
            <desc>
                <p>No input and multi value field - lists all fields that have been negotiated for each dated version of the property. This is system maintained and is crucial for Reverse and Replay functionality. This field indicates which attributes have undergone a change in this instance. The difference between this field in NEGOTIATED.FLDS is that the latter would hold ALL the negotiations that have happened till this moment and CHANGED.FIELDS would only hold the negotiated fields for that activity.</p>
            </desc>
        </t>
        <t>
            <field>NR.OPTIONS</field>
            <desc>
                <p>Defines named values to indicate if an option applies to the associated NR.ATTRIBUTE. More than one option can be associated with the NR.ATTRIBUTE, with certain restrictions.</p>
                <p/>
                <p>Valid Inputs are NEGOTIABLE, NON-NEGOTIABLE, OVERRIDE, FIX-VALUE, MANDATORY as described below: - </p>
                <p>NEGOTIABLE</p>
                <p>The value of NEGOTIABLE will indicate that the associated NR.ATTRIBUTE can be negotiated at the arrangement level.</p>
                <p>NON-NEGOTIABLE</p>
                <p>The value of NON-NEGOTIABLE will indicate that the associated NR.ATTRIBUTE cannot be negotiated at the arrangement level. Both NEGOTIABLE and NON-NEGOTIABLE cannot be defined together </p>
                <p>OVERRIDE</p>
                <p>Specifies if a default override message should be generated if the default attribute is amended at the arrangement level. If OVERRIDE is not specified, no override will be generated.</p>
                <p>FIX-VALUE</p>
                <p>Specified if the field value is to be fixed at the arrangement level. If FIX-VALUE is not specified the field value will vary with the changes to the underlying product condition.</p>
                <p>MANDATORY</p>
                <p>Specifies if the attribute is mandatory for this product condition. Can only be specified where the attribute is not defined as mandatory in the property class.</p>
            </desc>
        </t>
        <t>
            <field>NR.RESERVED1</field>
            <desc>
                <p>System Field - Reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>NR.RESERVED2</field>
            <desc>
                <p>System Field - Reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>NR.STD.COMP</field>
            <desc>
                <p>Negotiation rules may be defined as a standard types in EB.STANDARD.COMPARISON. And those types may be used in this field.</p>
                <p/>
                <p/>
                <p>Input must be a valid record from EB.STANDARD.COMPARISON</p>
            </desc>
        </t>
        <t>
            <field>NR.TYPE</field>
            <desc>
                <p>Defines the negotiation rule that is linked to the field defined in "Nr.Attribute". If an attribute has a negotiation rule linked to it (in associated fields NR.TYPE, NR.VALUE and NR.MESSAGE) the attribute must be defined as negotiable.</p>
                <p>It is possible to define more than one negotiation rule for an attribute</p>
                <p/>
                <p>Input must be a valid record from EB.COMPARISON.TYPE</p>
                <p>This is a multi value set of fields</p>
            </desc>
        </t>
        <t>
            <field>NR.VALUE</field>
            <desc>
                <p>Defines the value that links to the rule in field "Nr.Type". For example, if the rule is not to allow a value to go below 10, then the Value of 10 has to be stated in this field and together with NR.TYPE would evaluate the rule.</p>
            </desc>
        </t>
        <t>
            <field>OVERRIDE</field>
            <desc>
                <p>Standard Override field containing override messages generated by amendments to this property</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>PR.APP.METHOD</field>
            <desc>
                <p>This will hold two values either DUE, CAPITALISE or DEFER. This Field denote which application method(DUE or CAPITALISE)should be taken while applying periodic rule charges. DEFER would not make anything DUE immediately. An option may be stated to define how long to defer.</p>
            </desc>
        </t>
        <t>
            <field>PR.APP.PERIOD</field>
            <desc>
                <p>This will have to accept a valid T24 period.The field indicates the period which is used for Evaluation of a rule. For example: If a field should not be allowed to increase more than 10000 with in a period of 1M, the field would actually hold the "1M" value.</p>
            </desc>
        </t>
        <t>
            <field>PR.ATTRIBUTE</field>
            <desc>
                <p>These are set of Attributes which define the names of the rule, which will be applied on certain attributes of property classes over a period of time. </p>
                <p/>
                <p>Input must be a valid record from AA.PERIODIC.ATTRIBUTE</p>
                <p/>
                <p/>
            </desc>
        </t>
        <t>
            <field>DEFAULT.ATTR.OPTION</field>
            <desc>
                <p>Optional field - Allowed Values are RESETTING and NON-RESETTING.</p>
                <p>RESETTING - During any Renewal Activities (for ex : CHANGE.PRODUCT) the property conditions will be reset from the product.</p>
                <p>NON-RESETTING - During any Renewal Activities property conditions will be maintained from the Arrangement level.</p>
                <p/>
                <p>The overall definition may be stated as RESETTING and certain individual attributes may be set to NON-RESETTING as well. This could be done using the NR.ATTRIBUTE fields.</p>
                <p> Leaving the field blank sets NON-RESETTING as the default option.</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>PR.BRK.CHARGE</field>
            <desc>
                <p>Charge can be collected when the periodic rule is broken.</p>
                <p>This field denotes the charge property. The property and its condition is defined the product designer and validated during publishing.</p>
                <p/>
                <p>Valid charge property</p>
            </desc>
        </t>
        <t>
            <field>PR.BRK.MSG</field>
            <desc>
                <p>Based on the PR.BRK.RES option selected, this will hold either an OVERRIDE or EB.ERROR id. By default the ids will be picked from the associated EB.COMPARISON.TYPE record. If CAP or FLOOR values are given, then the underlying AA.PERIODIC.ATTRIBUTE.CLASS should have this type defined in it.</p>
                <p/>
                <p>Input must be a valid OVERRIDE ID or EB.ERROR ID.</p>
            </desc>
        </t>
        <t>
            <field>PR.BRK.RES</field>
            <desc>
                <p>When a rule is broken what action needs to be taken is defined here. Currently, the various options available are  </p>
                <p>Error  - Blocks further processing </p>
                <p>Override - Gives an override </p>
                <p>Information - Records details only</p>
                <p>CAP the rule value is to be used as a CAP if the rule is broken(basically for Interest processing during COB)</p>
                <p>FLOOR the rule value is to be used as a FLOOR if the rule is broken.</p>
                <p/>
                <p>(basically for Interest processing during COB)</p>
                <p>Should be one of the above valid options</p>
            </desc>
        </t>
        <t>
            <field>PR.RESERVED.1</field>
            <desc>
                <p>System field - reserved for future use</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>PR.RESERVED.2</field>
            <desc>
                <p>System field - reserved for future use</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>PR.RESERVED.3</field>
            <desc>
                <p>System field - reserved for future use</p>
                <p/>
            </desc>
        </t>
        <t>
            <field>PR.VALUE</field>
            <desc>
                <p>This is the actual rule value, which will be applied on certain attributes of the property classes over a period of time.</p>
                <p/>
                <p>Input must be a valid data type defined in the corresponding</p>
                <p>AA.PERIODIC.ATTRIBUTE.CLASS record.</p>
            </desc>
        </t>
        <t>
            <field>PRODUCT.KEY</field>
            <desc>
                <p>This field represents the key to the product level conditions of a property class </p>
                <p>This field basically has three components seperated by a hyphen</p>
                <p>Condition id</p>
                <p>Currency - if the property class is currency based. By default takes up local currency</p>
                <p>Effective date - if the property class is dated</p>
            </desc>
        </t>
        <t>
            <field>RECIPIENT.PRODUCT</field>
            <desc>
                <p>Defines the product group which would act as a beneficiary for the bundle product. A beneficiary(or recipient) is the one which would enjoy the benefits of all pooled balances from various donors and their properties. Mandatory field since there has to be a beneficiary in a bundle setup.</p>
                <p>Validation Rules</p>
                <p>1. Should be a valid entry in AA.PRODUCT.GROUP</p>
                <p>2. Mandatory field</p>
            </desc>
        </t>
        <t>
            <field>RECIPIENT.PROPERTY</field>
            <desc>
                <p>Indicates which property in the group above would act as a beneficiary in a bundle. Only one property could act as a recipient. Currently only allows a valid interest property and the property should belong to the group stated above. For example, a LOANINTEREST property could be stated as a valid beneficiary property and the balances from Current and Savings account could be pooled towards calculation of LOANINTEREST.</p>
                <p>Validation Rules</p>
                <p>1. Should be a valid AA.PROPERTY belonging to INTEREST class</p>
                <p>2. Should be a property belonging to the RECIPIENT.PRODUCT group.</p>
                <p>3. Mandatory field</p>
            </desc>
        </t>
        <t>
            <field>DEFAULT.NEGOTIABLE</field>
            <desc>
                <p>Defines whether all attributes (fields) can be negotiable or not. The overall definition may be stated as NON-NEGOTIABLE and certain individual attributes may be set to NEGOTIABLE as well. This could be done using the NR.ATTRIBUTE fields.</p>
                <p/>
                <p>This field is Mandatory</p>
                <p>Valid options are YES and NO</p>
            </desc>
        </t>
        <t>
            <field>STMT.NOS</field>
            <desc>
                <p>System field - not used for property conditions</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE1</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE2</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE3</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE4</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE5</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE6</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>SYS.RESERVE7</field>
            <desc>
                <p>System field - reserved for future use</p>
            </desc>
        </t>
        <t>
            <field>TARGET.PRODUCT</field>
            <desc>
                <p>This field denotes the target classic product of the given property class</p>
                <p>The already existing T24 products are mapped using AA infrastructure</p>
                <p>These are called classic products</p>
                <p>These products are mapped to different property clases</p>
            </desc>
        </t>
        <t>
            <field>DESCRIPTION</field>
            <desc>
                <p>Used to define the Description of a product condition. Language specific field and multiple language descriptions are supported</p>
            </desc>
        </t>
        <t>
            <field>DONAR.BALANCE.TYPE</field>
            <desc>
                <p>A user can optionally specifiy one or more Balances being donated by the donor.</p>
                <p>Sub Valued field to allow multiple balance types to be donated.</p>
                <p>Specify the actual Balance type that needs to be taken for compensation.</p>
                <p>If this field is left blank, then it means that donor is not donating any balance.</p>
                <p>This may prove useful when a participant, by just being part of a package, there is a need to suppress their Interest (say, a Penalty Interest) which would otherwise accrue based on unauthorised overdraft balances</p>
            </desc>
        </t>
        <t>
            <field>DONATE.TYPE</field>
            <desc>
                <p>The Credit/Debit specification at the bundle contradicts with the Source Calc type of the Interest property</p>
                <p>Sub Value field associated with Donor Balance Type</p>
                <p>Input is allowed only if Donor Balance Type is input</p>
                <p>Because the Donor Balance type can have Credit or Debit balances on a given day, there would be a flag to specify which balances of the balance type should be used for Offset</p>
            </desc>
        </t>
        <t>
            <field>DONOR.ACCRUAL</field>
            <desc>
                <p>After the donor property has contributed its balance to a pool which recipient would accrue on, generally the bank might want to stop accruals on the donor side (If accruals happen on both donor and recipient for the same balance, it moght result in inflated PL). This field indicates whether the financical institution would want to stop accruals on donor and accruals happen only on recipient arrangement. When the field is flagged as "SUPPRESS" then system would flag the SUPPRESS.ACCRUAL field on the interest condition of this property as YES which indicates accruals would no longer happen on those conditions</p>
                <p>Validation Rules</p>
                <p>1. Mandatory field</p>
                <p>2. SUPPRESS - indicates accruals would be stopped at the donor level since balances accrue at the recipient level.</p>
                <p>3. CALCULATE - indicates accruals would continue to happen on Donor arrangement properties as well even though balances are contributed to recipient level as well. This may be required when the recipient accrual is only on a margin rate and not on actual interest rate.</p>
            </desc>
        </t>
        <t>
            <field>DONOR.PRODUCT</field>
            <desc>
                <p>Defines the product group which would act as a contributor or donor for the bundle product. A donor product would contribute its balances to recipient property and would generally not accrue on its own balance(so that there is no double accrual). Mandatory field since there has to be a beneficiary in a bundle setup.</p>
                <p/>
                <p>Validation Rules</p>
                <p/>
                <p>Should be a valid entry in AA.PRODUCT</p>
            </desc>
        </t>
        <t>
            <field>DONOR.PROPERTY</field>
            <desc>
                <p>Indicates which property(ies) in the group above would act as contributor in a bundle. One or more than one properties could contribute to a bundle. Currently only allows a valid interest property and the property should belong to the group stated above. For example, a CREDITINTEREST property could be stated as a valid donor property. The actual balance that this property would contribute is still derived from the base balance on which this property calculates on this product. There would be no actual ""transfer"" of balances to recipient arrangements - the balances of donors would be considered during run-time when the recipient property accrues.</p>
                <p>Validation Rules</p>
                <p>1. Should be a valid AA.PROPERTY belonging to INTEREST class</p>
                <p>2. Should be a property belonging to the DONOR.PRODUCT group</p>
                <p>3. Mandatory field</p>
            </desc>
        </t>
    </menu>
</t24help>
