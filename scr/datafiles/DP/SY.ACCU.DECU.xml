<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>DP</product>
<table>SY.ACCU.DECU</table>
</header>
<overview>
<ovdesc>
            <p>SY.ACCU.DECU is the transaction processing application used for booking accumulator/decumulator contracts. </p>
            <p />
            <p>Accumulators are structured products that allow investors to purchase shares at a pre-determined strike price, which is at a discount to the current stock price. An investor purchases (accumulates), a fixed quantity of an underlying share at the strike price, on each trading day of the investment period.</p>
            <p />
            <p>Decumulators on the other hand, are structured products that allow investors to sell a fixed quantity of an underlying share at a pre-determined strike price, on each trading day of the investment period. This forward price is set at a premium to the initial spot price of the underlying share. </p>
            <p />
            <p>Accumulators and Decumulators are structured with a knock-out feature. This means that they can be early terminated when the price of the underlying share closes at above/below a pre-determined barrier price (also known as knock-out price which is set below the initial spot price). </p>
            <p>When the price of the underlying share closes at above or below the pre-determined barrier price, a knock-out event is deemed to have occurred. The shares are accrued on a daily basis. Settlement of aggregate units occurs regularly on pre-determined settlement dates. </p>
            <p />
            <p>Apart from being the input application for recording accumulator/decumulator contracts, the SY.ACCU.DECU application also tracks the lifecycle of the contract from inception to its termination. </p>
            <p>Termination of the contract could occur  when the contractually agreed maturity date is reached or through various exit triggers such as 'Knock Out' or 'Unwind'. The exit triggers for the contract is also updated within the SY.ACCU.DECU application.</p>
            <p />
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>ACCU.DECU.ID</field>
<desc>
            <p>This is the Record ID for the application. The ID is of the format 'SYACDCJJJJJSSSSS', Where SYACDC is the prefix ,JJJJJ is the julian date , SSSSS is the sequence number. </p>
            <p>Example : SYACDC00021500001 - This the first contract input on 2nd Jan 2015. </p>
            <p />
        </desc>
</t>
<t>
<field>PRODUCT.TYPE</field>
<desc>
            <p>This field accepts the below values : </p>
            <p>ACCMULATOR  - Indicates this is an accumulator contract- the underlying security is accumulated or purchased at periodic intervals. </p>
            <p>DECUMULATOR - Indicates this is an decumulator contract - the underlying security is decumulated/sold at periodic intervals. </p>
        </desc>
</t>
<t>
<field>VARIANT</field>
<desc>
            <p>Product variants can be defined and configured in the SY.PRODUCT.VARIANT application. Linking the product variant in this field will ensure that the corresponding parameters and configuration would be applied to this contract. </p>
            <p>If this field is NULL, the parameters defined in SY.PRODUCT.DEFINTION for ACCUDECU would be applied. </p>            
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                Only variants with prefix as 'ACCUDECU_' will be accepted. </p>            
        </desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
            <p>This free text field and can be used to record the description of the contract.</p>
        </desc>
</t>
<t>
<field>CONTRACT.STATUS</field>
<desc>
            <p>The status of the contract is updated in this field. When the contract is created , the status will be  'ACTIVE',  subsequently  as the contract undergoes various life cycle events, the status is updated as below.</p>
            <p>ACTIVE - The  contract is active. </p>
            <p>MATURED - The  contract is matured. i.e. the contract has completed its full life cycle. </p>
            <p>KNOCKOUT - The contract is knocked out, i.e. the knock out barrier price is breached. </p>
            <p>UNWOUND - The contract is terminated early - before the maturity date. </p>
            <p>NOVATED - The contract is novated, i.e the position is transfered and the contract is terminated. </p>
            <p />
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>CONTRACT.IDENTIFIER</field>
<desc>
            <p>AD VALOREN number assigned to this contract can be updated in this field.</p>
        </desc>
</t>
<t>
<field>PRINCIPAL.AGENT</field>
<desc>
            <p>This field accepts the following values :</p>
            <p>PRINCIPAL - Indicates that the bank is acting as a principal in this transaction.</p>
            <p>AGENT     - Indicates that the bank is acting as an agent in this transaction.</p>
            <p>Bank's role in the SY contract is recorded here </p>
        </desc>
</t>
<t>
<field>COUNTERPARTY.TRADE</field>
<desc>
            <p>An Accumulator/Decumulator contract is generally booked as two separate transaction legs. Customer transacts with the bank (Dealer book) -  the bank covers or hedges this position  by a market side transaction.</p>
            <p>Setting this field to 'Yes' indicates that this is a market side transaction. This field is used for reporting purposes.</p>            
        </desc>
</t>
<t>
<field>OPTION.TYPE</field>
<desc>
            <p>This field holds the option type of the underlying option. This is auto populated based on the PRODUCT.TYPE field. </p>
            <p>For ACCUMULATOR contract - the underlying would be a PUT option, for DECUMULATOR contract- the underlying would be  a CALL option. </p>
        </desc>
</t>
<t>
<field>TRADE.DATE</field>
<desc>
            <p>Holds the trade date of the contract. Trade date cannot be forward dated and should fall between the FIRST.DATE and LAST.DATE of the corresponding product definition record. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'.</p>
        </desc>
</t>
<t>
<field>VALUE.DATE</field>
<desc>
            <p>Date on which the accrual of shares commences. Defaults from the trade date if not input. Value date cannot be earlier than the trade date. </p>
            <p>Accrual will start from value date of the contract, if knock in price is not given. If knock in price is given then accrual will start from the day on which KNOCK.IN is set. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>TERM</field>
<desc>
            <p>This field holds the tenor of the contract. The Tenor can be expressed as a number of Days, Weeks or Months. Input in this field has to be in the format nnnD, nnnM or nnnW where nnn is represents the numeric component. D signifies Days (working days) ,M signifies Months and W signifies Weeks </p>
        </desc>
</t>
<t>
<field>MATURITY.DATE</field>
<desc>
            <p>Maturity date is the termination date of the contract.  Maturity date will be defaulted based on TERM and VALUE.DATE</p>
        </desc>
</t>
<t>
<field>SECURITY.CODE</field>
<desc>
            <p>The underlying security which is accumulated/decumulated in this contract is captured in this field. Units of this security would be accrued and settled periodically. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>STOCK.EXCHANGE</field>
<desc>
            <p>The STOCK.EXCHANGE in which the security is traded will be defaulted here.</p>
        </desc>
</t>
<t>
<field>DX.CONTRACT.CODE</field>
<desc>
            <p>As a prerequisite to transact in Accumulator/Decumulator, a DX.CONTRACT.MASTER needs to be set up. The underlying for this contract will be the instrument (From SECURITY.CODE field). </p>
            <p>The contract master id is captured in this field. When the accumulator/Decumulator contract is committed, an DX.TRADE (PUT option for Accumulator, CALL option for decumulator) would be created for this contract. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                This field will accept a DX.CONTRACT.MASTER which has security as the only underlying. </p>
            <p>                This contract should be of type 'Option' and should be set up as a daily maturity contract.</p>
        </desc>
</t>
<t>
<field>CONTRACT.CCY</field>
<desc>
            <p>Contract currency is captured in this field. The Security currency of underlying would be defaulted if this field is left blank.</p>
        </desc>
</t>
<t>
<field>REFERENCE.PRICE</field>
<desc>
            <p>The spot price of the underlying security (at the time of contract booking) is updated in this field. If left blank, the last price from the underlying security would default.</p>
        </desc>
</t>
<t>
<field>STRIKE.PRICE1</field>
<desc>
            <p>The forward price at which the accumulation (purchases) or decumulation (sale) of the underlying would be effected is captured in this field. i.e. this would be the price used for the security settlement.</p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'.</p>
        </desc>
</t>
<t>
<field>STRIKE.PRICE2</field>
<desc>
            <p>For contracts with dual strike prices, the second strike price can be updated in this field. This field is used for information purposes.</p>
        </desc>
</t>
<t>
<field>KNOCKIN.PRICE</field>
<desc>
            <p>This field will allow the user the store the price barrier for knock in. Only when this price barrier is breached, the contract becomes effective.If  this field is populated, then accrual would commence only when  KNOCK.IN flag is set.</p>
            <p>Price tracking is outside the system, when  the Knock in  barrier is breached, this is indicated by setting the KNOCK.IN flag.</p>
        </desc>
</t>
<t>
<field>KNOCKOUT.PRICE</field>
<desc>
            <p>This field will allow the user to store the price barrier for knock out. When this price barrier is breached, the contract gets terminated.</p>
            <p>Price tracking is outside the system, when  the Knock out  barrier is breached, this is indicated by setting the KNOCK.OUT flag.</p>
        </desc>
</t>
<t>
<field>DAILY.UNITS</field>
<desc>
            <p>This field will hold the number of  units(nominal) to be accrued per day. The value should be in multiple of contract size of the underlying DX.CONTRACT.MASTER.</p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>GEARING</field>
<desc>
            <p>The leverage (gearing) factor for leveraged contracts is captured in this field. The gearing factor would be applied to accruals on those days where the spot price is below STRIKE.PRICE1 for accumulators , spot price is above the STRIKE.PRICE1 for decumulator contracts. </p>
            <p>For example, if the gearing factor is 2 , and the spot price of the underlying is less than the STRIKE.PRICE1 for an accumulator contract on a particular day, then accrual for that day would be 2 times the quantity specified in DAILY.UNITS. </p>
        </desc>
</t>
<t>
<field>SUPPRESS.UNDERLYING</field>
<desc>
            <p>If this field is set to 'Yes',  system will not create the underlying transactions when the contract is committed. It is expected that the underlying transactions will be created manually or interfaced from a different system and the contract can be linked to ACCUDECU using SY.DX.REFERENCE.</p>
            <p>For such contracts, lifecycle events of the contract such as accrual, fixing etc. should be managed externally (Manually or interfaced from an external system).</p>
            <p>If this field is set to 'No', underlying transactions will be created by the system. The lifecycle events of the contract will be processed by the system. </p>
            <p>This field will be defaulted from SY.PRODUCT.VARIANT. If SY.PRODUCT.VARIANT is not defined, then the value will be defaulted from SY.PRODUCT.DEFINITION. </p>
            <p>The following fields would be "No Change" if SUPPRESS.UNDERLYING field is set to 'No'</p>
            <p>VARIANT</p>
			<p>TRADEDATE</p>
			<p>VALUEDATE</p>
			<p>DXCONTRACTCODE</p>
			<p>STRIKEPRICE1</p>
			<p>CUSTOMER</p>
			<p>PORTFOLIO</p>
			<p>CUSTOMERACCOUNT</p>
			<p>COUNTERPARTY</p>
			<p>CPARTYPORTFOLIO</p>
			<p>COUNTERPARTYACC</p>
			<p>CONTRACTSTATUS</p>
			<p>DAILYUNITS</p>               
        </desc>
</t>
<t>
<field>MIN.ACCRUAL.PERIOD</field>
<desc>
            <p>This field is applicable for contracts with guaranteed accumulation/Decumulation. For such contracts, even if the contract gets knocked out early in its lifecycle, the investor is guaranteed settlement  of certain units of the underlying. </p>
            <p>For example, for an accumulator contract with 12 fixing periods, the accumulation for the first 2 periods could be guaranteed. Even if the contract gets knocked out in the first fixing period, the investor still purchases shares for the first 2 fixing period. </p>
            <p>This field holds the number of guaranteed fixing periods applicable for this contract. In this example,  this field will hold the  value 2.</p>
        </desc>
</t>
<t>
<field>PROTECTED.DATE</field>
<desc>
            <p>This field will be populated with the last date of the MIN.ACCRUAL.PERIOD. For example, if the MIN.ACCRUAL.PERIOD is 2, this field would default to the last day of the second fixing period.</p>
        </desc>
</t>
<t>
<field>MIN.PERIOD.KOUT</field>
<desc>
            <p>This field will be defaulted from SY.PRODUCT.VARIANT. If SY.PRODUCT.VARIANT is not given, then the value will be defaulted from SY.PRODUCT.DEFINITION, this field can also be amended manually. </p>
            <p>If this field is set to YES, then the contract will be knocked out immediately with nominal for the entire minimum accrual period. </p>
            <p>If this field is null or set to NO  and the contract gets knocked out within the  MIN.ACCRUAL.PERIOD, then accrual would continue unto the PROTECTED.DATE and the guaranteed units of shares will be settled at that point of time. </p>
        </desc>
</t>
<t>
<field>TOT.WORK.DAYS</field>
<desc>
            <p>The total number of working days(using the holiday calendar of STOCK.EXCHANGE) between value date and maturity date is calculated and stored in this field. If the contract does not gets knocked out, the accrual would happen for these many days.</p>
        </desc>
</t>
<t>
<field>TOTAL.UNITS</field>
<desc>
            <p>This field will hold the maximum number of underlying security  that could be settled/delivered by this contract. The value will be calculated based on the following formula DAILY.UNITS * TOT.WORK.DAYS * GEARING. </p>
            <p>The underlying option would be created for these many units. </p>
        </desc>
</t>
<t>
<field>CUSTOMER</field>
<desc>
            <p>This field records the investor for this contract. For the client trade, this would be the customer, for the counterparty trade, this would be the DEALER.BOOK. </p>
            <p>The customer should be defined in both CUSTOMER.SECURITY and DX.CUSTOMER. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>PORTFOLIO</field>
<desc>
            <p>This field will hold the portfolio of the customer for this contract. When left blank, the first portfolio of the CUSTOMER will be defaulted.</p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'.</p>
        </desc>
</t>
<t>
<field>CUSTOMER.ACCOUNT</field>
<desc>
            <p>This account will be used to post the accounting entries for the customer. The same account will be also be the default account on the underlying trade created by the system. </p>
            <p>The field will be  defaulted  to the Account specified on the Customer's SEC ACC MASTER record, for the CONTRACT CCY or (if no Account in the CONTRACT CCY is specified) to the Customer's first Account on the SEC ACC MASTER record. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'.</p>
        </desc>
</t>
<t>
<field>SECURITY.POS</field>
<desc>
            <p>For decumulator contracts, where the underlying  is sold at periodic intervals,  a security block needs to be placed to ensure that sufficient shares are available for sale. </p>
            <p>This field will hold the SECURITY.POSITION ID which would be used to block the nominal defined in BLOCK.NOMINALS. Security block would be created using the blocking application SC.BLOCK.SEC.POS. </p>
            <p>This is a multi value field as the security can be held in multiple depositories and the block could be across multiple position. </p>
            <p>Once the SC.BLOCK.SEC.POS record is generated for the blocked position and if the ID of SC.BLOCK.SEC.POS is stored in BLOCK.REF.SC then the values in the current associative multivalued fields starting from SECURITY.POS to BLOCK.REF.SC cant be changed.</p>
            <p>However multivalue can be expanded and new position can be blocked. </p>
        </desc>
</t>
<t>
<field>BLOCK.NOMINAL</field>
<desc>
            <p>This field holds the number of  units of underlying that has to be blocked against the associated SECURITY.POS. </p>
        </desc>
</t>
<t>
<field>BLOCK.UNTIL.SC</field>
<desc>
            <p>This field will hold the end date of the security block.</p>
        </desc>
</t>
<t>
<field>BLOCK.REF.SC</field>
<desc>
            <p>Once the block is created through the blocking application SC.BLOCK.SEC.POS, the block reference is updated in this field.</p>
        </desc>
</t>
<t>
<field>BLOCK.FUNDS</field>
<desc>
            <p>For accumulator contracts, where there is a forward dated obligation to purchase the underlying security at periodic intervals, a cash block might be required to ensure availability of sufficient funds.</p>
            <p>The funds can be blocked by placing a cash block in the account or by moving the funds to a different account. This field will be used indicate the preferred action.</p>
            <p>If it is set to BLOCK then the value in BLOCK.AMOUNT will be blocked by creating a record in AC.LOCKED.EVENTS or if the field is set to DEBIT, then entries will be raised to debit the BLOCK.AMOUNT from BLOCK.ACCOUNT and to credit it to CREDIT.ACCOUNT.</p>
            <p>If the field is set to null neither blocking nor debiting happens. Once the AC.LOCKED.EVENT ID is generated in BLOCK.REF.AC, fields from BLOCK.FUNDS to BLOCK.REF.AC cannot be amended.</p>
        </desc>
</t>
<t>
<field>BLOCK.AMOUNT</field>
<desc>
            <p>This field total amount of cash that needs to be blocked.</p>
        </desc>
</t>
<t>
<field>BLOCK.ACCOUNT</field>
<desc>
            <p>This field will hold the funding account which would be used to effect the block.</p>
        </desc>
</t>
<t>
<field>CREDIT.ACCOUNT</field>
<desc>
            <p>If the funds are to be moved to a separate account, this account is specified here.</p>
        </desc>
</t>
<t>
<field>BLOCK.UNTIL.AC</field>
<desc>
            <p>This field will hold the end date of the cash block.</p>
        </desc>
</t>
<t>
<field>BLOCKED.REF.AC</field>
<desc>
            <p>If BLOCK option is chosen in BLOCK.FUNDS, this field will store the ID of AC.LOCKED.EVENTS generated.</p>
        </desc>
</t>
<t>
<field>COUNTERPARTY</field>
<desc>
            <p>The counterparty for the contract is  updated in this field. In the client trade, COUNTERPARTY would be the dealer book in the client transaction and it would be the external counterparty for the back to back or counterparty trade. </p>
            <p>The counterparty should be defined in both CUSTOMER.SECURITY and DX.CUSTOMER. No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>CPARTY.PORTFOLIO</field>
<desc>
            <p>This field will hold the portfolio of the counterparty. If portfolio exist for the counterparty, then this field will be defaulted with the first portfolio of the counterparty. </p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>COUNTERPARTY.ACC</field>
<desc>
            <p>Defaults the Account over which financial entries relating to the counterparty will be posted.</p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'.</p>
        </desc>
</t>
<t>
<field>PREMIUM.CCY</field>
<desc>
            <p>This field will hold the currency in which premium is specified. Default would be  CONTRACT.CCY</p>
        </desc>
</t>
<t>
<field>PREMIUM.PER.LOT</field>
<desc>
            <p>This field hold the premium per unit of underlying. Premium amount is calculated using the formula TOTAL.UNITS * PREMIUM.PER.LOT</p>
        </desc>
</t>
<t>
<field>PREMIUM.AMT</field>
<desc>
            <p>This will be the total premium amount that will be collected from the customer for the entire lot.</p>
        </desc>
</t>
<t>
<field>PREMIUM.ACC</field>
<desc>
            <p>The premium amount will be debited from this account.</p>
        </desc>
</t>
<t>
<field>PREMIUM.PAYMENT.DATE</field>
<desc>
            <p>This field will hold the date on which premium should be posted, if the date is not given then premium will be posted for the day on which it was entered. </p>
        </desc>
</t>
<t>
<field>NOTIONAL.AMT</field>
<desc>
            <p>This field will hold the notional amount for contract. This would be calculated using the formula  TOTAL.UNITS * STRIKE.PRICE1. Notional amount is denoted in the contract currency.</p>
            <p>Off Balance sheet, contingent entries would be posted for this amount. This can be input by the user which would override the calculation done by the system. </p>
        </desc>
</t>
<t>
<field>RUN.NOTIONAL.AMT</field>
<desc>
            <p>As the contract is settled periodically (which is known as FIXING), the pending units are reduced. The outstanding notional (i.e. unsettled) also gets reduced proportionately. The outstanding notional is updated by the system at each fixing.</p>
        </desc>
</t>
<t>
<field>SETTLEMENT.METHOD</field>
<desc>
            <p>This field holds the delivery method for the underlying. The field will be defaulted from DX.CONTRACT.MASTER and can be changed manually.  This is a no change field after authorization of the contract.</p>
            <p>During the Fixing event, </p>
            <p>If the SETTLEMENT.METHOD is CASH then SETTLEMENT.AMOUNT will be settled in DELIVERY.CCY </p>
            <p>If SETTLEMENT.METHOD is PHYSICAL and SETTLEMENT.INSTRUMENT is defined then SETTLEMENT.INSTRUMENT will be exercised for the SETTL.INSTR.UNITS at SETT.INSTR.PRICE. </p>
            <p>If SETTLEMENT.INSTRUMENT is not given then security given in SECURITY.CODE will be exercised for the ACCRUED.UNITS1 at STRIKE.PRICE1. </p>
        </desc>
</t>
<t>
<field>ALTERNATE.REF</field>
<desc>
            <p>This field can be used to store an alternate reference for the contract. This would be especially useful, when the contract is sourced from an external system. The external system reference can be updated here.</p>
        </desc>
</t>
<t>
<field>SY.DX.REFERENCE</field>
<desc>
            <p>This is the  unique reference that will bind the structure (ACCUDECU contract) with all its underlying transactions.</p>
            <p>For example, when an accumulator contract is created, the underlying option is created through DX.TRADE. As the contract gets fixed (periodic settlement), the settlement happens through a SEC.TRADE transaction. All three transactions , SY.ACCU.DECU contract, DX.TRADE and SEC.TRADE will be updated  with this reference.</p>
            <p>This reference can be input by user, if left blank, the contract id would be populated</p>
        </desc>
</t>
<t>
<field>B2B.REFERENCE</field>
<desc>
            <p>Accumulator/Decumulator contracts are booked as two transactions. The Client transacts with the bank (dealer book). The bank then covers or hedges this position by entering into a back to back transaction with the counterparty. </p>
            <p>The reference of the back to back transaction can be stored in this field.</p>
        </desc>
</t>
<t>
<field>UNDERLYING.REF</field>
<desc>
            <p>This field will hold the reference of the underlying contract (DX.TRADE ID). </p>
        </desc>
</t>
<t>
<field>TRANS.REFERENCE</field>
<desc>
            <p>This field will hold SY.TRANSACTION ID.</p>
        </desc>
</t>
<t>
<field>KNOCK.IN</field>
<desc>
            <p>This field is applicable for contracts with knock in feature. The contract becomes effective only when the knock in price barrier is breached. Price tracking is done outside the system, occurrence of knock in event (i.e. breach of knock in price) is indicated to the system by setting this flag to 'Yes'.</p>
            <p>Accrual would commence only when this flag is set  to 'Yes' for a knock in contract </p>
        </desc>
</t>
<t>
<field>PRICE.AT.KNOCK.IN</field>
<desc>
            <p>This is the price of the underlying security at the time of occurrence of the Knock in event. i.e. This is the price which has breached the knock in price barrier. This is stored for information purposes. </p>
        </desc>
</t>
<t>
<field>KNOCK.OUT</field>
<desc>
            <p>The contract gets terminated when the Knock out price barrier is breached. Price tracking is done outside the system, occurrence of the knockout event is indicated to the system by  setting this flag to 'Yes'. </p>
        </desc>
</t>
<t>
<field>PRICE.AT.KNOCK.OUT</field>
<desc>
            <p>This is the price of the underlying security at the time of occurrence of the knock out event. This is stored for information purposes.</p>
        </desc>
</t>
<t>
<field>UNWIND</field>
<desc>
            <p>The fields from 'UNWIND' to 'NEW.TOTAL.UNITS' are part of a multi value set. The contract can be pre-closed or terminated before the maturity date. Early closure is also referred to as "Unwinding" of the contract. </p>
            <p>A penalty charge (unwind charge) can also be applied for early termination.</p>
            <p />
            <p>Allowed values - </p>
            <p>'YES' - Early termination is initiated, units from current fixing to last fixing period will be expired. </p>
            <p>'FULL' - Units accrued in the current fixing will be exercised and the remaining units of the contract will be expired. </p>
            <p>'PARTIAL' - The contract will be partially expire the lots considering the value in NEW.DAILY.UNITS. </p>
            <p />
            <p>In case of Partial Unwinding, the contract will continue with reduced obligations. (The field NEW.DAILY.UNITS will capture the reduced obligation). It is possible to do partial unwind more than once,  this can be achieved by multivaluing the unwind set of fields.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                If this field holds the values FULL or YES, then the multivalue set cant be expanded further. </p>
            <p>                This field cant be set to YES or FULL, if KNOCK.OUT or NOVATION is set. </p>
        </desc>
</t>
<t>
<field>UNWIND.CHG.CCY</field>
<desc>
            <p>This field will record the currency in which unwind charge be collected.</p>
        </desc>
</t>
<t>
<field>UNWIND.CHG.AMT</field>
<desc>
            <p>This field holds the amount of unwinding penalty on the street leg of the deal. </p>
        </desc>
</t>
<t>
<field>UNWIND.CHG.ACC</field>
<desc>
            <p>The customer account from which the unwinding charges would be collected will be specified in this field. The account should be in the currency specified in UNWIND.CHG.CCY. </p>
        </desc>
</t>
<t>
<field>UNWIND.SPREAD</field>
<desc>
            <p>This field holds the bank's mark up on the unwinding penalty.</p>
        </desc>
</t>
<t>
<field>UNWIND.TOT.CHARGE</field>
<desc>
            <p>This is the sum of  UNWIND.CHG.AMT and UNWIND.SPREAD and this will be actual penalty amount that will be charged to the customer. </p>
        </desc>
</t>
<t>
<field>UNWIND.EFF.DATE</field>
<desc>
            <p>This field holds the effective date of unwinding. This date can be a back date, forward date or current date. This field needs to within the current fixing period, i.e., it cannot be earlier than the previous fixing date or later than the next fixing date.</p>
            <p>Units would be accrued from the last fixing date to the unwind effective date based on the DAILY.UNITS,  post the unwind effective date, accrual would be for the NEW.DAILY.UNITS. </p>
            <p>Defaults to the current system date. The unwind event would run on  this date.</p>
        </desc>
</t>
<t>
<field>UNWIND.STATUS</field>
<desc>
            <p>Once the unwind event runs , UNWIND.STATUS is updated as  'Processed'. Once the status is updated as 'Processed', the fields in this multivalue set cannot be amended. </p>           
        </desc>
</t>
<t>
<field>NEW.DAILY.UNITS</field>
<desc>
            <p>In case of partial unwinding, this field holds the reduced obligation. Accrual would happen for these many units,  from unwind effective date onwards. </p>           
        </desc>
</t>
<t>
<field>NEW.TOTAL.UNITS</field>
<desc>
            <p>Based on the reduced obligation in DAILY.UNITS,  total units for the remaining days is calculated and stored in this field. </p>           
        </desc>
</t>
<t>
<field>SUSPEND.ACCRUAL</field>
<desc>
            <p>Trading in the underlying security can be suspended due to various reasons. Trading can be suspended as a result of a Corporate Action. In such situations, the accrual for the accumulator /decumulator contract also needs to be suspended. </p>
            <p>This is indicated to the system by setting this field to 'Yes'.  Once set, accrual and fixing would be suspended between SUSPENSION.DATE and SUSP.RESET.DATE. </p>
        </desc>
</t>
<t>
<field>SUSPENSION.DATE</field>
<desc>
            <p>Accrual/Fixing suspension start date.</p>
        </desc>
</t>
<t>
<field>SUSP.RESET.DATE</field>
<desc>
            <p>Accrual/Fixing suspension end date.</p>
        </desc>
</t>
<t>
<field>FIX.SUSPENSION</field>
<desc>
            <p>When this field is set to YES, if the fixing periods falls in the suspension period then all the nominal accrued until the SUSP.RESET.DATE will be fixed on SUSP.RESET.DATE.</p>
            <p>If this field is NO or Null then all the accrued units until the last suspended fixing period will be done on SUSP.RESET.DATE and the remaining accrued units will be added to the next fixing period. </p>
        </desc>
</t>
<t>
<field>FIXING.FREQUENCY</field>
<desc>
            <p>Accumulator/Decumulator contracts accrue the underlying security on a daily basis. The accrued units are settled periodically (This periodic settlement is known as fixing).</p>
            <p>This settlement frequency is captured in this field. Settlement of shares is effected by a SEC.TRADE transaction.</p>
        </desc>
</t>
<t>
<field>FIXING.DATE</field>
<desc>
            <p>Based on the fixing frequency, a fixing schedule is generated between the value date and maturity date. Fixing date is the date on which the accrued units are settled. </p>
            <p>The fields from FIXING.DATE to FIXED.STATUS are part of an associated multi value set of fields. There will be as many multi value sets as there are fixing periods. This will the Trade date in the SEC.TRADE transaction. </p>
        </desc>
</t>
<t>
<field>WORKING.DAYS</field>
<desc>
            <p>This field will show the number of workings days in each fixing period. The number of working days are calculated using the holiday calendar of the STOCK.EXCHANGE</p>
        </desc>
</t>
<t>
<field>SETTLEMENT.DATE</field>
<desc>
            <p>This will be the value date in the SEC.TRADE transaction generated for share settlement. This date will be defaulted based on the SETTLEMENT.DAYS defined in the STOCK.EXCHANGE</p>
        </desc>    
</t>
<t>
<field>ACCRUED.UNITS1</field>
<desc>
            <p>Units are accrued on a daily basis and the accrued units are updated in this field. At the time of fixing, the value in this field would be units of shares that will be settled.</p>
            <p>No change field if SUPPRESS.UNDERLYING is set to 'No'. </p>
        </desc>
</t>
<t>
<field>ACCRUED.UNITS2</field>
<desc>
            <p>This field would be applicable for dual strike contracts. For such contracts the accrual can be at either the first strike price or the second strike price. This field can be used to store the accrual at the second strike price. </p>
            <p>This field is for information purposes. </p>
        </desc>
</t>
<t>
<field>FIXED.STATUS</field>
<desc>
            <p>This will hold the status of the current fixing period.</p>
            <p>SUSPENDED - The fixing period is suspended.</p>
            <p>FIXED - The fixing has happen successfully.</p>
            <p>SUSP.FIXED - The fixing was suspended and then fixed.</p>
        </desc>
</t>
<t>
<field>ACCRUED.UNTIL</field>
<desc>
            <p>This field will hold the date untill which the nominal is accrued.</p>
        </desc>
</t>
<t>
<field>SETT.INSTR.UNITS</field>
<desc>
            <p>This field specifies the number of units of settlement instrument which should be settled at the time of fixing. This is relevant, when the contract is settled through an alternate instrument such as a participatory note.</p>
            <p>The field is mandatory when SETTLEMENT.METHOD is PHYSICAL and if SETTLMENT.INSTRUMENT is given. This field will be part of the fixing multi-value set. SEC.TRADE would be created for these many units. </p>
        </desc>
</t>
<t>
<field>SETT.INSTR.PRICE</field>
<desc>
            <p>This field specifies the price at which the settlement  instrument will be transacted.  This is relevant, when the contract is settled through an alternate instrument such as a participatory note. </p>
            <p>The field is mandatory when SETTLEMENT.METHOD is PHYSICAL and if SETTLMENT.INSTRUMENT is given. This will be part of the multi value set for each fixing. SEC.TRADE created as part of the fixing event would be created for this price.</p>
        </desc>
</t>
<t>
<field>MARKET.PRICE</field>
<desc>
            <p>This field holds the market price of the underlying equity at the time of fixing. This market price would be used calculate the cash settlement amount for cash settled contracts. </p>
        </desc>
</t>
<t>
<field>DLV.EXCH.RATE</field>
<desc>
            <p>For cash settled contracts, the settlement payout would happen in the DELIVERY.CCY. If the delivery currency is different from the contract currency, the exchange rate between the delivery currency and the contract currency will default from the currency table and it can be amended. </p>
        </desc>
</t>
<t>
<field>SETTLEMENT.AMOUNT</field>
<desc>
            <p>Settlement amount will be settled in delivery currency. Settlement amount will be the difference between the strike price and market price times the accrued units. Settlement amount would be as below. </p>
            <p>For Accumulators if the Market price is greater than stirke price then settlement amount is positive else it is negative. </p>
            <p>For Decumulators if the Market price is greater than stirke price then settlement amount is negative else it is positive. </p>
        </desc>
</t>
<t>
<field>FEE.CCY</field>
<desc>
            <p>The field will hold currency in which the fees will be collected</p>
        </desc>
</t>
<t>
<field>FEE.AMT</field>
<desc>
            <p>The field will hold the Fee amount</p>
        </desc>
</t>
<t>
<field>FEE.ACCT</field>
<desc>
            <p>The field will hold the Account from which the fees will be debited.</p>
        </desc>
</t>
<t>
<field>STMT.NOS</field>
<desc>
            <p>Standard T24 statement number field</p>
        </desc>
</t>
<t>
<field>SETTLEMENT.METHOD</field>
<desc>
            <p>This field will indicate how the delivery of the underlying will happen. The field will be defaulted from DX.CONTRACT.MASTER and can be changed manually. </p>
            <p>During the Fixing event if the SETTLEMENT.METHOD is CASH then SETTLEMENT.AMOUNT will be settled DELIVERY.CCY, If SETTLEMENT.METHOD is PHYSICAL  </p>
            <p>and SETTLEMENT.INSTRUMENT is defined then SETTLEMENT.INSTRUMENT will be exercised for the SETTL.INSTR.UNITS at SETT.INSTR.PRICE, If  </p>
            <p>SETTLEMENT.INSTRUMENT is not given then security given in SECURITY.CODE will be exercised for the ACCRUED.UNITS1 at STRIKE.PRICE1. </p>            
        </desc>
</t>
<t>
<field>SETTLEMENT.INSTRUMENT</field>
<desc>
            <p>Defaults the settlement instrument from the DX.CONTRACT.MASTER.  No Input field. For contracts with SETTLMENT.METHOD = 'Physical', security transaction would be created for this instrument. </p>
            <p>This field is populated when physical settlement is through an alternate instrument such as an participatory note. </p>
        </desc>
</t>
<t>
<field>DELIVERY.CURRENCY</field>
<desc>
            <p>This defaults from the DX.CONTRACT.MASTER and cannot be amended. No Input field. For contracts with SETTLEMENT.METHOD = 'Cash',  settlement would take place in this currency. </p>
        </desc>
</t>
<t>
<field>SETTLEMENT.METHOD</field>
<desc>
            <p>This field will indicate how the delivery of the underlying will happen. The field will be defaulted from DX.CONTRACT.MASTER and can be changed manually. </p>
            <p>During the Fixing event if the SETTLEMENT.METHOD is CASH then SETTLEMENT.AMOUNT will be settled DELIVERY.CCY, If SETTLEMENT.METHOD is PHYSICAL  </p>
            <p>and SETTLEMENT.INSTRUMENT is defined then SETTLEMENT.INSTRUMENT will be exercised for the SETTL.INSTR.UNITS at SETT.INSTR.PRICE, If  </p>
            <p>SETTLEMENT.INSTRUMENT is not given then security given in SECURITY.CODE will be exercised for the ACCRUED.UNITS1 at STRIKE.PRICE1. </p>            
        </desc>
</t>
<t>
<field>NOVATION</field>
<desc>
            <p>Initially the field would be blank, at the time of novation, depending on the type of novation, the appropriate value should be selected.</p>
            <p>Allowed value are 'Internal Novation' 'External Novation'. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>                Input to this field is not allowed if KNOCK.OUT is set or if UNWIND is set to YES or FULL. </p>
            <p>				   Input to this field is not allowed if KNOCK.OUT or UNWIND is set to YES or FULL. </p>
        </desc>
</t>
<t>
<field>NOVATION.EFF.DATE</field>
<desc>
            <p>This field holds the effective date of novation. The Accrual would be stopped on this date. Defaults to the current system date. </p>
        </desc>
</t>
<t>
<field>NOVATION.FEE.CCY</field>
<desc>
            <p>This field holds the currency of the novation fee. </p>
        </desc>
</t>
<t>
<field>NOVATION.FEE.AMT</field>
<desc>
            <p>This field holds the novation fee amount. </p>
        </desc>
</t>
<t>
<field>NOVATION.FEE.ACC</field>
<desc>
            <p>This field holds the customer account from which the novation fee will be debited. </p>
        </desc>
</t>
<t>
<field>NOVATION.FROM</field>
<desc>
            <p>This field holds the client from whom the positon is transferred. For e.g.:- If Novation happens from Client A to Client B. This fields holds the value "Client A" in the SY.ACCU.DECU transaction for Client B. This is used for information purposes. </p>
        </desc>
</t>
<t>
<field>NOVATION.TO</field>
<desc>
            <p>This field holds the client to whom the position is transferred. For e.g.:- If Novation happens from Client A to Client B. This holds the value "Client B" in the SY.ACCU.DECU transaction for client A. This field is used for information purposes. </p>
        </desc>
</t>
<t>
<field>NOVATION.REFERENCE</field>
<desc>
            <p>This field can be used to give the reference of the novated contract </p>
        </desc>
</t>
<t>
<field>REMAINING.UNITS</field>
<desc>
            <p>This fields holds the remaining units for the contract, at the time of inception the value in this field would be equal to TOTAL.UNITS, subsequently during the life cycle of the contract, the remaining units would be reduced as a result of fixing, unwinding, knock out and novation events. </p>
        </desc>
</t>
<t>
<field>SETTLEMENT.ROLE</field>
<desc>
			<p>The value given here will be defaulted to PRINCIPAL.AGENT field in the SEC.TRADE generated at time of fixing. The PRINICIPAL.AGENT field  in SEC.TRADE is used for stamp tax calculation. </p>
			<p>It is possible that the bank is acting as a principal for the accumulator contract, but have signed a legal agreement with the customer to the effect that the bank will be acting as agent for the fixing transaction.</p>
        </desc>
</t>
<t>
<field>DEALER.DESK</field>
<desc>
            <p>Identifies the dealer desk relating to the transaction.  The same value would be used in the underlying option trade as well. </p>
        </desc>
</t>
<t>
<field>SUSPEND.BY.SYS</field>
<desc>
            <p>This field will be updated by the system if the trading is suspended in the stock exchange of the underlying equity. </p>
        </desc>
</t>
<t>
<field>CALC.SETTLE.AMT</field>
<desc>
            <p>This field holds the trigger for calculating the cash settlement amount. Once the market price is keyed in at the time of fixing, and this field needs to be set to 'Yes', to trigger the  system to calculate the settlement amount. </p>
            <p>This calcualtion would happen during the validation/commit of the contract and this flag would be reset. if recalculation is required then , this flag needs to be set to "Yes" again. This settlement amount calculated pertains only to the current fixing period. </p>
        </desc>
</t>
</menu>
</t24help>