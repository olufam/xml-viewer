<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>EB</product>
<table>EB.FORMAT.ENTRY</table>
</header>
<overview>
<ovdesc>

        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>PLACEMENT</field>
<desc>
            <p>A list of placement tasks that document where the data held in the standard storage variable.  Data can be stored in the <em>standard</em> output record and/or the <em>special</em> input record.</p>
            <p>These tasks fall in to two categories "named" and "un-named".  Unnamed placements take the data and store it directly into a location with no reference to the field/record names.  Named placement uses the Temenos&amp;trade; T24 STANDARD.SELECTION record to store the data into a location within the specified record.</p>
            <p>The data to be placed is held in the temporary storage variable, known as TEMP. </p>
            <table border="0" width="100%">
                <tr>
                    <td colspan="2" width="100%">"Un-named"         Placements</td>
                </tr>
                <tr>
                    <td width="10%"><strong>Placement Code</strong>
                    </td>
                    <td width="50%"><strong>Meaning/Effect</strong>
                    </td>
                </tr>
                <tr>
                    <td><strong>A,</strong><em><strong>x,y,z</strong></em>
                    </td>
                    <td>Append the data from TEMP into attribute&lt;<em>x,y,z</em>&gt;         of the standard <em>output</em> variable.</td>
                </tr>
                <tr>
                    <td><strong>AS,</strong><em><strong>x,y,z</strong></em>
                    </td>
                    <td>As A, but append the data to the <em>special</em>         variable.</td>
                </tr>
                <tr>
                    <td><strong>R,</strong><em><strong>x,y,z </strong></em>
                    </td>
                    <td>Replace attribute&lt;<em>x,y,z</em>&gt; of standard <em>output</em>         with TEMP</td>
                </tr>
                <tr>
                    <td><strong>RS,</strong><em><strong>x,y,z</strong></em><em></em>
                    </td>
                    <td>Replace attribute&lt;<em>x,y,z</em>&gt; of <em>special</em>         with TEMP.</td>
                </tr>
                <tr>
                    <td><strong>S,</strong><em><strong>x,y</strong></em>
                    </td>
                    <td>Place the data from TEMP into string standard <em>output</em>starting at character <em>x</em> and placing a maximum of         <em>y</em> characters.</td>
                </tr>
                <tr>
                    <td><strong>SS,</strong><em><strong>x,y</strong></em>
                    </td>
                    <td>Same as S, but place the data in the <em>special</em>         variable.</td>
                </tr>
                <tr>
                    <td><strong>P,</strong><em><strong>x,y,z</strong></em>
                    </td>
                    <td>Add the data from TEMP into attribute&lt;<em>x,y,z</em>&gt;         of the standard <em>output</em> variable   </td>
                </tr>
                <tr>
                    <td><strong>PS,</strong> to
<em><strong>x,y,z</strong></em></td>
                    <td>Same as P, but add the data in TEMP to the <em>special</em>         variable </td>
                </tr>
                <tr>
                    <td><strong>M,</strong><em><strong>x,y,z </strong></em>
                    </td>
                    <td>Subract the data in TEMP from attribute&lt;<em>x,y,z</em>&gt;         of the standard <em>output</em> variable   </td>
                </tr>
                <tr>
                    <td><strong>MS,</strong><em><strong>x,y,z </strong></em>
                    </td>
                    <td>Same as M , but subtract the data in TEMP from <em>special</em>         variable  </td>
                </tr>
                <tr>
                    <td><strong>X,</strong><em><strong>x,y,z</strong></em>
                    </td>
                    <td>Multiply the data in TEMP with attribute&lt;<em>x,y,z</em>&gt;         of the standard <em>output</em> variable  </td>
                </tr>
                <tr>
                    <td><strong>XS,</strong><em><strong>x,y,z </strong></em>
                    </td>
                    <td>Same as X , but mulitply the data in TEMP to the <em>special</em>         variable    </td>
                </tr>
                <tr>
                    <td><strong>D,</strong><em><strong>x,y,z </strong></em>
                    </td>
                    <td>Divide attribute&lt;<em>x,y,z</em>&gt;         of the standard <em>output</em> variable  by TEMP </td>
                </tr>
                <tr>
                    <td><strong>DS,</strong><em><strong>x,y,z</strong></em>
                    </td>
                    <td>Same as D , but divide the special by the data in TEMP  </td>
                </tr>
                <tr>
                    <td />
                    <td />
                </tr>
                <tr>
                    <td colspan="2" width="100%">"Named"         Placements</td>
                </tr>
                <tr>
                    <td width="10%"><strong>Placement Code</strong>
                    </td>
                    <td width="50%"><strong>Meaning/Effect</strong>
                    </td>
                </tr>
                <tr>
                    <td><strong>NA,</strong><em><strong>application,field         name,y,z</strong></em>
                    </td>
                    <td>Append the data from TEMP into attribute&lt;<em>field         name,y,z</em>&gt; of the standard <em>output</em>         variable.         i.e. NA,DX.TRANSACTION,CONTRACT.CODE becomes         N,,6 which will place TEMP data in the CONTRACT.CODE         field <em>output</em> variable.</td>
                </tr>
                <tr>
                    <td><strong>NAS,</strong><em><strong>application,field         name,y,z</strong></em>
                    </td>
                    <td>Same as A, but append the data to the <em>special</em>         variable.</td>
                </tr>
                <tr>
                    <td><strong>NR,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Replace attribute&lt;<em>field name,y,z</em>&gt; of         standard <em>output</em> with TEMP.</td>
                </tr>
                <tr>
                    <td><strong>NRS,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Replace attribute&lt;<em>field name,y,z</em>&gt; of <em>special</em>  with TEMP.</td>
                </tr>
                <tr>
                    <td><strong>NP,</strong><em><strong>application,field         name,y,z</strong></em>
                    </td>
                    <td>Add the data from TEMP into attribute&lt;<em>field         name,y,z</em>&gt; of the standard <em>output</em> variable   </td>
                </tr>
                <tr>
                    <td><strong>NPS,</strong><em><strong>application,field         name,y,z</strong></em>
                    </td>
                    <td>Same as P, but add the data to the <em>special</em>         variable   </td>
                </tr>
                <tr>
                    <td><strong>NM,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Subract the data in TEMP from attribute&lt;<em>field         name,y,z</em>&gt; of the standard <em>output</em> variable </td>
                </tr>
                <tr>
                    <td><strong>NMS,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Same as M, but subtract the data in Temp from the <em>special</em>         variable </td>
                </tr>
                <tr>
                    <td><strong>NX,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Mulitply the data in TEMP with attribute&lt;<em>field         name,y,z</em>&gt; of the standard <em>output</em> variable</td>
                </tr>
                <tr>
                    <td><strong>NXS,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Same as X, but multiply the data in Temp with the <em>special</em>  variable</td>
                </tr>
                <tr>
                    <td><strong>ND,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Divide attribute&lt;<em>field name,y,z</em>&gt; of         standard <em>output</em> by TEMP </td>
                </tr>
                <tr>
                    <td><strong>NDS,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Same as D, but divide the special by data in TEMP</td>
                </tr>
                <tr>
                    <td><strong>NV,</strong><em><strong>application,field name,value name</strong></em>
                    </td>
                    <td>Places data into a Value pair array. Specify the name in value name and data will be placed into the value pair array.</td>
                </tr>
                <tr>
                    <td />
                    <td />
                </tr>
            </table>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
            <p>Onsite changes will be disallowed if the record type is INTERNAL.</p>
        </desc>
</t>
<t>
<field>SHORT.DESC</field>
<desc>
            <p>A Short Description of the purpose of the format record.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>15 Character Max.</p>
            <p>Mandatory</p>
            <p>Onsite changes will be disallowed if the record type is INTERNAL.</p>
        </desc>
</t>
<t>
<field>RESERVED.09</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>RESERVED.02</field>
<desc>
            <p>Insert text here</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Rule 1</p>
            <p>Rule 2</p>
        </desc>
</t>
<t>
<field>RESERVED.06</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>RESERVED.04</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>RESERVED.10</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>RESERVED.03</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>RESERVED.05</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>RESERVED.01</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
            <p />
        </desc>
</t>
<t>
<field>VALIDATE</field>
<desc>
            <p>YES or NO or can be left NULL</p>
            <p>If set to YES then check is done to ensure that only valid Application/Field name is entered in Named Placement, Extraction and Link file conversion</p>
        </desc>
</t>
<t>
<field>RESERVED.07</field>
<desc>
            <p>Reserved for future use.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
        </desc>
</t>
<t>
<field>FMT.DESCRIPTION</field>
<desc>
            <p>A description of the purpose of the format records. </p>
            <p>For example;</p>
            <p><em>"Trade To Transaction Conversion, Converts a trade record into an internal transaction record."</em>
            </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None - Free Text</p>
            <p>Onsite changes will be disallowed if the record type is INTERNAL.</p>
        </desc>
</t>
<t>
<field>RECORD.TYPE</field>
<desc>
            <p>Is this record a record used internally within the core of a T24 module, or has the record be setup to be used as part of a locally developed routine.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>INTERNAL or EXTERNAL</p>
            <p>Records marked as INTERNAL can only be updated by         Temenos&amp;trade; Development.</p>
            <p>Records marked as EXTERNAL can be updated by anyone.</p>
            <p>Records can only be set as INTERNAL within Temenos&amp;trade;         Development.</p>
        </desc>
</t>
<t>
<field>CONVERSION</field>
<desc>
            <p>Documents conversion tasks to be applied to the data that was extracted from the <em>standard </em>input record or the <em>special</em> input record.  The data to be converted is held in the temporary storage variable, known as TEMP.  The result of the conversion replaces the current data in the temporary storage variable.</p>
            <table border="0" width="100%" class="Globus_Help.css">
                <tr>
                    <td valign="top" width="10%"><strong>Conversion Code</strong>
                    </td>
                    <td width="50%"><strong>Meaning</strong>
                    </td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>A,</strong><em><strong>pre,post</strong></em>
                    </td>
                    <td width="50%">Add the text <em>pre</em> before TEMP and         append the text <em>post</em>.</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>C,</strong><em><strong>chars,newchars</strong></em>
                    </td>
                    <td>Change the characters in the string <em>chars</em> to         the corresponding characters in <em>newchars</em>.</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>F,</strong><em><strong>delimiter,occurance,num</strong></em>
                    </td>
                    <td>Perform a DataBasic FIELD command using <em>delimiter</em>,         <em>occurrence</em> and <em>num</em> of occurrences required.</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>I,</strong><em><strong>conv</strong></em>
                    </td>
                    <td>Perform a DataBasic input conversion (ICONV) using <em>conv         </em>as the conversion mask.</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>L,</strong><em><strong>application,field         name</strong></em>
                    </td>
                    <td>Lookup record keyed by the data in TEMP in the T24         application "<em>application</em>" and return         the data in field <em>field name.         </em>I.E. L,DX.TRADE,BUY.SELL         Would extract the BUY.SELL field data from a DX.TRADE         record and store the result in the storage variable.</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>M,</strong><em><strong>mask</strong></em>
                    </td>
                    <td>Perform a DataBasic format mask          i.e. M,R#10 would apply R#10 mask to TEMP</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>O,</strong><em><strong>conv</strong></em>
                    </td>
                    <td>Perform a DataBasic output conversion (OCONV) using <em>conv         </em>as the conversion mask.</td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>R,</strong><em><strong>old,new</strong></em>
                    </td>
                    <td>Replaces the current value of TEMP with <em>new </em>if         the value of TEMP = <em>old.</em></td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>S,</strong><em><strong>sub,parameter(s)</strong></em>
                    </td>
                    <td>Call and external DataBasic subroutine <em>sub</em>,         and set TEMP to the result.         <strong>Note</strong>: The subroutine header should take         the following syntax         SUBROUTINE <em>sub</em>(RESULT,INPUT.DATA,<em>,parameter(s))</em></td>
                </tr>
                <tr>
                    <td valign="top" width="10%"><strong>T,</strong><em><strong>char,mode</strong></em>
                    </td>
                    <td>Trims character <em>char</em> from TEMP.          Apply the DataBasic TRIM function on character <em>char</em>         using <em>mode.</em><table border="0" width="100%"><tr><td valign="top" width="5%"><strong>Mode</strong></td><td width="50%"><strong>Description</strong></td></tr><tr><td valign="top" width="5%"><strong>A</strong></td><td>Remove all occurrences of character</td></tr><tr><td valign="top" width="5%"><strong>B</strong></td><td>Remove both leading and trailing occurrences                 of character</td></tr><tr><td valign="top" width="5%"><strong>D</strong></td><td>Remove leading, trailing, and redundant white                 space characters</td></tr><tr><td valign="top" width="5%"><strong>E</strong></td><td>Remove trailing white space characters</td></tr><tr><td valign="top" width="5%"><strong>F</strong></td><td>Remove leading white space characters</td></tr><tr><td valign="top" width="5%"><strong>L</strong></td><td>Remove all leading occurrences of character</td></tr><tr><td valign="top" width="5%"><strong>R</strong></td><td>Remove leading, trailing, and redundant                 occurrences of character</td></tr><tr><td valign="top" width="5%"><strong>T</strong></td><td>Remove all trailing occurrences of character</td></tr></table></td>
                </tr>
                <tr>
                    <td valign="top"><strong>U</strong>
                    </td>
                    <td>Raises the level of the universe delimiters in TEMP         Multivalues become Fields         Sub Multivalues become Multivalues</td>
                </tr>
                <tr>
                    <td valign="top"><strong>D</strong>
                    </td>
                    <td>Lowers the level of the universe delimiters in TEMP         Fields become Multivalues         Multivalues become Sub Multivalues</td>
                    <td />
                </tr>
            </table>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
            <p>Onsite changes will be disallowed if the record type is INTERNAL.</p>
        </desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
            <p>A brief description of the current formatting task.</p>
            <p>If prefixed by a '*' the whole formatting task set will be ignored by the formatting routines.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Mandatory</p>
            <p>Onsite changes will be disallowed if the record type is INTERNAL.</p>
        </desc>
</t>
<t>
<field>EB.FORMAT.ENTRY</field>
<desc>
            <p>This is a key by which the formating task record is idenitified. A meaningful word or phrase separated by valid characters.</p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>Mandatory</p>
            <p>35 Characters</p>
        </desc>
</t>
<t>
<field>EXTRACTION</field>
<desc>
            <p>A list of extraction tasks that document what data is to be extracted from the input record or the 'special' record and held in the storage variable.</p>
            <p>These tasks fall in to two categories "named" and "un-named". Unnamed extractions take data directly from a location with no reference to the field/record names.  Named extraction us the Temenos&amp;trade; T24 STANDARD.SELECTION record to extract data from a location within the record.</p>
            <p>"Un-named" Extractions</p>
            <table border="0" width="100%">
                <tr>
                    <td><strong>Extraction Code</strong>
                    </td>
                    <td><strong>Meaning</strong>
                    </td>
                </tr>
                <tr>
                    <td><strong>A,</strong><em><strong>x,y,z </strong></em>
                    </td>
                    <td>Extract the data from attribute&lt;<em>x,y,z</em>&gt;         of the <em>standard</em> input variable.</td>
                </tr>
                <tr>
                    <td><strong>AS,</strong><em><strong>x,y,z</strong></em>
                    </td>
                    <td>As A, but take the data from the <em>special</em>         input variable.</td>
                </tr>
                <tr>
                    <td><strong>C</strong><em><strong>,text</strong></em>
                    </td>
                    <td>Store the constant <em>text.</em></td>
                </tr>
                <tr>
                    <td><strong>S,</strong><em><strong>x,y</strong></em>
                    </td>
                    <td>Take a string of <em>y</em> characters, starting at <em>x</em>,         from standard input variable.</td>
                </tr>
                <tr>
                    <td><strong>SS,</strong><em><strong>x,y </strong></em>
                    </td>
                    <td>As S, but take the data from the <em>special</em>         input variable.</td>
                </tr>
            </table>
            <p>"Named" Extractions</p>
            <table border="0" width="100%">
                <tr>
                    <td valign="top"><strong>Extraction Code</strong>
                    </td>
                    <td><strong>Meaning</strong>
                    </td>
                </tr>
                <tr>
                    <td valign="top"><strong>N,</strong><em><strong>application,field         name,y,z </strong></em>
                    </td>
                    <td>Extract the data from attribute&lt;<em>field name,y,z</em>&gt;         of the <em>standard</em> input variable.         Where the format of the incoming record is known.          i.e. N,CUSTOMER,SHORT.NAME becomes         N,,2 which will extract the SHORT.NAME data from the <em>standard</em>         input variable.</td>
                </tr>
                <tr>
                    <td valign="top"><strong>NS,</strong><em><strong>application,field         name,y,z</strong></em><strong></strong>
                    </td>
                    <td>As A, but take the data from the <em>special </em>input         variable.</td>
                </tr>
                <tr>
                    <td valign="top"><strong>NV,</strong><em><strong>application,field name,value name</strong></em><strong></strong>
                    </td>
                    <td>Extracts data from a Value pair array. Specify the name in value name and data will be extracted from the next field. Takes the data from the <em>standard </em>input variable.</td>
                </tr>
            </table>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p />
            <p>None</p>
            <p>Onsite changes will be disallowed if the record type is INTERNAL.</p>
        </desc>
</t>
</menu>
</t24help>

