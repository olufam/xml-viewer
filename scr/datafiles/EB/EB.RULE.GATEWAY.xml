<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>EB</product>
<table>EB.RULE.GATEWAY</table>
</header>
<overview>
<ovdesc>

            <p>This T24 application is to define a single or set of rules to be executed in order, by any T24 application defined for it.The user will have the ability to specify a vetting table against which the result values are to be validated before passing the control back to the calling application. The user can either use a single rule to set the result value in which case the value returned by the rule will be validated against the vetting table (if specified), or they can specify result values (validated against the vetting table) and “true/false” type rules to determine if the result is applicable as per current functionality.  In addition, where we are testing multiple results using true/false rules which should be able to specify if we return only one result value (the first we find) or if we want to return multiple values ie we check all results specified and return a list of those that are true.</p>
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>DESCRIPTION</field>
<desc>
            <p>The description of the REG record can be given here.</p>
            <p />
            <p />
            <p>Validation rules</p>
            <p>Free format text</p>
            <p>1-35 characters </p>
            <p>Mandatory input</p>
        </desc>
</t>
<t>
<field>ONE.OFF.RULE.VERSION</field>
<desc>
            <p>A valid EB.RULES.VERSION record is to be input in this field for refering to a particular version of a rule. </p>
            <p />
            <p />
            <p>Validation rules</p>
            <p>This can accept a valid EB.RULES record key.</p>
            <p>0-65 characters </p>
        </desc>
</t>
<t>
<field>VETTING.TABLE</field>
<desc>
            <p>This can accept any valid T24 application. The data input in the fields DEFAULT.RESULT and EVAL.VALUE must be a valid key in the </p>
            <p>application mentioned in this field. </p>
            <p />
            <p>Validation rules</p>
            <p>This can accept applications of types H,U,L,T,W or D.</p>
            <p>0-25 characters </p>
        </desc>
</t>
<t>
<field>EVAL.RULE.VERSION</field>
<desc>
            <p>A valid EB.RULES.VERSION record is to be input in this field for refering to a particular version of a rule. </p>
            <p />
            <p />
            <p>Validation rules</p>
            <p>This can accept a valid EB.RULES record key.</p>
            <p>0-65 characters </p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>EVAL.MODE</field>
<desc>
            <p>This field instructs the result capture mode to the system. There are some predefined modes </p>
            <p>First.True-To return the result of the first rule whose execution status is TRUE, in the list of rules of a REG record</p>
            <p>First.False-To return the result of the first rule whose execution status is FALSE, in the list of rules of a REG record</p>
            <p>All.True-To return the result of the all the rules whose execution status is TRUE, in the list of rules of a REG record</p>
            <p>All.False-To return the result of the all the rules whose execution status is FALSE, in the list of rules of a REG record</p>
            <p>All.Rules-To return the result of the all the rules of a REG record</p>
            <p />
            <p />
            <p>Validation rules</p>
            <p>1-12 characters </p>
            <p />
        </desc>
</t>
<t>
<field>EVAL.RULE</field>
<desc>
            <p>A valid EB.RULES record is to be input in this field. The field set EVAL.RULE,EVAL.RULE.VERSION and ONE.OFF.RULE, ONE.OFF.RULE.VERSION together are mutually </p>
            <p>exclusive. A single REG record can be defined for ONE.OFF.RULE/ONE.OFF.RULE.VERSION or EVAL.RULE/EVAL.RULE.VERSION. </p>
            <p>Any rule mentioned here will take the latest version of the rule from its record in EB.RULES.VERSION file.</p>
            <p>This field and EVAL.RULE.VERSION are mutually exclusive fields.</p>
            <p />
            <p>Validation rules</p>
            <p>This can accept a valid EB.RULES record key.</p>
            <p>0-35 characters </p>
        </desc>
</t>
<t>
<field>SHORT.DESC</field>
<desc>
            <p>This is to have a short description on the REG record.</p>
            <p />
            <p />
            <p>Validation rules</p>
            <p>1-15 characters of free text format</p>
            <p>Mandatory input</p>
        </desc>
</t>
<t>
<field>REG.ID</field>
<desc>
            <p>This is the id of the REG record. </p>
            <p />
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>1-35 characters and the characters allowed are : "A-Z", "0-9" and "-." and the first character has to be alpha</p>
        </desc>
</t>
<t>
<field>EVAL.VALUE</field>
<desc>
            <p>This can accept any value if VETTING.TABLE is not defined, otherwise only valid keys of the file</p>
            <p>mentioned in VETTING.TABLE. The value in this field is used to replace the result of the particular rule.</p>
            <p />
            <p>Validation rules</p>
            <p>0-35 characters </p>
            <p>Mandatory input</p>
        </desc>
</t>
<t>
<field>DEFAULT.RESULT</field>
<desc>
            <p>This can accept any value if VETTING.TABLE is not defined, otherwise only valid keys of the file</p>
            <p>mentioned in VETTING.TABLE. The value in this field is used to replace the results of failed rules.</p>
            <p />
            <p>Validation rules</p>
            <p>0-35 characters </p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>OVERRIDE</field>
<desc>
            <p>Contains details of any overrides.</p>
            <p />
            <p>Validation rules</p>
            <p>Up to 35 type A (alphanumeric) characters. Multivalue field. (Internal field.)</p>
            <p />
            <p />
        </desc>
</t>
<t>
<field>RULE.VERSION</field>
<desc>
            <p>This is an auto populate field which will be populated with the RULE and version of the 'context' in the respective CONTEXT.ID field </p>
            <p />
            <p>Validation rules</p>
            <p>1-65 characters </p>
            <p>Auto populate field</p>
        </desc>
</t>
<t>
<field>ONE.OFF.RULE</field>
<desc>
            <p>A valid EB.RULES record is to be input in this field. The field set EVAL.RULE,EVAL.RULE.VERSION and ONE.OFF.RULE, ONE.OFF.RULE.VERSION together are mutually </p>
            <p>exclusive. A single REG record can be defined for ONE.OFF.RULE/ONE.OFF.RULE.VERSION or EVAL.RULE/EVAL.RULE.VERSION. </p>
            <p>Any rule mentioned here will take the latest version of the rule from its record in EB.RULES.VERSION file.</p>
            <p>This field and ONE.OFF.RULE.VERSION are mutually exclusive fields.</p>
            <p />
            <p>Validation rules</p>
            <p>This can accept a valid EB.RULES record key.</p>
            <p>0-35 characters </p>
        </desc>
</t>
<t>
<field>CALLING.APPL</field>
<desc>
            <p>This can accept a valid T24 application for which the rules of the REG record are to be evaluated. </p>
            <p />
            <p>Validation rules</p>
            <p>This can accept applications of types H,U,L,T,W or D.</p>
            <p>1-25 characters </p>
            <p>Mandatory input</p>
            <p />
        </desc>
</t>
<t>
<field>CONTEXT.FLD</field>
<desc>
            <p>This forms a part the associated field set CALLING.APPL,CUST.CTX.FLD and CONTEXT.FLD</p>
            <p>This field is to define from where the key is to be fetched for the application defined in the respective associated field CALLING.APPL</p>
            <p />
            <p />
            <p>Validation rules</p>
            <p>This can accept three kinds of data input</p>
            <p>a valid single value data/local reference field</p>
            <p>a valid EB.API routine prefixed with @ </p>
            <p>a jdescriptor field similar to that of a jdescriptor in T24.</p>
            <p />
            <p>Example</p>
            <p />
            <p>DEBIT.ACCT.NO - a field in FUNDS.TRANSFER </p>
            <p>@GET.VALUE - GET.VALUE is an EB.API routine, the prefix is a must to differentiate it </p>
            <p>from a field of an application</p>
            <p>FUNDS.TRANSFER&gt;DEBIT.ACCOUNT.NO&gt;ACCOUNG - a valid jdescriptor </p>
            <p />
            <p />
            <p>1-150 characters </p>
            <p>Mandatory input</p>
            <p />
        </desc>
</t>
<t>
<field>CONTEXT.ID</field>
<desc>
            <p>This field is populated by T24 which holds the respective EB.CONTEXT record id.</p>
            <p />
            <p>Validation rules</p>
            <p>1-65 characters </p>
            <p>Auto populate field</p>
        </desc>
</t>
<t>
<field>CUST.CTX.FLD</field>
<desc>
            <p>This is an auto populate field. This field will be populated with the EB.CONTEXT records</p>
            <p>of the rules mentioned in ONE.OFF.RULE/VERSION or the EVAL.RULE/VERSION. </p>
            <p />
            <p>Validation rules</p>
            <p>1-65 characters </p>
            <p>Auto populate field</p>
        </desc>
</t>
</menu>
</t24help>

