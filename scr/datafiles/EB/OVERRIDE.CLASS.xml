<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>EB</product>
<table>OVERRIDE.CLASS</table>
</header>
<overview>
<ovdesc>

            <p>This table will allow the user to group into different classifications any override message generated by a T24 application.  Each override message defined in an application or in a subroutine of an application can be classified but please note the system does not force it. </p>
            <p>Classification will be done by creating an OVERRIDE.CLASS record by means of OVERRIDE.CLASS table where the ID is the application name, Field 1 is the (hardcoded) override message and Field 3 is the classification code.  Field 2 can be used to qualify an override message based on its variable elements and set up different classifications based upon these (see T24 Help Text, OVERRIDE CLASS DETAILS). Fields 1 to 3 are multivalue to allow the inclusion, if necessary, of all override messages of an application. </p>
            <p>A classified override can only be approved by a user who has the allowance for this code.  The allowance is defined by the content of the field within the USER record ('OVERRIDE.CLASS'), which is a multivalue field. </p>
            <p>The approval can be done by inputter, authoriser (first or second when more than one) or a 3rd or more person. </p>
            <p>When the record is authorised but not every override approved the status of the record will be 'fNAO' (f=Function). </p>
            <p>The status of the override will be displayed at the end of the text (separated by field mark).  First suffix = classification code of OVERRIDE.CLASS record (if any), 'second suffix' = way of approval: 'I' = Inputter did it, 'A' resp. 'A1' or 'A2' = Authoriser, any name = name of the person approving an override after authorisation. </p>
            <p>Approval (after authorisation) will be done by means of the standard authorisation function (A-Function).  This override approval function can be used although the operator has no allowance for function 'A' in his user profile but has one or more classification codes in his user record. </p>
            <p>When an authoriser or an approver is not able to approve all overrides he will see a warning (after keying in ID) 'YOU CAN'T APPROVE ALL OVERRIDES' which he has to override resp. he can say 'NO'. </p>
        </ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>OVERRIDE.TEXT</field>
<desc>
            <p>Specifies the exact override text (hardcoded in the ID application) for which the user wants to define a specific classification. </p>
            <p>This field is multivalue to allow the user to define specific classifications for some or all of the override messages of the ID application. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>2 to 65 type A (alphanumeric) characters. Multivalue associated field. (Mandatory input)</p>
        </desc>
</t>
<t>
<field>APPLICATION</field>
<desc>
            <p>Identifies the application name for which the override classification rules defined in this table apply. </p>
            <p>This field specifies the application for which override classification details are to be defined.  Any valid application name for which an override field is present on the main record will be accepted. </p>
            <p>Note:      The override messages of the application ID which are            not defined within this table can be overridden by any            user who has received access to this particular            application. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Must contain an existing application or an abbreviation code. (Mandatory input)</p>
        </desc>
</t>
<t>
<field>DEFAULT.CLASS</field>
<desc>
            <p>Format;   4 type A (alphanumeric) characters. </p>
            <p>   Multi-value field.    (Optional input; default value = none.) </p>
            <p>This is the class that will be used if there is no match returned from OVERRIDE.CLASS.DETAILS (or where OVERRIDE.CLASS.DETAILS is not used at all). </p>
            <p />
            <p>The value(s) used are compared with those found on the USER profile, the field is optional as the class can be derived from the settings found in the OVERRIDE.CLASS.DETAILS table. </p>
        </desc>
</t>
<t>
<field>OVERRIDE.DETAIL</field>
<desc>
            <p>This is the key to the OVERRIDE.CLASS.DETAILS record that can be used to make the override check more conditional. In that application you can check the contents of the override message and set the level of authority that must be used to finalise the override. </p>
            <p>For example where there is a currency and amount returned in the override you can convert these to a local currency amount in order to set the level of priveleges required to authorise the override. </p>
            <p>Another is a simple literal check which could be used to set levels of authority accoriding to the presence of specific words in the override. </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Must be a valid record on OVERRIDE.CLASS.DETAILS.</p>
        </desc>
</t>
<t>
<field>OVERRIDE.DETAILS</field>
<desc>
            <p>A decision table which can be used to classify the override message on the basis of its variable elements. </p>
            <p>The item-id to a record on the OVERRIDE CLASS file.  This file permits the definition of a decision table which can be used to evaluate the override message in greater detail and to assign a different classification based upon the variable elements of the message. </p>
            <p>This field can be used if a single override message has to be classified differently depending upon the circumstances under which it arises. </p>
            <p>A typical example might be an 'unauthorised overdraft' message.  This message appears in the format 'ACCOUNT-&amp; UNAUTHORISED OVERDRAFT &amp; &amp;', where each character '&amp;' (ampersand) represents a variable element of the message.  The variable elements are replaced at run-time with the values from the transaction being processed.  In the case of the overdraft message, the three ampersand characters are substituted with the account number, the amount of the overdraft and the currency respectively.  OVERRIDE DETAIL can be used to indicate a decision table which will look at the amount of the overdraft and assign a different classification depending on the extent of the overdrawn balance.  In this way, it is possible to specify that small overdrafts can be approved by some users but larger ones have to be approved at a more senior level. </p>
            <p>The functionality of OVERRIDE DETAIL is explained more fully in the </p>
            <p>Specifies the classification type for the override message defined in field 1, OVERRIDE TEXT. </p>
            <p>The various classifications which can be defined in this field allow the user to define within each application different levels of approval according to the nature of the override itself.  It is probable, e.g. that some users are allowed to override a value date exception while an unauthorised overdraft can only be approved by some (other) specific users.  The user profile (Field 39.1 i.e. OVERRIDE.CLASS) will specify for each user which type of override class he is allowed to approve. </p>
            <p>If the corresponding value in field 2 (OVERRIDE DETAIL) is blank, whatever classification is entered in this field will automatically be assigned to the override message. </p>
            <p>If field 2 is not empty, the DEFAULT CLASS will only be assigned if the processing of OVERRIDE DETAIL (field 3) fails to assign a classification.  For details of this processing, see the T24 Help Text for application OVERRIDE CLASS DETAILS. </p>
            <p>Example for ID application = DATA.CAPTURE. </p>
            <p>Field Name          Field Content </p>
            <p>1.1  OVERRIDE TEXT      VAL.DATE &gt; OVERRIDE DATE 3.1  DEFAULT CLASS      INP </p>
            <p>Field Name          Field Content </p>
            <p>1.2  OVERRIDE TEXT  VAL.DATE IS A NON-WORKING DAY 3.1  DEFAULT CLASS  AUT1 </p>
            <p>1.3  OVERRIDE TEXT  ACCOUNT -&amp; UNAUTHORISED OVERDRAFT 3.1  DEFAULT CLASS  AUT2 </p>
            <p>
                <p>Validation Rules:</p>
            </p>
            <p>Up to 12 type A (alphanumeric) characters. Multivalue associated field. (Optional input) 4 type A (alphanumeric) characters. Multivalue associated field. (Optional input)</p>
        </desc>
</t>
</menu>
</t24help>

