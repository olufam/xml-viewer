<?xml version="1.0" encoding="utf-8"?>
<t24help>
<header>
<product>EB</product>
<table>SEAT.COMPONENT</table>
</header>
<overview>
<ovdesc></ovdesc>
<ovimage></ovimage>
</overview>
<menu>
<t>
<field>ARGUMENT.NUM</field>
<desc>
        <p>This field denotes the position of the argument in the component. The argument value is passed at the mentioned position when the component is test. It is mandatory to define the arguments in ascending order. The arguments are shuffled according to the position defined when the routine is called. Argument number should not be defined for common variables The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set.</p>
    </desc>
</t>
<t>
<field>COMMON.ROUTINE</field>
<desc>
        <p>This field optionally denotes the name of a Common routine for use with the component. If specified, this field should contain an alphanumeric name not exceeding 35 characters in length.</p>
    </desc>
</t>
<t>
<field></field>
<desc>
        <p>This field denotes whether the component has been published. Allowed values are Y or nul.</p>
        <p>WRAP.ROUTINE</p>
        <p>This field represents the name of the wrapper routine. If some common variables, which are not part of the argument list needs to be passed to the component , a wrapper routine needs to be defined. The wrapper routine contains three arguments, COMPONENT.ID - name of the component ARG.LIST - List of arguments passed to the component COM.LIST - List of common arguments to be used by the routin.</p>
        <p>ARG.DIRECTION</p>
        <p>This field denotes the direction of each argument, whether the argument is incoming, outgoing or modifIed. Allowed values are INCOMING - Value of the argument is fed to the routine OUTGOING - Value of the argument is fed from the routine MODIFIED - Value of the argument is fed to the routine and the routine alters its value. The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set. Mandatory fiel.</p>
        <p>ARGU.DES</p>
        <p>This field describes each of the argument. This field can be expanded to allow the User to enter the description of the argument in various languages. Each expansion of the field will correspond to a new Language as defined in the LANGUAGE table (Ref: GENERAL TABLES), and will indicate to the User the Language in which the Description must be entered. The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set. </p>
        <p>Validation Rules</p>
        <p>: Up to 35 type A (alphanumeric) characters.</p>
        <p>ARGUMENT.NAME</p>
        <p>This field denotes the name of the argument to be passed to the component. The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set. Some common variables which the component needs can be defined here </p>
        <p>Validation Rules</p>
        <p> Mandatory Field. Up to 35 type A (alphanumeric) character.</p>
        <p>ARGUMENT.NUM</p>
        <p>This field denotes the position of the argument in the component. The argument value is passed at the mentioned position when the component is test. It is mandatory to define the arguments in ascending order. The arguments are shuffled according to the position defined when the routine is called. Argument number should not be defined for common variables The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set.</p>
        <p>COMMON.ROUTINE</p>
        <p>This field optionally denotes the name of a Common routine for use with the component. If specified, this field should contain an alphanumeric name not exceeding 35 characters in length.</p>
        <p>DESCRIPTION</p>
        <p>This field describes the component and is used for enrichment. This field can be expanded to allow the User to enter the description of the component in various languages. Each expansion of the field will correspond to a new Language as defined in the LANGUAGE table (Ref: GENERAL TABLES), and will indicate to the User the Language in which the Description must be entered. </p>
        <p>Validation Rules</p>
        <p> Mandatory Field. Up to 35 type A (alphanumeric) characters.</p>
        <p>KEY</p>
        <p>This field denotes the actual name of the subroutine to be tested, whose details are defined in SEAT.COMPONENT record. Should be valid subroutine in T2.</p>
        <p>NUM.PASS.ARGS</p>
        <p>This field denotes total number of arguments of the component (routine) . Mandatory fiel.</p>
        <p>PRODUCT</p>
        <p>This field represents the T24 product the component belongs to. Should be a valid T24 product</p>
    </desc>
</t>
<t>
<field>ARG.DIRECTION</field>
<desc>
        <p>This field denotes the direction of each argument, whether the argument is incoming, outgoing or modifIed. Allowed values are INCOMING - Value of the argument is fed to the routine OUTGOING - Value of the argument is fed from the routine MODIFIED - Value of the argument is fed to the routine and the routine alters its value. The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set. Mandatory field</p>
    </desc>
</t>
<t>
<field>ARGU.DES</field>
<desc>
        <p>This field describes each of the argument. This field can be expanded to allow the User to enter the description of the argument in various languages. Each expansion of the field will correspond to a new Language as defined in the LANGUAGE table (Ref: GENERAL TABLES), and will indicate to the User the Language in which the Description must be entered. The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set. </p>
        <p>Validation Rules</p>
        <p>: Up to 35 type A (alphanumeric) characters.</p>
    </desc>
</t>
<t>
<field>ARGUMENT.NAME</field>
<desc>
        <p>This field denotes the name of the argument to be passed to the component. The fields starting from ARGUMENT.NAME to ARG.DIRECTION form associated multivalue set. Some common variables which the component needs can be defined here </p>
        <p>Validation Rules</p>
        <p> Mandatory Field. Up to 35 type A (alphanumeric) characters</p>
    </desc>
</t>
<t>
<field>PUBLISHED</field>
<desc><p>This field denotes whether the component has been published. Allowed values are Y or null</p></desc>
</t>
<t>
<field>DESCRIPTION</field>
<desc>
        <p>This field describes the component and is used for enrichment. This field can be expanded to allow the User to enter the description of the component in various languages. Each expansion of the field will correspond to a new Language as defined in the LANGUAGE table (Ref: GENERAL TABLES), and will indicate to the User the Language in which the Description must be entered. </p>
        <p>Validation Rules</p>
        <p> Mandatory Field. Up to 35 type A (alphanumeric) characters.</p>
    </desc>
</t>
<t>
<field>KEY</field>
<desc>
        <p>This field denotes the actual name of the subroutine to be tested, whose details are defined in SEAT.COMPONENT record. Should be valid subroutine in T24</p>
    </desc>
</t>
<t>
<field>WRAP.ROUTINE</field>
<desc>
        <p>This field represents the name of the wrapper routine. If some common variables, which are not part of the argument list needs to be passed to the component , a wrapper routine needs to be defined. The wrapper routine contains three arguments, COMPONENT.ID - name of the component ARG.LIST - List of arguments passed to the component COM.LIST - List of common arguments to be used by the routine</p>
    </desc>
</t>
<t>
<field>NUM.PASS.ARGS</field>
<desc>
        <p>This field denotes total number of arguments of the component (routine) . Mandatory field</p>
    </desc>
</t>
<t>
<field>PRODUCT</field>
<desc>
        <p>This field represents the T24 product the component belongs to. Should be a valid T24 product</p>
    </desc>
</t>
</menu>
</t24help>

